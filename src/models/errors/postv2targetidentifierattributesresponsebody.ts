/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  Response400Code,
  Response400Code$inboundSchema,
  Response400Code$outboundSchema,
} from "./response400code.js";
import {
  Response400Type,
  Response400Type$inboundSchema,
  Response400Type$outboundSchema,
} from "./response400type.js";

/**
 * Bad Request
 */
export type PostV2TargetIdentifierAttributesResponseBodyData = {
  statusCode: number;
  type: Response400Type;
  code: Response400Code;
  message: string;
};

/**
 * Bad Request
 */
export class PostV2TargetIdentifierAttributesResponseBody extends Error {
  statusCode: number;
  type: Response400Type;
  code: Response400Code;

  /** The original data that was passed to this error instance. */
  data$: PostV2TargetIdentifierAttributesResponseBodyData;

  constructor(err: PostV2TargetIdentifierAttributesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2TargetIdentifierAttributesResponseBody";
  }
}

/** @internal */
export const PostV2TargetIdentifierAttributesResponseBody$inboundSchema:
  z.ZodType<
    PostV2TargetIdentifierAttributesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type: Response400Type$inboundSchema,
    code: Response400Code$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new PostV2TargetIdentifierAttributesResponseBody(remapped);
    });

/** @internal */
export type PostV2TargetIdentifierAttributesResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2TargetIdentifierAttributesResponseBody$outboundSchema:
  z.ZodType<
    PostV2TargetIdentifierAttributesResponseBody$Outbound,
    z.ZodTypeDef,
    PostV2TargetIdentifierAttributesResponseBody
  > = z.instanceof(PostV2TargetIdentifierAttributesResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type: Response400Type$outboundSchema,
        code: Response400Code$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2TargetIdentifierAttributesResponseBody$ {
  /** @deprecated use `PostV2TargetIdentifierAttributesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2TargetIdentifierAttributesResponseBody$inboundSchema;
  /** @deprecated use `PostV2TargetIdentifierAttributesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2TargetIdentifierAttributesResponseBody$outboundSchema;
  /** @deprecated use `PostV2TargetIdentifierAttributesResponseBody$Outbound` instead. */
  export type Outbound = PostV2TargetIdentifierAttributesResponseBody$Outbound;
}
