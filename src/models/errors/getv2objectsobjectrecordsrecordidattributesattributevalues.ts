/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType =
  {
    InvalidRequestError: "invalid_request_error",
  } as const;
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType
  >;

export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode =
  {
    NotFound: "not_found",
  } as const;
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode
  >;

/**
 * Not Found
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBodyData =
  {
    statusCode: number;
    type: GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType;
    code: GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode;
    message: string;
  };

/**
 * Not Found
 */
export class GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody
  extends Error
{
  statusCode: number;
  type: GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType;
  code: GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode;

  /** The original data that was passed to this error instance. */
  data$:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBodyData;

  constructor(
    err:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name =
      "GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody";
  }
}

export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType
  >;

export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode = {
  ValidationType: "validation_type",
} as const;
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode
  >;

/**
 * Bad Request
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBodyData =
  {
    statusCode: number;
    type: GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType;
    code: GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode;
    message: string;
  };

/**
 * Bad Request
 */
export class GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody
  extends Error
{
  statusCode: number;
  type: GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType;
  code: GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode;

  /** The original data that was passed to this error instance. */
  data$:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBodyData;

  constructor(
    err:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name =
      "GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody";
  }
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType$inboundSchema,
    code:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody(
        remapped,
      );
    });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody$Outbound =
  {
    status_code: number;
    type: string;
    code: string;
    message: string;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody
  > = z.instanceof(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody,
  )
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type:
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsType$outboundSchema,
        code:
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRecordsResponseBody$Outbound;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType$inboundSchema,
    code:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody(
        remapped,
      );
    });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$Outbound =
  {
    status_code: number;
    type: string;
    code: string;
    message: string;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody
  > = z.instanceof(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody,
  )
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type:
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesType$outboundSchema,
        code:
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$Outbound;
}
