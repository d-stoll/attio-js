/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const PostV2ListsListEntriesEntriesType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PostV2ListsListEntriesEntriesType = ClosedEnum<
  typeof PostV2ListsListEntriesEntriesType
>;

export const PostV2ListsListEntriesEntriesCode = {
  NotFound: "not_found",
} as const;
export type PostV2ListsListEntriesEntriesCode = ClosedEnum<
  typeof PostV2ListsListEntriesEntriesCode
>;

/**
 * Not Found
 */
export type PostV2ListsListEntriesEntriesResponseBodyData = {
  statusCode: number;
  type: PostV2ListsListEntriesEntriesType;
  code: PostV2ListsListEntriesEntriesCode;
  message: string;
};

/**
 * Not Found
 */
export class PostV2ListsListEntriesEntriesResponseBody extends Error {
  statusCode: number;
  type: PostV2ListsListEntriesEntriesType;
  code: PostV2ListsListEntriesEntriesCode;

  /** The original data that was passed to this error instance. */
  data$: PostV2ListsListEntriesEntriesResponseBodyData;

  constructor(err: PostV2ListsListEntriesEntriesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2ListsListEntriesEntriesResponseBody";
  }
}

export const PostV2ListsListEntriesType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PostV2ListsListEntriesType = ClosedEnum<
  typeof PostV2ListsListEntriesType
>;

export const PostV2ListsListEntriesCode = {
  ValueNotFound: "value_not_found",
} as const;
export type PostV2ListsListEntriesCode = ClosedEnum<
  typeof PostV2ListsListEntriesCode
>;

/**
 * Bad Request
 */
export type PostV2ListsListEntriesResponseBodyData = {
  statusCode: number;
  type: PostV2ListsListEntriesType;
  code: PostV2ListsListEntriesCode;
  message: string;
};

/**
 * Bad Request
 */
export class PostV2ListsListEntriesResponseBody extends Error {
  statusCode: number;
  type: PostV2ListsListEntriesType;
  code: PostV2ListsListEntriesCode;

  /** The original data that was passed to this error instance. */
  data$: PostV2ListsListEntriesResponseBodyData;

  constructor(err: PostV2ListsListEntriesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2ListsListEntriesResponseBody";
  }
}

/** @internal */
export const PostV2ListsListEntriesEntriesType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListEntriesEntriesType
> = z.nativeEnum(PostV2ListsListEntriesEntriesType);

/** @internal */
export const PostV2ListsListEntriesEntriesType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListEntriesEntriesType
> = PostV2ListsListEntriesEntriesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListEntriesEntriesType$ {
  /** @deprecated use `PostV2ListsListEntriesEntriesType$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsListEntriesEntriesType$inboundSchema;
  /** @deprecated use `PostV2ListsListEntriesEntriesType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ListsListEntriesEntriesType$outboundSchema;
}

/** @internal */
export const PostV2ListsListEntriesEntriesCode$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListEntriesEntriesCode
> = z.nativeEnum(PostV2ListsListEntriesEntriesCode);

/** @internal */
export const PostV2ListsListEntriesEntriesCode$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListEntriesEntriesCode
> = PostV2ListsListEntriesEntriesCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListEntriesEntriesCode$ {
  /** @deprecated use `PostV2ListsListEntriesEntriesCode$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsListEntriesEntriesCode$inboundSchema;
  /** @deprecated use `PostV2ListsListEntriesEntriesCode$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ListsListEntriesEntriesCode$outboundSchema;
}

/** @internal */
export const PostV2ListsListEntriesEntriesResponseBody$inboundSchema: z.ZodType<
  PostV2ListsListEntriesEntriesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: PostV2ListsListEntriesEntriesType$inboundSchema,
  code: PostV2ListsListEntriesEntriesCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new PostV2ListsListEntriesEntriesResponseBody(remapped);
  });

/** @internal */
export type PostV2ListsListEntriesEntriesResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2ListsListEntriesEntriesResponseBody$outboundSchema:
  z.ZodType<
    PostV2ListsListEntriesEntriesResponseBody$Outbound,
    z.ZodTypeDef,
    PostV2ListsListEntriesEntriesResponseBody
  > = z.instanceof(PostV2ListsListEntriesEntriesResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type: PostV2ListsListEntriesEntriesType$outboundSchema,
        code: PostV2ListsListEntriesEntriesCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListEntriesEntriesResponseBody$ {
  /** @deprecated use `PostV2ListsListEntriesEntriesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ListsListEntriesEntriesResponseBody$inboundSchema;
  /** @deprecated use `PostV2ListsListEntriesEntriesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ListsListEntriesEntriesResponseBody$outboundSchema;
  /** @deprecated use `PostV2ListsListEntriesEntriesResponseBody$Outbound` instead. */
  export type Outbound = PostV2ListsListEntriesEntriesResponseBody$Outbound;
}

/** @internal */
export const PostV2ListsListEntriesType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListEntriesType
> = z.nativeEnum(PostV2ListsListEntriesType);

/** @internal */
export const PostV2ListsListEntriesType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListEntriesType
> = PostV2ListsListEntriesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListEntriesType$ {
  /** @deprecated use `PostV2ListsListEntriesType$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsListEntriesType$inboundSchema;
  /** @deprecated use `PostV2ListsListEntriesType$outboundSchema` instead. */
  export const outboundSchema = PostV2ListsListEntriesType$outboundSchema;
}

/** @internal */
export const PostV2ListsListEntriesCode$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListEntriesCode
> = z.nativeEnum(PostV2ListsListEntriesCode);

/** @internal */
export const PostV2ListsListEntriesCode$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListEntriesCode
> = PostV2ListsListEntriesCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListEntriesCode$ {
  /** @deprecated use `PostV2ListsListEntriesCode$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsListEntriesCode$inboundSchema;
  /** @deprecated use `PostV2ListsListEntriesCode$outboundSchema` instead. */
  export const outboundSchema = PostV2ListsListEntriesCode$outboundSchema;
}

/** @internal */
export const PostV2ListsListEntriesResponseBody$inboundSchema: z.ZodType<
  PostV2ListsListEntriesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: PostV2ListsListEntriesType$inboundSchema,
  code: PostV2ListsListEntriesCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new PostV2ListsListEntriesResponseBody(remapped);
  });

/** @internal */
export type PostV2ListsListEntriesResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2ListsListEntriesResponseBody$outboundSchema: z.ZodType<
  PostV2ListsListEntriesResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2ListsListEntriesResponseBody
> = z.instanceof(PostV2ListsListEntriesResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      statusCode: z.number(),
      type: PostV2ListsListEntriesType$outboundSchema,
      code: PostV2ListsListEntriesCode$outboundSchema,
      message: z.string(),
    }).transform((v) => {
      return remap$(v, {
        statusCode: "status_code",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListEntriesResponseBody$ {
  /** @deprecated use `PostV2ListsListEntriesResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsListEntriesResponseBody$inboundSchema;
  /** @deprecated use `PostV2ListsListEntriesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ListsListEntriesResponseBody$outboundSchema;
  /** @deprecated use `PostV2ListsListEntriesResponseBody$Outbound` instead. */
  export type Outbound = PostV2ListsListEntriesResponseBody$Outbound;
}
