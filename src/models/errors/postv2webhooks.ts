/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const PostV2WebhooksType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PostV2WebhooksType = ClosedEnum<typeof PostV2WebhooksType>;

export const PostV2WebhooksCode = {
  ValidationType: "validation_type",
} as const;
export type PostV2WebhooksCode = ClosedEnum<typeof PostV2WebhooksCode>;

/**
 * Bad Request
 */
export type PostV2WebhooksResponseBodyData = {
  statusCode: number;
  type: PostV2WebhooksType;
  code: PostV2WebhooksCode;
  message: string;
};

/**
 * Bad Request
 */
export class PostV2WebhooksResponseBody extends Error {
  statusCode: number;
  type: PostV2WebhooksType;
  code: PostV2WebhooksCode;

  /** The original data that was passed to this error instance. */
  data$: PostV2WebhooksResponseBodyData;

  constructor(err: PostV2WebhooksResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2WebhooksResponseBody";
  }
}

/** @internal */
export const PostV2WebhooksType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2WebhooksType
> = z.nativeEnum(PostV2WebhooksType);

/** @internal */
export const PostV2WebhooksType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2WebhooksType
> = PostV2WebhooksType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2WebhooksType$ {
  /** @deprecated use `PostV2WebhooksType$inboundSchema` instead. */
  export const inboundSchema = PostV2WebhooksType$inboundSchema;
  /** @deprecated use `PostV2WebhooksType$outboundSchema` instead. */
  export const outboundSchema = PostV2WebhooksType$outboundSchema;
}

/** @internal */
export const PostV2WebhooksCode$inboundSchema: z.ZodNativeEnum<
  typeof PostV2WebhooksCode
> = z.nativeEnum(PostV2WebhooksCode);

/** @internal */
export const PostV2WebhooksCode$outboundSchema: z.ZodNativeEnum<
  typeof PostV2WebhooksCode
> = PostV2WebhooksCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2WebhooksCode$ {
  /** @deprecated use `PostV2WebhooksCode$inboundSchema` instead. */
  export const inboundSchema = PostV2WebhooksCode$inboundSchema;
  /** @deprecated use `PostV2WebhooksCode$outboundSchema` instead. */
  export const outboundSchema = PostV2WebhooksCode$outboundSchema;
}

/** @internal */
export const PostV2WebhooksResponseBody$inboundSchema: z.ZodType<
  PostV2WebhooksResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: PostV2WebhooksType$inboundSchema,
  code: PostV2WebhooksCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new PostV2WebhooksResponseBody(remapped);
  });

/** @internal */
export type PostV2WebhooksResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2WebhooksResponseBody$outboundSchema: z.ZodType<
  PostV2WebhooksResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2WebhooksResponseBody
> = z.instanceof(PostV2WebhooksResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      statusCode: z.number(),
      type: PostV2WebhooksType$outboundSchema,
      code: PostV2WebhooksCode$outboundSchema,
      message: z.string(),
    }).transform((v) => {
      return remap$(v, {
        statusCode: "status_code",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2WebhooksResponseBody$ {
  /** @deprecated use `PostV2WebhooksResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostV2WebhooksResponseBody$inboundSchema;
  /** @deprecated use `PostV2WebhooksResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostV2WebhooksResponseBody$outboundSchema;
  /** @deprecated use `PostV2WebhooksResponseBody$Outbound` instead. */
  export type Outbound = PostV2WebhooksResponseBody$Outbound;
}
