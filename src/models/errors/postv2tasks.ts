/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const PostV2TasksTasksType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PostV2TasksTasksType = ClosedEnum<typeof PostV2TasksTasksType>;

export const PostV2TasksTasksCode = {
  NotFound: "not_found",
} as const;
export type PostV2TasksTasksCode = ClosedEnum<typeof PostV2TasksTasksCode>;

/**
 * Not Found
 */
export type PostV2TasksTasksResponseBodyData = {
  statusCode: number;
  type: PostV2TasksTasksType;
  code: PostV2TasksTasksCode;
  message: string;
};

/**
 * Not Found
 */
export class PostV2TasksTasksResponseBody extends Error {
  statusCode: number;
  type: PostV2TasksTasksType;
  code: PostV2TasksTasksCode;

  /** The original data that was passed to this error instance. */
  data$: PostV2TasksTasksResponseBodyData;

  constructor(err: PostV2TasksTasksResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2TasksTasksResponseBody";
  }
}

export const PostV2TasksType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PostV2TasksType = ClosedEnum<typeof PostV2TasksType>;

export const PostV2TasksCode = {
  ValidationType: "validation_type",
} as const;
export type PostV2TasksCode = ClosedEnum<typeof PostV2TasksCode>;

/**
 * Bad Request
 */
export type PostV2TasksResponseBodyData = {
  statusCode: number;
  type: PostV2TasksType;
  code: PostV2TasksCode;
  message: string;
};

/**
 * Bad Request
 */
export class PostV2TasksResponseBody extends Error {
  statusCode: number;
  type: PostV2TasksType;
  code: PostV2TasksCode;

  /** The original data that was passed to this error instance. */
  data$: PostV2TasksResponseBodyData;

  constructor(err: PostV2TasksResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2TasksResponseBody";
  }
}

/** @internal */
export const PostV2TasksTasksType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2TasksTasksType
> = z.nativeEnum(PostV2TasksTasksType);

/** @internal */
export const PostV2TasksTasksType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2TasksTasksType
> = PostV2TasksTasksType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2TasksTasksType$ {
  /** @deprecated use `PostV2TasksTasksType$inboundSchema` instead. */
  export const inboundSchema = PostV2TasksTasksType$inboundSchema;
  /** @deprecated use `PostV2TasksTasksType$outboundSchema` instead. */
  export const outboundSchema = PostV2TasksTasksType$outboundSchema;
}

/** @internal */
export const PostV2TasksTasksCode$inboundSchema: z.ZodNativeEnum<
  typeof PostV2TasksTasksCode
> = z.nativeEnum(PostV2TasksTasksCode);

/** @internal */
export const PostV2TasksTasksCode$outboundSchema: z.ZodNativeEnum<
  typeof PostV2TasksTasksCode
> = PostV2TasksTasksCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2TasksTasksCode$ {
  /** @deprecated use `PostV2TasksTasksCode$inboundSchema` instead. */
  export const inboundSchema = PostV2TasksTasksCode$inboundSchema;
  /** @deprecated use `PostV2TasksTasksCode$outboundSchema` instead. */
  export const outboundSchema = PostV2TasksTasksCode$outboundSchema;
}

/** @internal */
export const PostV2TasksTasksResponseBody$inboundSchema: z.ZodType<
  PostV2TasksTasksResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: PostV2TasksTasksType$inboundSchema,
  code: PostV2TasksTasksCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new PostV2TasksTasksResponseBody(remapped);
  });

/** @internal */
export type PostV2TasksTasksResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2TasksTasksResponseBody$outboundSchema: z.ZodType<
  PostV2TasksTasksResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2TasksTasksResponseBody
> = z.instanceof(PostV2TasksTasksResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      statusCode: z.number(),
      type: PostV2TasksTasksType$outboundSchema,
      code: PostV2TasksTasksCode$outboundSchema,
      message: z.string(),
    }).transform((v) => {
      return remap$(v, {
        statusCode: "status_code",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2TasksTasksResponseBody$ {
  /** @deprecated use `PostV2TasksTasksResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostV2TasksTasksResponseBody$inboundSchema;
  /** @deprecated use `PostV2TasksTasksResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostV2TasksTasksResponseBody$outboundSchema;
  /** @deprecated use `PostV2TasksTasksResponseBody$Outbound` instead. */
  export type Outbound = PostV2TasksTasksResponseBody$Outbound;
}

/** @internal */
export const PostV2TasksType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2TasksType
> = z.nativeEnum(PostV2TasksType);

/** @internal */
export const PostV2TasksType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2TasksType
> = PostV2TasksType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2TasksType$ {
  /** @deprecated use `PostV2TasksType$inboundSchema` instead. */
  export const inboundSchema = PostV2TasksType$inboundSchema;
  /** @deprecated use `PostV2TasksType$outboundSchema` instead. */
  export const outboundSchema = PostV2TasksType$outboundSchema;
}

/** @internal */
export const PostV2TasksCode$inboundSchema: z.ZodNativeEnum<
  typeof PostV2TasksCode
> = z.nativeEnum(PostV2TasksCode);

/** @internal */
export const PostV2TasksCode$outboundSchema: z.ZodNativeEnum<
  typeof PostV2TasksCode
> = PostV2TasksCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2TasksCode$ {
  /** @deprecated use `PostV2TasksCode$inboundSchema` instead. */
  export const inboundSchema = PostV2TasksCode$inboundSchema;
  /** @deprecated use `PostV2TasksCode$outboundSchema` instead. */
  export const outboundSchema = PostV2TasksCode$outboundSchema;
}

/** @internal */
export const PostV2TasksResponseBody$inboundSchema: z.ZodType<
  PostV2TasksResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: PostV2TasksType$inboundSchema,
  code: PostV2TasksCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new PostV2TasksResponseBody(remapped);
  });

/** @internal */
export type PostV2TasksResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2TasksResponseBody$outboundSchema: z.ZodType<
  PostV2TasksResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2TasksResponseBody
> = z.instanceof(PostV2TasksResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      statusCode: z.number(),
      type: PostV2TasksType$outboundSchema,
      code: PostV2TasksCode$outboundSchema,
      message: z.string(),
    }).transform((v) => {
      return remap$(v, {
        statusCode: "status_code",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2TasksResponseBody$ {
  /** @deprecated use `PostV2TasksResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostV2TasksResponseBody$inboundSchema;
  /** @deprecated use `PostV2TasksResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostV2TasksResponseBody$outboundSchema;
  /** @deprecated use `PostV2TasksResponseBody$Outbound` instead. */
  export type Outbound = PostV2TasksResponseBody$Outbound;
}
