/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const PostV2ListsListsResponseType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PostV2ListsListsResponseType = ClosedEnum<
  typeof PostV2ListsListsResponseType
>;

export const PostV2ListsListsResponseCode = {
  NotFound: "not_found",
} as const;
export type PostV2ListsListsResponseCode = ClosedEnum<
  typeof PostV2ListsListsResponseCode
>;

/**
 * Not Found
 */
export type PostV2ListsListsResponseResponseBodyData = {
  statusCode: number;
  type: PostV2ListsListsResponseType;
  code: PostV2ListsListsResponseCode;
  message: string;
};

/**
 * Not Found
 */
export class PostV2ListsListsResponseResponseBody extends Error {
  statusCode: number;
  type: PostV2ListsListsResponseType;
  code: PostV2ListsListsResponseCode;

  /** The original data that was passed to this error instance. */
  data$: PostV2ListsListsResponseResponseBodyData;

  constructor(err: PostV2ListsListsResponseResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2ListsListsResponseResponseBody";
  }
}

export const PostV2ListsListsType = {
  AuthError: "auth_error",
} as const;
export type PostV2ListsListsType = ClosedEnum<typeof PostV2ListsListsType>;

export const PostV2ListsListsCode = {
  BillingError: "billing_error",
} as const;
export type PostV2ListsListsCode = ClosedEnum<typeof PostV2ListsListsCode>;

/**
 * Forbidden
 */
export type PostV2ListsListsResponseBodyData = {
  statusCode: number;
  type: PostV2ListsListsType;
  code: PostV2ListsListsCode;
  message: string;
};

/**
 * Forbidden
 */
export class PostV2ListsListsResponseBody extends Error {
  statusCode: number;
  type: PostV2ListsListsType;
  code: PostV2ListsListsCode;

  /** The original data that was passed to this error instance. */
  data$: PostV2ListsListsResponseBodyData;

  constructor(err: PostV2ListsListsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2ListsListsResponseBody";
  }
}

export const PostV2ListsType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PostV2ListsType = ClosedEnum<typeof PostV2ListsType>;

export const PostV2ListsCode = {
  ValueNotFound: "value_not_found",
} as const;
export type PostV2ListsCode = ClosedEnum<typeof PostV2ListsCode>;

/**
 * Bad Request
 */
export type PostV2ListsResponseBodyData = {
  statusCode: number;
  type: PostV2ListsType;
  code: PostV2ListsCode;
  message: string;
};

/**
 * Bad Request
 */
export class PostV2ListsResponseBody extends Error {
  statusCode: number;
  type: PostV2ListsType;
  code: PostV2ListsCode;

  /** The original data that was passed to this error instance. */
  data$: PostV2ListsResponseBodyData;

  constructor(err: PostV2ListsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2ListsResponseBody";
  }
}

/** @internal */
export const PostV2ListsListsResponseType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListsResponseType
> = z.nativeEnum(PostV2ListsListsResponseType);

/** @internal */
export const PostV2ListsListsResponseType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListsResponseType
> = PostV2ListsListsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListsResponseType$ {
  /** @deprecated use `PostV2ListsListsResponseType$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsListsResponseType$inboundSchema;
  /** @deprecated use `PostV2ListsListsResponseType$outboundSchema` instead. */
  export const outboundSchema = PostV2ListsListsResponseType$outboundSchema;
}

/** @internal */
export const PostV2ListsListsResponseCode$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListsResponseCode
> = z.nativeEnum(PostV2ListsListsResponseCode);

/** @internal */
export const PostV2ListsListsResponseCode$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListsResponseCode
> = PostV2ListsListsResponseCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListsResponseCode$ {
  /** @deprecated use `PostV2ListsListsResponseCode$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsListsResponseCode$inboundSchema;
  /** @deprecated use `PostV2ListsListsResponseCode$outboundSchema` instead. */
  export const outboundSchema = PostV2ListsListsResponseCode$outboundSchema;
}

/** @internal */
export const PostV2ListsListsResponseResponseBody$inboundSchema: z.ZodType<
  PostV2ListsListsResponseResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: PostV2ListsListsResponseType$inboundSchema,
  code: PostV2ListsListsResponseCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new PostV2ListsListsResponseResponseBody(remapped);
  });

/** @internal */
export type PostV2ListsListsResponseResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2ListsListsResponseResponseBody$outboundSchema: z.ZodType<
  PostV2ListsListsResponseResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2ListsListsResponseResponseBody
> = z.instanceof(PostV2ListsListsResponseResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      statusCode: z.number(),
      type: PostV2ListsListsResponseType$outboundSchema,
      code: PostV2ListsListsResponseCode$outboundSchema,
      message: z.string(),
    }).transform((v) => {
      return remap$(v, {
        statusCode: "status_code",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListsResponseResponseBody$ {
  /** @deprecated use `PostV2ListsListsResponseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ListsListsResponseResponseBody$inboundSchema;
  /** @deprecated use `PostV2ListsListsResponseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ListsListsResponseResponseBody$outboundSchema;
  /** @deprecated use `PostV2ListsListsResponseResponseBody$Outbound` instead. */
  export type Outbound = PostV2ListsListsResponseResponseBody$Outbound;
}

/** @internal */
export const PostV2ListsListsType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListsType
> = z.nativeEnum(PostV2ListsListsType);

/** @internal */
export const PostV2ListsListsType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListsType
> = PostV2ListsListsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListsType$ {
  /** @deprecated use `PostV2ListsListsType$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsListsType$inboundSchema;
  /** @deprecated use `PostV2ListsListsType$outboundSchema` instead. */
  export const outboundSchema = PostV2ListsListsType$outboundSchema;
}

/** @internal */
export const PostV2ListsListsCode$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListsCode
> = z.nativeEnum(PostV2ListsListsCode);

/** @internal */
export const PostV2ListsListsCode$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsListsCode
> = PostV2ListsListsCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListsCode$ {
  /** @deprecated use `PostV2ListsListsCode$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsListsCode$inboundSchema;
  /** @deprecated use `PostV2ListsListsCode$outboundSchema` instead. */
  export const outboundSchema = PostV2ListsListsCode$outboundSchema;
}

/** @internal */
export const PostV2ListsListsResponseBody$inboundSchema: z.ZodType<
  PostV2ListsListsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: PostV2ListsListsType$inboundSchema,
  code: PostV2ListsListsCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new PostV2ListsListsResponseBody(remapped);
  });

/** @internal */
export type PostV2ListsListsResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2ListsListsResponseBody$outboundSchema: z.ZodType<
  PostV2ListsListsResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2ListsListsResponseBody
> = z.instanceof(PostV2ListsListsResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      statusCode: z.number(),
      type: PostV2ListsListsType$outboundSchema,
      code: PostV2ListsListsCode$outboundSchema,
      message: z.string(),
    }).transform((v) => {
      return remap$(v, {
        statusCode: "status_code",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsListsResponseBody$ {
  /** @deprecated use `PostV2ListsListsResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsListsResponseBody$inboundSchema;
  /** @deprecated use `PostV2ListsListsResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostV2ListsListsResponseBody$outboundSchema;
  /** @deprecated use `PostV2ListsListsResponseBody$Outbound` instead. */
  export type Outbound = PostV2ListsListsResponseBody$Outbound;
}

/** @internal */
export const PostV2ListsType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsType
> = z.nativeEnum(PostV2ListsType);

/** @internal */
export const PostV2ListsType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsType
> = PostV2ListsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsType$ {
  /** @deprecated use `PostV2ListsType$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsType$inboundSchema;
  /** @deprecated use `PostV2ListsType$outboundSchema` instead. */
  export const outboundSchema = PostV2ListsType$outboundSchema;
}

/** @internal */
export const PostV2ListsCode$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsCode
> = z.nativeEnum(PostV2ListsCode);

/** @internal */
export const PostV2ListsCode$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ListsCode
> = PostV2ListsCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsCode$ {
  /** @deprecated use `PostV2ListsCode$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsCode$inboundSchema;
  /** @deprecated use `PostV2ListsCode$outboundSchema` instead. */
  export const outboundSchema = PostV2ListsCode$outboundSchema;
}

/** @internal */
export const PostV2ListsResponseBody$inboundSchema: z.ZodType<
  PostV2ListsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: PostV2ListsType$inboundSchema,
  code: PostV2ListsCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new PostV2ListsResponseBody(remapped);
  });

/** @internal */
export type PostV2ListsResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2ListsResponseBody$outboundSchema: z.ZodType<
  PostV2ListsResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2ListsResponseBody
> = z.instanceof(PostV2ListsResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      statusCode: z.number(),
      type: PostV2ListsType$outboundSchema,
      code: PostV2ListsCode$outboundSchema,
      message: z.string(),
    }).transform((v) => {
      return remap$(v, {
        statusCode: "status_code",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ListsResponseBody$ {
  /** @deprecated use `PostV2ListsResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostV2ListsResponseBody$inboundSchema;
  /** @deprecated use `PostV2ListsResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostV2ListsResponseBody$outboundSchema;
  /** @deprecated use `PostV2ListsResponseBody$Outbound` instead. */
  export type Outbound = PostV2ListsResponseBody$Outbound;
}
