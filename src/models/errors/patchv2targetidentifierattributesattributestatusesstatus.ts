/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType =
  {
    InvalidRequestError: "invalid_request_error",
  } as const;
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType =
  ClosedEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType
  >;

export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode =
  {
    SlugConflict: "slug_conflict",
  } as const;
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode =
  ClosedEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode
  >;

/**
 * Conflict
 */
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBodyData =
  {
    statusCode: number;
    type:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType;
    code:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode;
    message: string;
  };

/**
 * Conflict
 */
export class PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody
  extends Error
{
  statusCode: number;
  type:
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType;
  code:
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode;

  /** The original data that was passed to this error instance. */
  data$:
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBodyData;

  constructor(
    err:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name =
      "PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody";
  }
}

export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType =
  {
    InvalidRequestError: "invalid_request_error",
  } as const;
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType =
  ClosedEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType
  >;

export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode =
  {
    NotFound: "not_found",
  } as const;
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode =
  ClosedEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode
  >;

/**
 * Not Found
 */
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBodyData =
  {
    statusCode: number;
    type:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType;
    code:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode;
    message: string;
  };

/**
 * Not Found
 */
export class PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody
  extends Error
{
  statusCode: number;
  type: PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType;
  code: PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode;

  /** The original data that was passed to this error instance. */
  data$:
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBodyData;

  constructor(
    err:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name =
      "PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody";
  }
}

export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusType =
  ClosedEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusType
  >;

export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode = {
  ValueNotFound: "value_not_found",
} as const;
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode =
  ClosedEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode
  >;

/**
 * Bad Request
 */
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBodyData =
  {
    statusCode: number;
    type: PatchV2TargetIdentifierAttributesAttributeStatusesStatusType;
    code: PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode;
    message: string;
  };

/**
 * Bad Request
 */
export class PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody
  extends Error
{
  statusCode: number;
  type: PatchV2TargetIdentifierAttributesAttributeStatusesStatusType;
  code: PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode;

  /** The original data that was passed to this error instance. */
  data$:
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBodyData;

  constructor(
    err:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name =
      "PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody";
  }
}

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType
  > = z.nativeEnum(
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType,
  );

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType
  > =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType$ {
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType$inboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType$outboundSchema;
}

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode
  > = z.nativeEnum(
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode,
  );

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode
  > =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode$ {
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode$inboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode$outboundSchema;
}

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody$inboundSchema:
  z.ZodType<
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType$inboundSchema,
    code:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody(
        remapped,
      );
    });

/** @internal */
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody$Outbound =
  {
    status_code: number;
    type: string;
    code: string;
    message: string;
  };

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody$outboundSchema:
  z.ZodType<
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody$Outbound,
    z.ZodTypeDef,
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody
  > = z.instanceof(
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody,
  )
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type:
          PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseType$outboundSchema,
        code:
          PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody$ {
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody$inboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody$outboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody$Outbound` instead. */
  export type Outbound =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseResponseBody$Outbound;
}

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType
  > = z.nativeEnum(
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType,
  );

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType
  > =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType$ {
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType$inboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType$outboundSchema;
}

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode
  > = z.nativeEnum(
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode,
  );

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode
  > =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode$ {
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode$inboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode$outboundSchema;
}

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody$inboundSchema:
  z.ZodType<
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType$inboundSchema,
    code:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody(
        remapped,
      );
    });

/** @internal */
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody$Outbound =
  {
    status_code: number;
    type: string;
    code: string;
    message: string;
  };

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody$outboundSchema:
  z.ZodType<
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody$Outbound,
    z.ZodTypeDef,
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody
  > = z.instanceof(
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody,
  )
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type:
          PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesType$outboundSchema,
        code:
          PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody$ {
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody$inboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody$outboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody$Outbound` instead. */
  export type Outbound =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusAttributesResponseBody$Outbound;
}

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusType
  > = z.nativeEnum(
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusType,
  );

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusType
  > =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2TargetIdentifierAttributesAttributeStatusesStatusType$ {
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusType$inboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusType$outboundSchema;
}

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode
  > = z.nativeEnum(
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode,
  );

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode
  > =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode$ {
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode$inboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode$outboundSchema;
}

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody$inboundSchema:
  z.ZodType<
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusType$inboundSchema,
    code:
      PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody(
        remapped,
      );
    });

/** @internal */
export type PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody$Outbound =
  {
    status_code: number;
    type: string;
    code: string;
    message: string;
  };

/** @internal */
export const PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody$outboundSchema:
  z.ZodType<
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody$Outbound,
    z.ZodTypeDef,
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody
  > = z.instanceof(
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody,
  )
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type:
          PatchV2TargetIdentifierAttributesAttributeStatusesStatusType$outboundSchema,
        code:
          PatchV2TargetIdentifierAttributesAttributeStatusesStatusCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody$ {
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody$inboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody$outboundSchema;
  /** @deprecated use `PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody$Outbound` instead. */
  export type Outbound =
    PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody$Outbound;
}
