/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  ResponseCode,
  ResponseCode$inboundSchema,
  ResponseCode$outboundSchema,
} from "./responsecode.js";
import {
  ResponseType,
  ResponseType$inboundSchema,
  ResponseType$outboundSchema,
} from "./responsetype.js";

/**
 * Not Found
 */
export type PostV2TargetIdentifierAttributesAttributesResponseBodyData = {
  statusCode: number;
  type: ResponseType;
  code: ResponseCode;
  message: string;
};

/**
 * Not Found
 */
export class PostV2TargetIdentifierAttributesAttributesResponseBody
  extends Error
{
  statusCode: number;
  type: ResponseType;
  code: ResponseCode;

  /** The original data that was passed to this error instance. */
  data$: PostV2TargetIdentifierAttributesAttributesResponseBodyData;

  constructor(err: PostV2TargetIdentifierAttributesAttributesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2TargetIdentifierAttributesAttributesResponseBody";
  }
}

/** @internal */
export const PostV2TargetIdentifierAttributesAttributesResponseBody$inboundSchema:
  z.ZodType<
    PostV2TargetIdentifierAttributesAttributesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type: ResponseType$inboundSchema,
    code: ResponseCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new PostV2TargetIdentifierAttributesAttributesResponseBody(
        remapped,
      );
    });

/** @internal */
export type PostV2TargetIdentifierAttributesAttributesResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2TargetIdentifierAttributesAttributesResponseBody$outboundSchema:
  z.ZodType<
    PostV2TargetIdentifierAttributesAttributesResponseBody$Outbound,
    z.ZodTypeDef,
    PostV2TargetIdentifierAttributesAttributesResponseBody
  > = z.instanceof(PostV2TargetIdentifierAttributesAttributesResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type: ResponseType$outboundSchema,
        code: ResponseCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2TargetIdentifierAttributesAttributesResponseBody$ {
  /** @deprecated use `PostV2TargetIdentifierAttributesAttributesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2TargetIdentifierAttributesAttributesResponseBody$inboundSchema;
  /** @deprecated use `PostV2TargetIdentifierAttributesAttributesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2TargetIdentifierAttributesAttributesResponseBody$outboundSchema;
  /** @deprecated use `PostV2TargetIdentifierAttributesAttributesResponseBody$Outbound` instead. */
  export type Outbound =
    PostV2TargetIdentifierAttributesAttributesResponseBody$Outbound;
}
