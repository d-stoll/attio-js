/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { tasksCreate } from "../funcs/tasksCreate.js";
import { tasksDelete } from "../funcs/tasksDelete.js";
import { tasksGet } from "../funcs/tasksGet.js";
import { tasksList } from "../funcs/tasksList.js";
import { tasksUpdate } from "../funcs/tasksUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Tasks extends ClientSDK {
  /**
   * List tasks
   *
   * @remarks
   * List all tasks. Results are sorted by creation date, from oldest to newest.
   *
   * Required scopes: `task:read`, `object_configuration:read`, `record_permission:read`, `user_management:read`.
   */
  async list(
    request: operations.GetV2TasksRequest,
    options?: RequestOptions,
  ): Promise<operations.GetV2TasksResponseBody> {
    return unwrapAsync(tasksList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a task
   *
   * @remarks
   * Creates a new task.
   *
   * At present, tasks can only be created from plaintext without record reference formatting.
   *
   * Required scopes: `task:read-write`, `object_configuration:read`, `record_permission:read`, `user_management:read`.
   */
  async create(
    request: operations.PostV2TasksRequestBody,
    options?: RequestOptions,
  ): Promise<operations.PostV2TasksResponseBody> {
    return unwrapAsync(tasksCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a task
   *
   * @remarks
   * Get a single task by ID.
   *
   * Required scopes: `task:read`, `object_configuration:read`, `record_permission:read`, `user_management:read`.
   */
  async get(
    request: operations.GetV2TasksTaskIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetV2TasksTaskIdResponseBody> {
    return unwrapAsync(tasksGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a task
   *
   * @remarks
   * Updates an existing task by `task_id`. At present, only the `deadline_at`, `is_completed`, `linked_records`, and `assignees` fields can be updated.
   *
   * Required scopes: `task:read-write`, `object_configuration:read`, `record_permission:read`, `user_management:read`.
   */
  async update(
    request: operations.PatchV2TasksTaskIdRequest,
    options?: RequestOptions,
  ): Promise<operations.PatchV2TasksTaskIdResponseBody> {
    return unwrapAsync(tasksUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a task
   *
   * @remarks
   * Delete a task by ID.
   *
   * Required scopes: `task:read-write`.
   */
  async delete(
    request: operations.DeleteV2TasksTaskIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteV2TasksTaskIdResponseBody> {
    return unwrapAsync(tasksDelete(
      this,
      request,
      options,
    ));
  }
}
