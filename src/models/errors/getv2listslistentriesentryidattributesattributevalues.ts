/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType =
  {
    InvalidRequestError: "invalid_request_error",
  } as const;
export type GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType =
  ClosedEnum<
    typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType
  >;

export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode =
  {
    NotFound: "not_found",
  } as const;
export type GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode =
  ClosedEnum<
    typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode
  >;

/**
 * Not Found
 */
export type GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBodyData =
  {
    statusCode: number;
    type: GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType;
    code: GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode;
    message: string;
  };

/**
 * Not Found
 */
export class GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody
  extends Error
{
  statusCode: number;
  type: GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType;
  code: GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode;

  /** The original data that was passed to this error instance. */
  data$:
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBodyData;

  constructor(
    err:
      GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name =
      "GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody";
  }
}

export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type GetV2ListsListEntriesEntryIdAttributesAttributeValuesType =
  ClosedEnum<typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesType>;

export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode = {
  ValidationType: "validation_type",
} as const;
export type GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode =
  ClosedEnum<typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode>;

/**
 * Bad Request
 */
export type GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBodyData =
  {
    statusCode: number;
    type: GetV2ListsListEntriesEntryIdAttributesAttributeValuesType;
    code: GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode;
    message: string;
  };

/**
 * Bad Request
 */
export class GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody
  extends Error
{
  statusCode: number;
  type: GetV2ListsListEntriesEntryIdAttributesAttributeValuesType;
  code: GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode;

  /** The original data that was passed to this error instance. */
  data$: GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBodyData;

  constructor(
    err: GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name =
      "GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody";
  }
}

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType
  > = z.nativeEnum(
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType,
  );

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType
  > =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType$ {
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType$inboundSchema;
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType$outboundSchema;
}

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode
  > = z.nativeEnum(
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode,
  );

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode
  > =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode$ {
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode$inboundSchema;
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode$outboundSchema;
}

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody$inboundSchema:
  z.ZodType<
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type:
      GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType$inboundSchema,
    code:
      GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody(
        remapped,
      );
    });

/** @internal */
export type GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody$Outbound =
  {
    status_code: number;
    type: string;
    code: string;
    message: string;
  };

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody$outboundSchema:
  z.ZodType<
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody$Outbound,
    z.ZodTypeDef,
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody
  > = z.instanceof(
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody,
  )
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type:
          GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesType$outboundSchema,
        code:
          GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody$ {
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody$inboundSchema;
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody$outboundSchema;
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody$Outbound` instead. */
  export type Outbound =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesEntriesResponseBody$Outbound;
}

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesType
  > = z.nativeEnum(GetV2ListsListEntriesEntryIdAttributesAttributeValuesType);

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesType
  > = GetV2ListsListEntriesEntryIdAttributesAttributeValuesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ListsListEntriesEntryIdAttributesAttributeValuesType$ {
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesType$inboundSchema;
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesType$outboundSchema;
}

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode
  > = z.nativeEnum(GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode);

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode
  > = GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode$ {
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode$inboundSchema;
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode$outboundSchema;
}

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody$inboundSchema:
  z.ZodType<
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type:
      GetV2ListsListEntriesEntryIdAttributesAttributeValuesType$inboundSchema,
    code:
      GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody(
        remapped,
      );
    });

/** @internal */
export type GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody$Outbound =
  {
    status_code: number;
    type: string;
    code: string;
    message: string;
  };

/** @internal */
export const GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody$outboundSchema:
  z.ZodType<
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody$Outbound,
    z.ZodTypeDef,
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody
  > = z.instanceof(
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody,
  )
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type:
          GetV2ListsListEntriesEntryIdAttributesAttributeValuesType$outboundSchema,
        code:
          GetV2ListsListEntriesEntryIdAttributesAttributeValuesCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody$ {
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody$inboundSchema;
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody$outboundSchema;
  /** @deprecated use `GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody$Outbound` instead. */
  export type Outbound =
    GetV2ListsListEntriesEntryIdAttributesAttributeValuesResponseBody$Outbound;
}
