/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { threadsGetV2Threads } from "../funcs/threadsGetV2Threads.js";
import { threadsGetV2ThreadsThreadId } from "../funcs/threadsGetV2ThreadsThreadId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Threads extends ClientSDK {
  /**
   * List threads
   *
   * @remarks
   * List threads of comments on a record or list entry.
   *
   * To view threads on records, you will need the `object_configuration:read` and `record_permission:read` scopes.
   *
   * To view threads on list entries, you will need the `list_configuration:read` and `list_entry:read` scopes.
   *
   * Required scopes: `comment:read`.
   */
  async getV2Threads(
    request: operations.GetV2ThreadsRequest,
    options?: RequestOptions,
  ): Promise<operations.GetV2ThreadsResponseBody> {
    return unwrapAsync(threadsGetV2Threads(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a thread
   *
   * @remarks
   * Get all comments in a thread.
   *
   * To view threads on records, you will need the `object_configuration:read` and `record_permission:read` scopes.
   *
   * To view threads on list entries, you will need the `list_configuration:read` and `list_entry:read` scopes.
   *
   * Required scopes: `comment:read`.
   */
  async getV2ThreadsThreadId(
    request: operations.GetV2ThreadsThreadIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetV2ThreadsThreadIdResponseBody> {
    return unwrapAsync(threadsGetV2ThreadsThreadId(
      this,
      request,
      options,
    ));
  }
}
