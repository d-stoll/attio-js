/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { recordsPostV2ObjectsObjectRecords } from "../../funcs/recordsPostV2ObjectsObjectRecords.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PostV2ObjectsObjectRecordsRequest$inboundSchema,
};

export const tool$recordsPostV2ObjectsObjectRecords: ToolDefinition<
  typeof args
> = {
  name: "records-post-v2-objects-object-records",
  description: `Create a record

Creates a new person, company or other record. This endpoint will throw on conflicts of unique attributes. If you would prefer to update records on conflicts, please use the [Assert record endpoint](/reference/put_v2-objects-object-records) instead.

Required scopes: \`record_permission:read-write\`, \`object_configuration:read\`.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await recordsPostV2ObjectsObjectRecords(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
