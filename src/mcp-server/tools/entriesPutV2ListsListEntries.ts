/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { entriesPutV2ListsListEntries } from "../../funcs/entriesPutV2ListsListEntries.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PutV2ListsListEntriesRequest$inboundSchema,
};

export const tool$entriesPutV2ListsListEntries: ToolDefinition<typeof args> = {
  name: "entries-put-v2-lists-list-entries",
  description: `Assert a list entry by parent

Use this endpoint to create or update a list entry for a given parent record. If an entry with the specified parent record is found, that entry will be updated. If no such entry is found, a new entry will be created instead. If there are multiple entries with the same parent record, this endpoint with return the "MULTIPLE_MATCH_RESULTS" error. When writing to multi-select attributes, all values will be either created or deleted as necessary to match the list of values supplied in the request body.

Required scopes: \`list_entry:read-write\`, \`list_configuration:read\`.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await entriesPutV2ListsListEntries(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
