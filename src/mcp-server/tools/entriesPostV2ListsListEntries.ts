/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { entriesPostV2ListsListEntries } from "../../funcs/entriesPostV2ListsListEntries.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PostV2ListsListEntriesRequest$inboundSchema,
};

export const tool$entriesPostV2ListsListEntries: ToolDefinition<typeof args> = {
  name: "entries-post-v2-lists-list-entries",
  description: `Create an entry (add record to list)

Adds a record to a list as a new list entry. This endpoint will throw on conflicts of unique attributes. Multiple list entries are allowed for the same parent record

Required scopes: \`list_entry:read-write\`, \`list_configuration:read\`.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await entriesPostV2ListsListEntries(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
