/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetV2ListsListRequest = {
  list: string;
};

/**
 * Success
 */
export type GetV2ListsListResponseBody = {
  data: components.List;
};

/** @internal */
export const GetV2ListsListRequest$inboundSchema: z.ZodType<
  GetV2ListsListRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  list: z.string(),
});

/** @internal */
export type GetV2ListsListRequest$Outbound = {
  list: string;
};

/** @internal */
export const GetV2ListsListRequest$outboundSchema: z.ZodType<
  GetV2ListsListRequest$Outbound,
  z.ZodTypeDef,
  GetV2ListsListRequest
> = z.object({
  list: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ListsListRequest$ {
  /** @deprecated use `GetV2ListsListRequest$inboundSchema` instead. */
  export const inboundSchema = GetV2ListsListRequest$inboundSchema;
  /** @deprecated use `GetV2ListsListRequest$outboundSchema` instead. */
  export const outboundSchema = GetV2ListsListRequest$outboundSchema;
  /** @deprecated use `GetV2ListsListRequest$Outbound` instead. */
  export type Outbound = GetV2ListsListRequest$Outbound;
}

export function getV2ListsListRequestToJSON(
  getV2ListsListRequest: GetV2ListsListRequest,
): string {
  return JSON.stringify(
    GetV2ListsListRequest$outboundSchema.parse(getV2ListsListRequest),
  );
}

export function getV2ListsListRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetV2ListsListRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetV2ListsListRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetV2ListsListRequest' from JSON`,
  );
}

/** @internal */
export const GetV2ListsListResponseBody$inboundSchema: z.ZodType<
  GetV2ListsListResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: components.List$inboundSchema,
});

/** @internal */
export type GetV2ListsListResponseBody$Outbound = {
  data: components.List$Outbound;
};

/** @internal */
export const GetV2ListsListResponseBody$outboundSchema: z.ZodType<
  GetV2ListsListResponseBody$Outbound,
  z.ZodTypeDef,
  GetV2ListsListResponseBody
> = z.object({
  data: components.List$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ListsListResponseBody$ {
  /** @deprecated use `GetV2ListsListResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetV2ListsListResponseBody$inboundSchema;
  /** @deprecated use `GetV2ListsListResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetV2ListsListResponseBody$outboundSchema;
  /** @deprecated use `GetV2ListsListResponseBody$Outbound` instead. */
  export type Outbound = GetV2ListsListResponseBody$Outbound;
}

export function getV2ListsListResponseBodyToJSON(
  getV2ListsListResponseBody: GetV2ListsListResponseBody,
): string {
  return JSON.stringify(
    GetV2ListsListResponseBody$outboundSchema.parse(getV2ListsListResponseBody),
  );
}

export function getV2ListsListResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetV2ListsListResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetV2ListsListResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetV2ListsListResponseBody' from JSON`,
  );
}
