/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Whether the attribute is on an object or a list.
 */
export const GetV2TargetIdentifierAttributesAttributePathParamTarget = {
  Objects: "objects",
  Lists: "lists",
} as const;
/**
 * Whether the attribute is on an object or a list.
 */
export type GetV2TargetIdentifierAttributesAttributePathParamTarget =
  ClosedEnum<typeof GetV2TargetIdentifierAttributesAttributePathParamTarget>;

export type GetV2TargetIdentifierAttributesAttributeRequest = {
  /**
   * Whether the attribute is on an object or a list.
   */
  target: GetV2TargetIdentifierAttributesAttributePathParamTarget;
  identifier: string;
  attribute: string;
};

/**
 * Success
 */
export type GetV2TargetIdentifierAttributesAttributeResponseBody = {
  data: components.Attribute;
};

/** @internal */
export const GetV2TargetIdentifierAttributesAttributePathParamTarget$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2TargetIdentifierAttributesAttributePathParamTarget
  > = z.nativeEnum(GetV2TargetIdentifierAttributesAttributePathParamTarget);

/** @internal */
export const GetV2TargetIdentifierAttributesAttributePathParamTarget$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2TargetIdentifierAttributesAttributePathParamTarget
  > = GetV2TargetIdentifierAttributesAttributePathParamTarget$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2TargetIdentifierAttributesAttributePathParamTarget$ {
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributePathParamTarget$inboundSchema` instead. */
  export const inboundSchema =
    GetV2TargetIdentifierAttributesAttributePathParamTarget$inboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributePathParamTarget$outboundSchema` instead. */
  export const outboundSchema =
    GetV2TargetIdentifierAttributesAttributePathParamTarget$outboundSchema;
}

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeRequest$inboundSchema:
  z.ZodType<
    GetV2TargetIdentifierAttributesAttributeRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    target:
      GetV2TargetIdentifierAttributesAttributePathParamTarget$inboundSchema,
    identifier: z.string(),
    attribute: z.string(),
  });

/** @internal */
export type GetV2TargetIdentifierAttributesAttributeRequest$Outbound = {
  target: string;
  identifier: string;
  attribute: string;
};

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeRequest$outboundSchema:
  z.ZodType<
    GetV2TargetIdentifierAttributesAttributeRequest$Outbound,
    z.ZodTypeDef,
    GetV2TargetIdentifierAttributesAttributeRequest
  > = z.object({
    target:
      GetV2TargetIdentifierAttributesAttributePathParamTarget$outboundSchema,
    identifier: z.string(),
    attribute: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2TargetIdentifierAttributesAttributeRequest$ {
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV2TargetIdentifierAttributesAttributeRequest$inboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV2TargetIdentifierAttributesAttributeRequest$outboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeRequest$Outbound` instead. */
  export type Outbound =
    GetV2TargetIdentifierAttributesAttributeRequest$Outbound;
}

export function getV2TargetIdentifierAttributesAttributeRequestToJSON(
  getV2TargetIdentifierAttributesAttributeRequest:
    GetV2TargetIdentifierAttributesAttributeRequest,
): string {
  return JSON.stringify(
    GetV2TargetIdentifierAttributesAttributeRequest$outboundSchema.parse(
      getV2TargetIdentifierAttributesAttributeRequest,
    ),
  );
}

export function getV2TargetIdentifierAttributesAttributeRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2TargetIdentifierAttributesAttributeRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2TargetIdentifierAttributesAttributeRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV2TargetIdentifierAttributesAttributeRequest' from JSON`,
  );
}

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeResponseBody$inboundSchema:
  z.ZodType<
    GetV2TargetIdentifierAttributesAttributeResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: components.Attribute$inboundSchema,
  });

/** @internal */
export type GetV2TargetIdentifierAttributesAttributeResponseBody$Outbound = {
  data: components.Attribute$Outbound;
};

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeResponseBody$outboundSchema:
  z.ZodType<
    GetV2TargetIdentifierAttributesAttributeResponseBody$Outbound,
    z.ZodTypeDef,
    GetV2TargetIdentifierAttributesAttributeResponseBody
  > = z.object({
    data: components.Attribute$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2TargetIdentifierAttributesAttributeResponseBody$ {
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetV2TargetIdentifierAttributesAttributeResponseBody$inboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV2TargetIdentifierAttributesAttributeResponseBody$outboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeResponseBody$Outbound` instead. */
  export type Outbound =
    GetV2TargetIdentifierAttributesAttributeResponseBody$Outbound;
}

export function getV2TargetIdentifierAttributesAttributeResponseBodyToJSON(
  getV2TargetIdentifierAttributesAttributeResponseBody:
    GetV2TargetIdentifierAttributesAttributeResponseBody,
): string {
  return JSON.stringify(
    GetV2TargetIdentifierAttributesAttributeResponseBody$outboundSchema.parse(
      getV2TargetIdentifierAttributesAttributeResponseBody,
    ),
  );
}

export function getV2TargetIdentifierAttributesAttributeResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2TargetIdentifierAttributesAttributeResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2TargetIdentifierAttributesAttributeResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetV2TargetIdentifierAttributesAttributeResponseBody' from JSON`,
  );
}
