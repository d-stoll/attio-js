/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const PatchV2ListsListEntriesEntryIdEntriesType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PatchV2ListsListEntriesEntryIdEntriesType = ClosedEnum<
  typeof PatchV2ListsListEntriesEntryIdEntriesType
>;

export const PatchV2ListsListEntriesEntryIdEntriesCode = {
  NotFound: "not_found",
} as const;
export type PatchV2ListsListEntriesEntryIdEntriesCode = ClosedEnum<
  typeof PatchV2ListsListEntriesEntryIdEntriesCode
>;

/**
 * Not Found
 */
export type PatchV2ListsListEntriesEntryIdEntriesResponseBodyData = {
  statusCode: number;
  type: PatchV2ListsListEntriesEntryIdEntriesType;
  code: PatchV2ListsListEntriesEntryIdEntriesCode;
  message: string;
};

/**
 * Not Found
 */
export class PatchV2ListsListEntriesEntryIdEntriesResponseBody extends Error {
  statusCode: number;
  type: PatchV2ListsListEntriesEntryIdEntriesType;
  code: PatchV2ListsListEntriesEntryIdEntriesCode;

  /** The original data that was passed to this error instance. */
  data$: PatchV2ListsListEntriesEntryIdEntriesResponseBodyData;

  constructor(err: PatchV2ListsListEntriesEntryIdEntriesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PatchV2ListsListEntriesEntryIdEntriesResponseBody";
  }
}

export const PatchV2ListsListEntriesEntryIdType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PatchV2ListsListEntriesEntryIdType = ClosedEnum<
  typeof PatchV2ListsListEntriesEntryIdType
>;

export const PatchV2ListsListEntriesEntryIdCode = {
  ImmutableValue: "immutable_value",
} as const;
export type PatchV2ListsListEntriesEntryIdCode = ClosedEnum<
  typeof PatchV2ListsListEntriesEntryIdCode
>;

/**
 * Bad Request
 */
export type PatchV2ListsListEntriesEntryIdResponseBodyData = {
  statusCode: number;
  type: PatchV2ListsListEntriesEntryIdType;
  code: PatchV2ListsListEntriesEntryIdCode;
  message: string;
};

/**
 * Bad Request
 */
export class PatchV2ListsListEntriesEntryIdResponseBody extends Error {
  statusCode: number;
  type: PatchV2ListsListEntriesEntryIdType;
  code: PatchV2ListsListEntriesEntryIdCode;

  /** The original data that was passed to this error instance. */
  data$: PatchV2ListsListEntriesEntryIdResponseBodyData;

  constructor(err: PatchV2ListsListEntriesEntryIdResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PatchV2ListsListEntriesEntryIdResponseBody";
  }
}

/** @internal */
export const PatchV2ListsListEntriesEntryIdEntriesType$inboundSchema:
  z.ZodNativeEnum<typeof PatchV2ListsListEntriesEntryIdEntriesType> = z
    .nativeEnum(PatchV2ListsListEntriesEntryIdEntriesType);

/** @internal */
export const PatchV2ListsListEntriesEntryIdEntriesType$outboundSchema:
  z.ZodNativeEnum<typeof PatchV2ListsListEntriesEntryIdEntriesType> =
    PatchV2ListsListEntriesEntryIdEntriesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ListsListEntriesEntryIdEntriesType$ {
  /** @deprecated use `PatchV2ListsListEntriesEntryIdEntriesType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ListsListEntriesEntryIdEntriesType$inboundSchema;
  /** @deprecated use `PatchV2ListsListEntriesEntryIdEntriesType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ListsListEntriesEntryIdEntriesType$outboundSchema;
}

/** @internal */
export const PatchV2ListsListEntriesEntryIdEntriesCode$inboundSchema:
  z.ZodNativeEnum<typeof PatchV2ListsListEntriesEntryIdEntriesCode> = z
    .nativeEnum(PatchV2ListsListEntriesEntryIdEntriesCode);

/** @internal */
export const PatchV2ListsListEntriesEntryIdEntriesCode$outboundSchema:
  z.ZodNativeEnum<typeof PatchV2ListsListEntriesEntryIdEntriesCode> =
    PatchV2ListsListEntriesEntryIdEntriesCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ListsListEntriesEntryIdEntriesCode$ {
  /** @deprecated use `PatchV2ListsListEntriesEntryIdEntriesCode$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ListsListEntriesEntryIdEntriesCode$inboundSchema;
  /** @deprecated use `PatchV2ListsListEntriesEntryIdEntriesCode$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ListsListEntriesEntryIdEntriesCode$outboundSchema;
}

/** @internal */
export const PatchV2ListsListEntriesEntryIdEntriesResponseBody$inboundSchema:
  z.ZodType<
    PatchV2ListsListEntriesEntryIdEntriesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type: PatchV2ListsListEntriesEntryIdEntriesType$inboundSchema,
    code: PatchV2ListsListEntriesEntryIdEntriesCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new PatchV2ListsListEntriesEntryIdEntriesResponseBody(remapped);
    });

/** @internal */
export type PatchV2ListsListEntriesEntryIdEntriesResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PatchV2ListsListEntriesEntryIdEntriesResponseBody$outboundSchema:
  z.ZodType<
    PatchV2ListsListEntriesEntryIdEntriesResponseBody$Outbound,
    z.ZodTypeDef,
    PatchV2ListsListEntriesEntryIdEntriesResponseBody
  > = z.instanceof(PatchV2ListsListEntriesEntryIdEntriesResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type: PatchV2ListsListEntriesEntryIdEntriesType$outboundSchema,
        code: PatchV2ListsListEntriesEntryIdEntriesCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ListsListEntriesEntryIdEntriesResponseBody$ {
  /** @deprecated use `PatchV2ListsListEntriesEntryIdEntriesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ListsListEntriesEntryIdEntriesResponseBody$inboundSchema;
  /** @deprecated use `PatchV2ListsListEntriesEntryIdEntriesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ListsListEntriesEntryIdEntriesResponseBody$outboundSchema;
  /** @deprecated use `PatchV2ListsListEntriesEntryIdEntriesResponseBody$Outbound` instead. */
  export type Outbound =
    PatchV2ListsListEntriesEntryIdEntriesResponseBody$Outbound;
}

/** @internal */
export const PatchV2ListsListEntriesEntryIdType$inboundSchema: z.ZodNativeEnum<
  typeof PatchV2ListsListEntriesEntryIdType
> = z.nativeEnum(PatchV2ListsListEntriesEntryIdType);

/** @internal */
export const PatchV2ListsListEntriesEntryIdType$outboundSchema: z.ZodNativeEnum<
  typeof PatchV2ListsListEntriesEntryIdType
> = PatchV2ListsListEntriesEntryIdType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ListsListEntriesEntryIdType$ {
  /** @deprecated use `PatchV2ListsListEntriesEntryIdType$inboundSchema` instead. */
  export const inboundSchema = PatchV2ListsListEntriesEntryIdType$inboundSchema;
  /** @deprecated use `PatchV2ListsListEntriesEntryIdType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ListsListEntriesEntryIdType$outboundSchema;
}

/** @internal */
export const PatchV2ListsListEntriesEntryIdCode$inboundSchema: z.ZodNativeEnum<
  typeof PatchV2ListsListEntriesEntryIdCode
> = z.nativeEnum(PatchV2ListsListEntriesEntryIdCode);

/** @internal */
export const PatchV2ListsListEntriesEntryIdCode$outboundSchema: z.ZodNativeEnum<
  typeof PatchV2ListsListEntriesEntryIdCode
> = PatchV2ListsListEntriesEntryIdCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ListsListEntriesEntryIdCode$ {
  /** @deprecated use `PatchV2ListsListEntriesEntryIdCode$inboundSchema` instead. */
  export const inboundSchema = PatchV2ListsListEntriesEntryIdCode$inboundSchema;
  /** @deprecated use `PatchV2ListsListEntriesEntryIdCode$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ListsListEntriesEntryIdCode$outboundSchema;
}

/** @internal */
export const PatchV2ListsListEntriesEntryIdResponseBody$inboundSchema:
  z.ZodType<PatchV2ListsListEntriesEntryIdResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      status_code: z.number(),
      type: PatchV2ListsListEntriesEntryIdType$inboundSchema,
      code: PatchV2ListsListEntriesEntryIdCode$inboundSchema,
      message: z.string(),
    })
      .transform((v) => {
        const remapped = remap$(v, {
          "status_code": "statusCode",
        });

        return new PatchV2ListsListEntriesEntryIdResponseBody(remapped);
      });

/** @internal */
export type PatchV2ListsListEntriesEntryIdResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PatchV2ListsListEntriesEntryIdResponseBody$outboundSchema:
  z.ZodType<
    PatchV2ListsListEntriesEntryIdResponseBody$Outbound,
    z.ZodTypeDef,
    PatchV2ListsListEntriesEntryIdResponseBody
  > = z.instanceof(PatchV2ListsListEntriesEntryIdResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type: PatchV2ListsListEntriesEntryIdType$outboundSchema,
        code: PatchV2ListsListEntriesEntryIdCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ListsListEntriesEntryIdResponseBody$ {
  /** @deprecated use `PatchV2ListsListEntriesEntryIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ListsListEntriesEntryIdResponseBody$inboundSchema;
  /** @deprecated use `PatchV2ListsListEntriesEntryIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ListsListEntriesEntryIdResponseBody$outboundSchema;
  /** @deprecated use `PatchV2ListsListEntriesEntryIdResponseBody$Outbound` instead. */
  export type Outbound = PatchV2ListsListEntriesEntryIdResponseBody$Outbound;
}
