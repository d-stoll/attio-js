/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const GetV2NotesType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type GetV2NotesType = ClosedEnum<typeof GetV2NotesType>;

export const GetV2NotesCode = {
  NotFound: "not_found",
} as const;
export type GetV2NotesCode = ClosedEnum<typeof GetV2NotesCode>;

/**
 * Not Found
 */
export type GetV2NotesResponseBodyData = {
  statusCode: number;
  type: GetV2NotesType;
  code: GetV2NotesCode;
  message: string;
};

/**
 * Not Found
 */
export class GetV2NotesResponseBody extends Error {
  statusCode: number;
  type: GetV2NotesType;
  code: GetV2NotesCode;

  /** The original data that was passed to this error instance. */
  data$: GetV2NotesResponseBodyData;

  constructor(err: GetV2NotesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "GetV2NotesResponseBody";
  }
}

/** @internal */
export const GetV2NotesType$inboundSchema: z.ZodNativeEnum<
  typeof GetV2NotesType
> = z.nativeEnum(GetV2NotesType);

/** @internal */
export const GetV2NotesType$outboundSchema: z.ZodNativeEnum<
  typeof GetV2NotesType
> = GetV2NotesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2NotesType$ {
  /** @deprecated use `GetV2NotesType$inboundSchema` instead. */
  export const inboundSchema = GetV2NotesType$inboundSchema;
  /** @deprecated use `GetV2NotesType$outboundSchema` instead. */
  export const outboundSchema = GetV2NotesType$outboundSchema;
}

/** @internal */
export const GetV2NotesCode$inboundSchema: z.ZodNativeEnum<
  typeof GetV2NotesCode
> = z.nativeEnum(GetV2NotesCode);

/** @internal */
export const GetV2NotesCode$outboundSchema: z.ZodNativeEnum<
  typeof GetV2NotesCode
> = GetV2NotesCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2NotesCode$ {
  /** @deprecated use `GetV2NotesCode$inboundSchema` instead. */
  export const inboundSchema = GetV2NotesCode$inboundSchema;
  /** @deprecated use `GetV2NotesCode$outboundSchema` instead. */
  export const outboundSchema = GetV2NotesCode$outboundSchema;
}

/** @internal */
export const GetV2NotesResponseBody$inboundSchema: z.ZodType<
  GetV2NotesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: GetV2NotesType$inboundSchema,
  code: GetV2NotesCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new GetV2NotesResponseBody(remapped);
  });

/** @internal */
export type GetV2NotesResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const GetV2NotesResponseBody$outboundSchema: z.ZodType<
  GetV2NotesResponseBody$Outbound,
  z.ZodTypeDef,
  GetV2NotesResponseBody
> = z.instanceof(GetV2NotesResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      statusCode: z.number(),
      type: GetV2NotesType$outboundSchema,
      code: GetV2NotesCode$outboundSchema,
      message: z.string(),
    }).transform((v) => {
      return remap$(v, {
        statusCode: "status_code",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2NotesResponseBody$ {
  /** @deprecated use `GetV2NotesResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetV2NotesResponseBody$inboundSchema;
  /** @deprecated use `GetV2NotesResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetV2NotesResponseBody$outboundSchema;
  /** @deprecated use `GetV2NotesResponseBody$Outbound` instead. */
  export type Outbound = GetV2NotesResponseBody$Outbound;
}
