/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { attributesStatusesCreate } from "../funcs/attributesStatusesCreate.js";
import { attributesStatusesUpdate } from "../funcs/attributesStatusesUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Statuses extends ClientSDK {
  /**
   * Create a status
   *
   * @remarks
   * Add a new status to a status attribute on either an object or a list.
   *
   * Required scopes: `object_configuration:read-write`.
   */
  async create(
    request:
      operations.PostV2TargetIdentifierAttributesAttributeStatusesRequest,
    options?: RequestOptions,
  ): Promise<
    operations.PostV2TargetIdentifierAttributesAttributeStatusesResponseBody
  > {
    return unwrapAsync(attributesStatusesCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a status
   *
   * @remarks
   * Update a status on an status attribute on either an object or a list.
   *
   * Required scopes: `object_configuration:read-write`.
   */
  async update(
    request:
      operations.PatchV2TargetIdentifierAttributesAttributeStatusesStatusRequest,
    options?: RequestOptions,
  ): Promise<
    operations.PatchV2TargetIdentifierAttributesAttributeStatusesStatusResponseBody
  > {
    return unwrapAsync(attributesStatusesUpdate(
      this,
      request,
      options,
    ));
  }
}
