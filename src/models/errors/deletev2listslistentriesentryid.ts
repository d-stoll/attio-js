/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const DeleteV2ListsListEntriesEntryIdType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type DeleteV2ListsListEntriesEntryIdType = ClosedEnum<
  typeof DeleteV2ListsListEntriesEntryIdType
>;

export const DeleteV2ListsListEntriesEntryIdCode = {
  NotFound: "not_found",
} as const;
export type DeleteV2ListsListEntriesEntryIdCode = ClosedEnum<
  typeof DeleteV2ListsListEntriesEntryIdCode
>;

/**
 * Not Found
 */
export type DeleteV2ListsListEntriesEntryIdResponseBodyData = {
  statusCode: number;
  type: DeleteV2ListsListEntriesEntryIdType;
  code: DeleteV2ListsListEntriesEntryIdCode;
  message: string;
};

/**
 * Not Found
 */
export class DeleteV2ListsListEntriesEntryIdResponseBody extends Error {
  statusCode: number;
  type: DeleteV2ListsListEntriesEntryIdType;
  code: DeleteV2ListsListEntriesEntryIdCode;

  /** The original data that was passed to this error instance. */
  data$: DeleteV2ListsListEntriesEntryIdResponseBodyData;

  constructor(err: DeleteV2ListsListEntriesEntryIdResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "DeleteV2ListsListEntriesEntryIdResponseBody";
  }
}

/** @internal */
export const DeleteV2ListsListEntriesEntryIdType$inboundSchema: z.ZodNativeEnum<
  typeof DeleteV2ListsListEntriesEntryIdType
> = z.nativeEnum(DeleteV2ListsListEntriesEntryIdType);

/** @internal */
export const DeleteV2ListsListEntriesEntryIdType$outboundSchema:
  z.ZodNativeEnum<typeof DeleteV2ListsListEntriesEntryIdType> =
    DeleteV2ListsListEntriesEntryIdType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV2ListsListEntriesEntryIdType$ {
  /** @deprecated use `DeleteV2ListsListEntriesEntryIdType$inboundSchema` instead. */
  export const inboundSchema =
    DeleteV2ListsListEntriesEntryIdType$inboundSchema;
  /** @deprecated use `DeleteV2ListsListEntriesEntryIdType$outboundSchema` instead. */
  export const outboundSchema =
    DeleteV2ListsListEntriesEntryIdType$outboundSchema;
}

/** @internal */
export const DeleteV2ListsListEntriesEntryIdCode$inboundSchema: z.ZodNativeEnum<
  typeof DeleteV2ListsListEntriesEntryIdCode
> = z.nativeEnum(DeleteV2ListsListEntriesEntryIdCode);

/** @internal */
export const DeleteV2ListsListEntriesEntryIdCode$outboundSchema:
  z.ZodNativeEnum<typeof DeleteV2ListsListEntriesEntryIdCode> =
    DeleteV2ListsListEntriesEntryIdCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV2ListsListEntriesEntryIdCode$ {
  /** @deprecated use `DeleteV2ListsListEntriesEntryIdCode$inboundSchema` instead. */
  export const inboundSchema =
    DeleteV2ListsListEntriesEntryIdCode$inboundSchema;
  /** @deprecated use `DeleteV2ListsListEntriesEntryIdCode$outboundSchema` instead. */
  export const outboundSchema =
    DeleteV2ListsListEntriesEntryIdCode$outboundSchema;
}

/** @internal */
export const DeleteV2ListsListEntriesEntryIdResponseBody$inboundSchema:
  z.ZodType<
    DeleteV2ListsListEntriesEntryIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type: DeleteV2ListsListEntriesEntryIdType$inboundSchema,
    code: DeleteV2ListsListEntriesEntryIdCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new DeleteV2ListsListEntriesEntryIdResponseBody(remapped);
    });

/** @internal */
export type DeleteV2ListsListEntriesEntryIdResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const DeleteV2ListsListEntriesEntryIdResponseBody$outboundSchema:
  z.ZodType<
    DeleteV2ListsListEntriesEntryIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteV2ListsListEntriesEntryIdResponseBody
  > = z.instanceof(DeleteV2ListsListEntriesEntryIdResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type: DeleteV2ListsListEntriesEntryIdType$outboundSchema,
        code: DeleteV2ListsListEntriesEntryIdCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV2ListsListEntriesEntryIdResponseBody$ {
  /** @deprecated use `DeleteV2ListsListEntriesEntryIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteV2ListsListEntriesEntryIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteV2ListsListEntriesEntryIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteV2ListsListEntriesEntryIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteV2ListsListEntriesEntryIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteV2ListsListEntriesEntryIdResponseBody$Outbound;
}
