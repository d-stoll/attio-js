/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * An object with an attribute `api_slug` or `attribute_id` as the key, and a single value (for single-select attributes), or an array of values (for single or multi-select attributes) as the values. For complete documentation on values for all attribute types, please see our [attribute type docs](/docs/attribute-types).
 */
export type Values = {};

export type PostV2ObjectsObjectRecordsData = {
  /**
   * An object with an attribute `api_slug` or `attribute_id` as the key, and a single value (for single-select attributes), or an array of values (for single or multi-select attributes) as the values. For complete documentation on values for all attribute types, please see our [attribute type docs](/docs/attribute-types).
   */
  values: Values;
};

export type PostV2ObjectsObjectRecordsRequestBody = {
  data: PostV2ObjectsObjectRecordsData;
};

export type PostV2ObjectsObjectRecordsRequest = {
  object: string;
  requestBody: PostV2ObjectsObjectRecordsRequestBody;
};

export type PostV2ObjectsObjectRecordsId = {
  /**
   * A UUID identifying the workspace this record belongs to.
   */
  workspaceId: string;
  /**
   * A UUID identifying the object this record belongs to.
   */
  objectId: string;
  /**
   * A UUID identifying this record.
   */
  recordId: string;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType =
  {
    Timestamp: "timestamp",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType
  >;

export type Values17 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType;
  /**
   * A timestamp value represents a single, universal moment in time using an ISO 8601 formatted string. This means that a timestamp consists of a date, a time (with nanosecond precision), and a time zone. Attio will coerce timestamps which do not provide full nanosecond precision and UTC is assumed if no time zone is provided. For example, "2023", "2023-01", "2023-01-02", "2023-01-02T13:00", "2023-01-02T13:00:00", and "2023-01-02T13:00:00.000000000" will all be coerced to "2023-01-02T13:00:00.000000000Z". Timestamps are always returned in UTC. For example, writing a timestamp value using the string "2023-01-02T13:00:00.000000000+02:00" will result in the value "2023-01-02T11:00:00.000000000Z" being returned. The maximum date is "9999-12-31T23:59:59.999999999Z".
   */
  value: Date;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType =
  {
    Text: "text",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType
  >;

export type Values16 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor;
  /**
   * A raw text field. Values are limited to 10MB.
   */
  value: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType =
  {
    Select: "select",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType
  >;

export type Values15 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor;
  option: components.SelectOption;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType =
  {
    Rating: "rating",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType
  >;

export type Values14 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor;
  /**
   * A number between 0 and 5 (inclusive) to represent a star rating.
   */
  value: number;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType =
  {
    Status: "status",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType
  >;

export type Values13 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor;
  status: components.Status;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
      | null
      | undefined;
  };

/**
 * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsCountryCode = {
  Af: "AF",
  Ax: "AX",
  Al: "AL",
  Dz: "DZ",
  As: "AS",
  Ad: "AD",
  Ao: "AO",
  Ai: "AI",
  Aq: "AQ",
  Ag: "AG",
  Ar: "AR",
  Am: "AM",
  Aw: "AW",
  Au: "AU",
  At: "AT",
  Az: "AZ",
  Bs: "BS",
  Bh: "BH",
  Bd: "BD",
  Bb: "BB",
  By: "BY",
  Be: "BE",
  Bz: "BZ",
  Bj: "BJ",
  Bm: "BM",
  Bt: "BT",
  Bo: "BO",
  Ba: "BA",
  Bw: "BW",
  Bv: "BV",
  Br: "BR",
  Io: "IO",
  Bn: "BN",
  Bg: "BG",
  Bf: "BF",
  Bi: "BI",
  Kh: "KH",
  Cm: "CM",
  Ca: "CA",
  Cv: "CV",
  Ky: "KY",
  Cf: "CF",
  Td: "TD",
  Cl: "CL",
  Cn: "CN",
  Cx: "CX",
  Cc: "CC",
  Co: "CO",
  Km: "KM",
  Cg: "CG",
  Cd: "CD",
  Ck: "CK",
  Cr: "CR",
  Ci: "CI",
  Hr: "HR",
  Cu: "CU",
  Cw: "CW",
  Cy: "CY",
  Cz: "CZ",
  Dk: "DK",
  Dj: "DJ",
  Dm: "DM",
  Do: "DO",
  Ec: "EC",
  Eg: "EG",
  Sv: "SV",
  Gq: "GQ",
  Er: "ER",
  Ee: "EE",
  Et: "ET",
  Fk: "FK",
  Fo: "FO",
  Fj: "FJ",
  Fi: "FI",
  Fr: "FR",
  Gf: "GF",
  Pf: "PF",
  Tf: "TF",
  Ga: "GA",
  Gm: "GM",
  Ge: "GE",
  De: "DE",
  Gh: "GH",
  Gi: "GI",
  Gr: "GR",
  Gl: "GL",
  Gd: "GD",
  Gp: "GP",
  Gu: "GU",
  Gt: "GT",
  Gg: "GG",
  Gn: "GN",
  Gw: "GW",
  Gy: "GY",
  Ht: "HT",
  Hm: "HM",
  Va: "VA",
  Hn: "HN",
  Hk: "HK",
  Hu: "HU",
  Is: "IS",
  In: "IN",
  Id: "ID",
  Ir: "IR",
  Iq: "IQ",
  Ie: "IE",
  Im: "IM",
  Il: "IL",
  It: "IT",
  Jm: "JM",
  Jp: "JP",
  Je: "JE",
  Jo: "JO",
  Kz: "KZ",
  Ke: "KE",
  Ki: "KI",
  Kr: "KR",
  Kw: "KW",
  Kg: "KG",
  La: "LA",
  Lv: "LV",
  Lb: "LB",
  Ls: "LS",
  Lr: "LR",
  Ly: "LY",
  Li: "LI",
  Lt: "LT",
  Lu: "LU",
  Mo: "MO",
  Mk: "MK",
  Mg: "MG",
  Mw: "MW",
  My: "MY",
  Mv: "MV",
  Ml: "ML",
  Mt: "MT",
  Mh: "MH",
  Mq: "MQ",
  Mr: "MR",
  Mu: "MU",
  Yt: "YT",
  Mx: "MX",
  Fm: "FM",
  Md: "MD",
  Mc: "MC",
  Mn: "MN",
  Me: "ME",
  Ms: "MS",
  Ma: "MA",
  Mz: "MZ",
  Mm: "MM",
  Na: "NA",
  Nr: "NR",
  Np: "NP",
  Nl: "NL",
  An: "AN",
  Nc: "NC",
  Nz: "NZ",
  Ni: "NI",
  Ne: "NE",
  Ng: "NG",
  Nu: "NU",
  Nf: "NF",
  Mp: "MP",
  No: "NO",
  Om: "OM",
  Pk: "PK",
  Pw: "PW",
  Ps: "PS",
  Pa: "PA",
  Pg: "PG",
  Py: "PY",
  Pe: "PE",
  Ph: "PH",
  Pn: "PN",
  Pl: "PL",
  Pt: "PT",
  Pr: "PR",
  Qa: "QA",
  Re: "RE",
  Ro: "RO",
  Ru: "RU",
  Rw: "RW",
  Bl: "BL",
  Sh: "SH",
  Kn: "KN",
  Lc: "LC",
  Mf: "MF",
  Pm: "PM",
  Vc: "VC",
  Ws: "WS",
  Sm: "SM",
  St: "ST",
  Sa: "SA",
  Sn: "SN",
  Ss: "SS",
  Rs: "RS",
  Sc: "SC",
  Sl: "SL",
  Sg: "SG",
  Sk: "SK",
  Si: "SI",
  Sb: "SB",
  So: "SO",
  Za: "ZA",
  Gs: "GS",
  Es: "ES",
  Lk: "LK",
  Sd: "SD",
  Sr: "SR",
  Sj: "SJ",
  Sz: "SZ",
  Se: "SE",
  Ch: "CH",
  Sy: "SY",
  Tw: "TW",
  Tj: "TJ",
  Tz: "TZ",
  Th: "TH",
  Tl: "TL",
  Tg: "TG",
  Tk: "TK",
  To: "TO",
  Tt: "TT",
  Tn: "TN",
  Tr: "TR",
  Tm: "TM",
  Tc: "TC",
  Tv: "TV",
  Ug: "UG",
  Ua: "UA",
  Ae: "AE",
  Gb: "GB",
  Us: "US",
  Um: "UM",
  Uy: "UY",
  Uz: "UZ",
  Vu: "VU",
  Ve: "VE",
  Vn: "VN",
  Vg: "VG",
  Vi: "VI",
  Wf: "WF",
  Eh: "EH",
  Ye: "YE",
  Zm: "ZM",
  Zw: "ZW",
} as const;
/**
 * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsCountryCode = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsValuesRecordsCountryCode
>;

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType =
  {
    PhoneNumber: "phone-number",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType
  >;

export type Values12 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor;
  /**
   * The raw, original phone number, as inputted.
   */
  originalPhoneNumber: string;
  /**
   * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
   */
  countryCode: PostV2ObjectsObjectRecordsValuesRecordsCountryCode;
  phoneNumber: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType =
  {
    PersonalName: "personal-name",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType
  >;

export type Values11 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor;
  /**
   * The first name.
   */
  firstName: string;
  /**
   * The last name.
   */
  lastName: string;
  /**
   * The full name.
   */
  fullName: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType =
  {
    Number: "number",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType
  >;

export type Values10 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor;
  /**
   * Numbers are persisted as 64 bit floats.
   */
  value: number;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
      | null
      | undefined;
  };

/**
 * The ISO 3166-1 alpha-2 country code for the country this location is in.
 */
export const PostV2ObjectsObjectRecordsValuesCountryCode = {
  Af: "AF",
  Ax: "AX",
  Al: "AL",
  Dz: "DZ",
  As: "AS",
  Ad: "AD",
  Ao: "AO",
  Ai: "AI",
  Aq: "AQ",
  Ag: "AG",
  Ar: "AR",
  Am: "AM",
  Aw: "AW",
  Au: "AU",
  At: "AT",
  Az: "AZ",
  Bs: "BS",
  Bh: "BH",
  Bd: "BD",
  Bb: "BB",
  By: "BY",
  Be: "BE",
  Bz: "BZ",
  Bj: "BJ",
  Bm: "BM",
  Bt: "BT",
  Bo: "BO",
  Ba: "BA",
  Bw: "BW",
  Bv: "BV",
  Br: "BR",
  Io: "IO",
  Bn: "BN",
  Bg: "BG",
  Bf: "BF",
  Bi: "BI",
  Kh: "KH",
  Cm: "CM",
  Ca: "CA",
  Cv: "CV",
  Ky: "KY",
  Cf: "CF",
  Td: "TD",
  Cl: "CL",
  Cn: "CN",
  Cx: "CX",
  Cc: "CC",
  Co: "CO",
  Km: "KM",
  Cg: "CG",
  Cd: "CD",
  Ck: "CK",
  Cr: "CR",
  Ci: "CI",
  Hr: "HR",
  Cu: "CU",
  Cw: "CW",
  Cy: "CY",
  Cz: "CZ",
  Dk: "DK",
  Dj: "DJ",
  Dm: "DM",
  Do: "DO",
  Ec: "EC",
  Eg: "EG",
  Sv: "SV",
  Gq: "GQ",
  Er: "ER",
  Ee: "EE",
  Et: "ET",
  Fk: "FK",
  Fo: "FO",
  Fj: "FJ",
  Fi: "FI",
  Fr: "FR",
  Gf: "GF",
  Pf: "PF",
  Tf: "TF",
  Ga: "GA",
  Gm: "GM",
  Ge: "GE",
  De: "DE",
  Gh: "GH",
  Gi: "GI",
  Gr: "GR",
  Gl: "GL",
  Gd: "GD",
  Gp: "GP",
  Gu: "GU",
  Gt: "GT",
  Gg: "GG",
  Gn: "GN",
  Gw: "GW",
  Gy: "GY",
  Ht: "HT",
  Hm: "HM",
  Va: "VA",
  Hn: "HN",
  Hk: "HK",
  Hu: "HU",
  Is: "IS",
  In: "IN",
  Id: "ID",
  Ir: "IR",
  Iq: "IQ",
  Ie: "IE",
  Im: "IM",
  Il: "IL",
  It: "IT",
  Jm: "JM",
  Jp: "JP",
  Je: "JE",
  Jo: "JO",
  Kz: "KZ",
  Ke: "KE",
  Ki: "KI",
  Kr: "KR",
  Kw: "KW",
  Kg: "KG",
  La: "LA",
  Lv: "LV",
  Lb: "LB",
  Ls: "LS",
  Lr: "LR",
  Ly: "LY",
  Li: "LI",
  Lt: "LT",
  Lu: "LU",
  Mo: "MO",
  Mk: "MK",
  Mg: "MG",
  Mw: "MW",
  My: "MY",
  Mv: "MV",
  Ml: "ML",
  Mt: "MT",
  Mh: "MH",
  Mq: "MQ",
  Mr: "MR",
  Mu: "MU",
  Yt: "YT",
  Mx: "MX",
  Fm: "FM",
  Md: "MD",
  Mc: "MC",
  Mn: "MN",
  Me: "ME",
  Ms: "MS",
  Ma: "MA",
  Mz: "MZ",
  Mm: "MM",
  Na: "NA",
  Nr: "NR",
  Np: "NP",
  Nl: "NL",
  An: "AN",
  Nc: "NC",
  Nz: "NZ",
  Ni: "NI",
  Ne: "NE",
  Ng: "NG",
  Nu: "NU",
  Nf: "NF",
  Mp: "MP",
  No: "NO",
  Om: "OM",
  Pk: "PK",
  Pw: "PW",
  Ps: "PS",
  Pa: "PA",
  Pg: "PG",
  Py: "PY",
  Pe: "PE",
  Ph: "PH",
  Pn: "PN",
  Pl: "PL",
  Pt: "PT",
  Pr: "PR",
  Qa: "QA",
  Re: "RE",
  Ro: "RO",
  Ru: "RU",
  Rw: "RW",
  Bl: "BL",
  Sh: "SH",
  Kn: "KN",
  Lc: "LC",
  Mf: "MF",
  Pm: "PM",
  Vc: "VC",
  Ws: "WS",
  Sm: "SM",
  St: "ST",
  Sa: "SA",
  Sn: "SN",
  Ss: "SS",
  Rs: "RS",
  Sc: "SC",
  Sl: "SL",
  Sg: "SG",
  Sk: "SK",
  Si: "SI",
  Sb: "SB",
  So: "SO",
  Za: "ZA",
  Gs: "GS",
  Es: "ES",
  Lk: "LK",
  Sd: "SD",
  Sr: "SR",
  Sj: "SJ",
  Sz: "SZ",
  Se: "SE",
  Ch: "CH",
  Sy: "SY",
  Tw: "TW",
  Tj: "TJ",
  Tz: "TZ",
  Th: "TH",
  Tl: "TL",
  Tg: "TG",
  Tk: "TK",
  To: "TO",
  Tt: "TT",
  Tn: "TN",
  Tr: "TR",
  Tm: "TM",
  Tc: "TC",
  Tv: "TV",
  Ug: "UG",
  Ua: "UA",
  Ae: "AE",
  Gb: "GB",
  Us: "US",
  Um: "UM",
  Uy: "UY",
  Uz: "UZ",
  Vu: "VU",
  Ve: "VE",
  Vn: "VN",
  Vg: "VG",
  Vi: "VI",
  Wf: "WF",
  Eh: "EH",
  Ye: "YE",
  Zm: "ZM",
  Zw: "ZW",
} as const;
/**
 * The ISO 3166-1 alpha-2 country code for the country this location is in.
 */
export type PostV2ObjectsObjectRecordsValuesCountryCode = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsValuesCountryCode
>;

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType =
  {
    Location: "location",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType
  >;

export type Values9 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor;
  /**
   * The first line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line1: string | null;
  /**
   * The second line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line2: string | null;
  /**
   * The third line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line3: string | null;
  /**
   * The fourth line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line4: string | null;
  /**
   * The town, neighborhood or area the location is in.
   */
  locality: string | null;
  /**
   * The state, county, province or region that the location is in.
   */
  region: string | null;
  /**
   * The postcode or zip code for the location. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.}
   */
  postcode: string | null;
  /**
   * The ISO 3166-1 alpha-2 country code for the country this location is in.
   */
  countryCode: PostV2ObjectsObjectRecordsValuesCountryCode | null;
  /**
   * The latitude of the location. Validated by the regular expression `/^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?)$/`. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.}
   */
  latitude: string | null;
  /**
   * The longitude of the location. Validated by the regular expression `/^[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$/`
   */
  longitude: string | null;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
      | null
      | undefined;
  };

/**
 * The type of interaction e.g. calendar or email.
 */
export const ValuesInteractionType = {
  CalendarEvent: "calendar-event",
  Call: "call",
  ChatThread: "chat-thread",
  Email: "email",
  InPersonMeeting: "in-person-meeting",
  Meeting: "meeting",
} as const;
/**
 * The type of interaction e.g. calendar or email.
 */
export type ValuesInteractionType = ClosedEnum<typeof ValuesInteractionType>;

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
  >;

/**
 * The actor that created this value.
 */
export type ValuesOwnerActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?:
    | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
    | null
    | undefined;
};

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType =
  {
    Interaction: "interaction",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType
  >;

export type Values8 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor;
  /**
   * The type of interaction e.g. calendar or email.
   */
  interactionType: ValuesInteractionType;
  /**
   * When the interaction occurred.
   */
  interactedAt: Date;
  /**
   * The actor that created this value.
   */
  ownerActor: ValuesOwnerActor;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType =
  {
    RecordReference: "record-reference",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType
  >;

export type Values7 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor;
  /**
   * A slug identifying the object that the referenced record belongs to.
   */
  targetObject: string;
  /**
   * A UUID to identify the referenced record.
   */
  targetRecordId: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType =
  {
    EmailAddress: "email-address",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType
  >;

export type Values6 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor;
  originalEmailAddress: string;
  emailAddress: string;
  emailDomain: string;
  emailRootDomain: string;
  emailLocalSpecifier: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType
  >;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType =
  {
    Domain: "domain",
  } as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType
  >;

export type Values5 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor;
  domain: string;
  rootDomain: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200Type = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200Type = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200Type
>;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?:
    | PostV2ObjectsObjectRecordsValuesRecordsResponse200Type
    | null
    | undefined;
};

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType = {
  Date: "date",
} as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType
  >;

export type Values4 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType;
  /**
   * A date represents a single calendar year, month and day, independent of timezone. If hours, months, seconds or timezones are provided, they will be trimmed. For example, "2023" and "2023-01" will be coerced into "2023-01-01", and "2023-01-02", "2023-01-02T13:00", "2023-01-02T14:00:00", "2023-01-02T15:00:00.000000000", and "2023-01-02T15:00:00.000000000+02:00" will all be coerced to "2023-01-02". If a timezone is provided that would result in a different calendar date in UTC, the date will be coerced to UTC and then the timezone component will be trimmed. For example, the value "2023-01-02T23:00:00-10:00" will be returned as "2023-01-03". The maximum date is "9999-12-31".
   */
  value: string;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponseType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponseType = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsValuesRecordsResponseType
>;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?: PostV2ObjectsObjectRecordsValuesRecordsResponseType | null | undefined;
};

/**
 * The ISO4217 currency code representing the currency that the value is stored in.
 */
export const ValuesCurrencyCode = {
  Aud: "AUD",
  Brl: "BRL",
  Bel: "BEL",
  Cad: "CAD",
  Cny: "CNY",
  Cop: "COP",
  Czk: "CZK",
  Dkk: "DKK",
  Eur: "EUR",
  Hkd: "HKD",
  Isk: "ISK",
  Inr: "INR",
  Ils: "ILS",
  Jpy: "JPY",
  Krw: "KRW",
  Myr: "MYR",
  Mxn: "MXN",
  Ntd: "NTD",
  Nzd: "NZD",
  Ngn: "NGN",
  Nok: "NOK",
  Xpf: "XPF",
  Pen: "PEN",
  Php: "PHP",
  Pln: "PLN",
  Gbp: "GBP",
  Sar: "SAR",
  Sgd: "SGD",
  Zar: "ZAR",
  Sek: "SEK",
  Chf: "CHF",
  Aed: "AED",
  Usd: "USD",
} as const;
/**
 * The ISO4217 currency code representing the currency that the value is stored in.
 */
export type ValuesCurrencyCode = ClosedEnum<typeof ValuesCurrencyCode>;

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType = {
  Currency: "currency",
} as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType =
  ClosedEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType
  >;

export type Values3 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor: PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor;
  /**
   * A numerical representation of the currency value. A decimal with a max of 4 decimal places.
   */
  currencyValue: number;
  /**
   * The ISO4217 currency code representing the currency that the value is stored in.
   */
  currencyCode?: ValuesCurrencyCode | null | undefined;
  /**
   * The attribute type of the value.
   */
  attributeType: PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesRecordsType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesRecordsType = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsValuesRecordsType
>;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?: PostV2ObjectsObjectRecordsValuesRecordsType | null | undefined;
};

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesRecordsAttributeType = {
  Checkbox: "checkbox",
} as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesRecordsAttributeType = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsValuesRecordsAttributeType
>;

export type PostV2ObjectsObjectRecordsValues2 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor: PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor;
  /**
   * A boolean representing whether the checkbox is checked or not. The string values 'true' and 'false' are also accepted.
   */
  value: boolean;
  /**
   * The attribute type of the value.
   */
  attributeType: PostV2ObjectsObjectRecordsValuesRecordsAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PostV2ObjectsObjectRecordsValuesType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PostV2ObjectsObjectRecordsValuesType = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsValuesType
>;

/**
 * The actor that created this value.
 */
export type PostV2ObjectsObjectRecordsValuesCreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?: PostV2ObjectsObjectRecordsValuesType | null | undefined;
};

/**
 * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
 */
export const ValuesReferencedActorType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
 */
export type ValuesReferencedActorType = ClosedEnum<
  typeof ValuesReferencedActorType
>;

/**
 * The attribute type of the value.
 */
export const PostV2ObjectsObjectRecordsValuesAttributeType = {
  ActorReference: "actor-reference",
} as const;
/**
 * The attribute type of the value.
 */
export type PostV2ObjectsObjectRecordsValuesAttributeType = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsValuesAttributeType
>;

export type PostV2ObjectsObjectRecordsValues1 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor: PostV2ObjectsObjectRecordsValuesCreatedByActor;
  /**
   * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
   */
  referencedActorType: ValuesReferencedActorType;
  /**
   * The ID of the referenced actor.
   */
  referencedActorId: string | null;
  /**
   * The attribute type of the value.
   */
  attributeType: PostV2ObjectsObjectRecordsValuesAttributeType;
};

export type PostV2ObjectsObjectRecordsValues =
  | PostV2ObjectsObjectRecordsValues2
  | Values4
  | Values10
  | Values13
  | Values14
  | Values15
  | Values16
  | Values17
  | PostV2ObjectsObjectRecordsValues1
  | Values3
  | Values5
  | Values7
  | Values8
  | Values11
  | Values12
  | Values6
  | Values9;

export type PostV2ObjectsObjectRecordsRecordsData = {
  id: PostV2ObjectsObjectRecordsId;
  /**
   * When this record was created.
   */
  createdAt: string;
  /**
   * A record type with an attribute `api_slug` as the key, and an array of value objects as the values.
   */
  values: {
    [k: string]: Array<
      | PostV2ObjectsObjectRecordsValues2
      | Values4
      | Values10
      | Values13
      | Values14
      | Values15
      | Values16
      | Values17
      | PostV2ObjectsObjectRecordsValues1
      | Values3
      | Values5
      | Values7
      | Values8
      | Values11
      | Values12
      | Values6
      | Values9
    >;
  };
};

/**
 * Success
 */
export type PostV2ObjectsObjectRecordsResponseBody = {
  data: PostV2ObjectsObjectRecordsRecordsData;
};

/** @internal */
export const Values$inboundSchema: z.ZodType<Values, z.ZodTypeDef, unknown> = z
  .object({});

/** @internal */
export type Values$Outbound = {};

/** @internal */
export const Values$outboundSchema: z.ZodType<
  Values$Outbound,
  z.ZodTypeDef,
  Values
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values$ {
  /** @deprecated use `Values$inboundSchema` instead. */
  export const inboundSchema = Values$inboundSchema;
  /** @deprecated use `Values$outboundSchema` instead. */
  export const outboundSchema = Values$outboundSchema;
  /** @deprecated use `Values$Outbound` instead. */
  export type Outbound = Values$Outbound;
}

export function valuesToJSON(values: Values): string {
  return JSON.stringify(Values$outboundSchema.parse(values));
}

export function valuesFromJSON(
  jsonString: string,
): SafeParseResult<Values, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsData$inboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  values: z.lazy(() => Values$inboundSchema),
});

/** @internal */
export type PostV2ObjectsObjectRecordsData$Outbound = {
  values: Values$Outbound;
};

/** @internal */
export const PostV2ObjectsObjectRecordsData$outboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsData$Outbound,
  z.ZodTypeDef,
  PostV2ObjectsObjectRecordsData
> = z.object({
  values: z.lazy(() => Values$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsData$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsData$inboundSchema` instead. */
  export const inboundSchema = PostV2ObjectsObjectRecordsData$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsData$outboundSchema` instead. */
  export const outboundSchema = PostV2ObjectsObjectRecordsData$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsData$Outbound` instead. */
  export type Outbound = PostV2ObjectsObjectRecordsData$Outbound;
}

export function postV2ObjectsObjectRecordsDataToJSON(
  postV2ObjectsObjectRecordsData: PostV2ObjectsObjectRecordsData,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsData$outboundSchema.parse(
      postV2ObjectsObjectRecordsData,
    ),
  );
}

export function postV2ObjectsObjectRecordsDataFromJSON(
  jsonString: string,
): SafeParseResult<PostV2ObjectsObjectRecordsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2ObjectsObjectRecordsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsData' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsRequestBody$inboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => PostV2ObjectsObjectRecordsData$inboundSchema),
});

/** @internal */
export type PostV2ObjectsObjectRecordsRequestBody$Outbound = {
  data: PostV2ObjectsObjectRecordsData$Outbound;
};

/** @internal */
export const PostV2ObjectsObjectRecordsRequestBody$outboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsRequestBody$Outbound,
  z.ZodTypeDef,
  PostV2ObjectsObjectRecordsRequestBody
> = z.object({
  data: z.lazy(() => PostV2ObjectsObjectRecordsData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsRequestBody$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsRequestBody$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsRequestBody$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsRequestBody$Outbound` instead. */
  export type Outbound = PostV2ObjectsObjectRecordsRequestBody$Outbound;
}

export function postV2ObjectsObjectRecordsRequestBodyToJSON(
  postV2ObjectsObjectRecordsRequestBody: PostV2ObjectsObjectRecordsRequestBody,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsRequestBody$outboundSchema.parse(
      postV2ObjectsObjectRecordsRequestBody,
    ),
  );
}

export function postV2ObjectsObjectRecordsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PostV2ObjectsObjectRecordsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsRequestBody' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsRequest$inboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  object: z.string(),
  RequestBody: z.lazy(() =>
    PostV2ObjectsObjectRecordsRequestBody$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type PostV2ObjectsObjectRecordsRequest$Outbound = {
  object: string;
  RequestBody: PostV2ObjectsObjectRecordsRequestBody$Outbound;
};

/** @internal */
export const PostV2ObjectsObjectRecordsRequest$outboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsRequest$Outbound,
  z.ZodTypeDef,
  PostV2ObjectsObjectRecordsRequest
> = z.object({
  object: z.string(),
  requestBody: z.lazy(() =>
    PostV2ObjectsObjectRecordsRequestBody$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsRequest$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsRequest$inboundSchema` instead. */
  export const inboundSchema = PostV2ObjectsObjectRecordsRequest$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsRequest$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsRequest$Outbound` instead. */
  export type Outbound = PostV2ObjectsObjectRecordsRequest$Outbound;
}

export function postV2ObjectsObjectRecordsRequestToJSON(
  postV2ObjectsObjectRecordsRequest: PostV2ObjectsObjectRecordsRequest,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsRequest$outboundSchema.parse(
      postV2ObjectsObjectRecordsRequest,
    ),
  );
}

export function postV2ObjectsObjectRecordsRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostV2ObjectsObjectRecordsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2ObjectsObjectRecordsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsRequest' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsId$inboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsId,
  z.ZodTypeDef,
  unknown
> = z.object({
  workspace_id: z.string(),
  object_id: z.string(),
  record_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "workspace_id": "workspaceId",
    "object_id": "objectId",
    "record_id": "recordId",
  });
});

/** @internal */
export type PostV2ObjectsObjectRecordsId$Outbound = {
  workspace_id: string;
  object_id: string;
  record_id: string;
};

/** @internal */
export const PostV2ObjectsObjectRecordsId$outboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsId$Outbound,
  z.ZodTypeDef,
  PostV2ObjectsObjectRecordsId
> = z.object({
  workspaceId: z.string(),
  objectId: z.string(),
  recordId: z.string(),
}).transform((v) => {
  return remap$(v, {
    workspaceId: "workspace_id",
    objectId: "object_id",
    recordId: "record_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsId$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsId$inboundSchema` instead. */
  export const inboundSchema = PostV2ObjectsObjectRecordsId$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsId$outboundSchema` instead. */
  export const outboundSchema = PostV2ObjectsObjectRecordsId$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsId$Outbound` instead. */
  export type Outbound = PostV2ObjectsObjectRecordsId$Outbound;
}

export function postV2ObjectsObjectRecordsIdToJSON(
  postV2ObjectsObjectRecordsId: PostV2ObjectsObjectRecordsId,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsId$outboundSchema.parse(
      postV2ObjectsObjectRecordsId,
    ),
  );
}

export function postV2ObjectsObjectRecordsIdFromJSON(
  jsonString: string,
): SafeParseResult<PostV2ObjectsObjectRecordsId, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2ObjectsObjectRecordsId$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsId' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema;
}

/** @internal */
export const Values17$inboundSchema: z.ZodType<
  Values17,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema
  ),
  attribute_type:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema,
  value: z.string().datetime({ offset: true }).transform(v => new Date(v)),
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type Values17$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound;
  attribute_type: string;
  value: string;
};

/** @internal */
export const Values17$outboundSchema: z.ZodType<
  Values17$Outbound,
  z.ZodTypeDef,
  Values17
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema
  ),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema,
  value: z.date().transform(v => v.toISOString()),
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values17$ {
  /** @deprecated use `Values17$inboundSchema` instead. */
  export const inboundSchema = Values17$inboundSchema;
  /** @deprecated use `Values17$outboundSchema` instead. */
  export const outboundSchema = Values17$outboundSchema;
  /** @deprecated use `Values17$Outbound` instead. */
  export type Outbound = Values17$Outbound;
}

export function values17ToJSON(values17: Values17): string {
  return JSON.stringify(Values17$outboundSchema.parse(values17));
}

export function values17FromJSON(
  jsonString: string,
): SafeParseResult<Values17, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values17$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values17' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema;
}

/** @internal */
export const Values16$inboundSchema: z.ZodType<
  Values16,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema
  ),
  value: z.string(),
  attribute_type:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type Values16$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound;
  value: string;
  attribute_type: string;
};

/** @internal */
export const Values16$outboundSchema: z.ZodType<
  Values16$Outbound,
  z.ZodTypeDef,
  Values16
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema
  ),
  value: z.string(),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values16$ {
  /** @deprecated use `Values16$inboundSchema` instead. */
  export const inboundSchema = Values16$inboundSchema;
  /** @deprecated use `Values16$outboundSchema` instead. */
  export const outboundSchema = Values16$outboundSchema;
  /** @deprecated use `Values16$Outbound` instead. */
  export type Outbound = Values16$Outbound;
}

export function values16ToJSON(values16: Values16): string {
  return JSON.stringify(Values16$outboundSchema.parse(values16));
}

export function values16FromJSON(
  jsonString: string,
): SafeParseResult<Values16, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values16$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values16' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema;
}

/** @internal */
export const Values15$inboundSchema: z.ZodType<
  Values15,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema
  ),
  option: components.SelectOption$inboundSchema,
  attribute_type:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type Values15$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound;
  option: components.SelectOption$Outbound;
  attribute_type: string;
};

/** @internal */
export const Values15$outboundSchema: z.ZodType<
  Values15$Outbound,
  z.ZodTypeDef,
  Values15
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema
  ),
  option: components.SelectOption$outboundSchema,
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values15$ {
  /** @deprecated use `Values15$inboundSchema` instead. */
  export const inboundSchema = Values15$inboundSchema;
  /** @deprecated use `Values15$outboundSchema` instead. */
  export const outboundSchema = Values15$outboundSchema;
  /** @deprecated use `Values15$Outbound` instead. */
  export type Outbound = Values15$Outbound;
}

export function values15ToJSON(values15: Values15): string {
  return JSON.stringify(Values15$outboundSchema.parse(values15));
}

export function values15FromJSON(
  jsonString: string,
): SafeParseResult<Values15, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values15$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values15' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema;
}

/** @internal */
export const Values14$inboundSchema: z.ZodType<
  Values14,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema
  ),
  value: z.number(),
  attribute_type:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type Values14$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound;
  value: number;
  attribute_type: string;
};

/** @internal */
export const Values14$outboundSchema: z.ZodType<
  Values14$Outbound,
  z.ZodTypeDef,
  Values14
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema
  ),
  value: z.number(),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values14$ {
  /** @deprecated use `Values14$inboundSchema` instead. */
  export const inboundSchema = Values14$inboundSchema;
  /** @deprecated use `Values14$outboundSchema` instead. */
  export const outboundSchema = Values14$outboundSchema;
  /** @deprecated use `Values14$Outbound` instead. */
  export type Outbound = Values14$Outbound;
}

export function values14ToJSON(values14: Values14): string {
  return JSON.stringify(Values14$outboundSchema.parse(values14));
}

export function values14FromJSON(
  jsonString: string,
): SafeParseResult<Values14, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values14$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values14' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema;
}

/** @internal */
export const Values13$inboundSchema: z.ZodType<
  Values13,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema
  ),
  status: components.Status$inboundSchema,
  attribute_type:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type Values13$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound;
  status: components.Status$Outbound;
  attribute_type: string;
};

/** @internal */
export const Values13$outboundSchema: z.ZodType<
  Values13$Outbound,
  z.ZodTypeDef,
  Values13
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema
  ),
  status: components.Status$outboundSchema,
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values13$ {
  /** @deprecated use `Values13$inboundSchema` instead. */
  export const inboundSchema = Values13$inboundSchema;
  /** @deprecated use `Values13$outboundSchema` instead. */
  export const outboundSchema = Values13$outboundSchema;
  /** @deprecated use `Values13$Outbound` instead. */
  export type Outbound = Values13$Outbound;
}

export function values13ToJSON(values13: Values13): string {
  return JSON.stringify(Values13$outboundSchema.parse(values13));
}

export function values13FromJSON(
  jsonString: string,
): SafeParseResult<Values13, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values13$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values13' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsCountryCode$inboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesRecordsCountryCode> = z
    .nativeEnum(PostV2ObjectsObjectRecordsValuesRecordsCountryCode);

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsCountryCode$outboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesRecordsCountryCode> =
    PostV2ObjectsObjectRecordsValuesRecordsCountryCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsCountryCode$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsCountryCode$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsCountryCode$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsCountryCode$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsCountryCode$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema;
}

/** @internal */
export const Values12$inboundSchema: z.ZodType<
  Values12,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema
  ),
  original_phone_number: z.string(),
  country_code:
    PostV2ObjectsObjectRecordsValuesRecordsCountryCode$inboundSchema,
  phone_number: z.string(),
  attribute_type:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "original_phone_number": "originalPhoneNumber",
    "country_code": "countryCode",
    "phone_number": "phoneNumber",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type Values12$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound;
  original_phone_number: string;
  country_code: string;
  phone_number: string;
  attribute_type: string;
};

/** @internal */
export const Values12$outboundSchema: z.ZodType<
  Values12$Outbound,
  z.ZodTypeDef,
  Values12
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema
  ),
  originalPhoneNumber: z.string(),
  countryCode:
    PostV2ObjectsObjectRecordsValuesRecordsCountryCode$outboundSchema,
  phoneNumber: z.string(),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    originalPhoneNumber: "original_phone_number",
    countryCode: "country_code",
    phoneNumber: "phone_number",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values12$ {
  /** @deprecated use `Values12$inboundSchema` instead. */
  export const inboundSchema = Values12$inboundSchema;
  /** @deprecated use `Values12$outboundSchema` instead. */
  export const outboundSchema = Values12$outboundSchema;
  /** @deprecated use `Values12$Outbound` instead. */
  export type Outbound = Values12$Outbound;
}

export function values12ToJSON(values12: Values12): string {
  return JSON.stringify(Values12$outboundSchema.parse(values12));
}

export function values12FromJSON(
  jsonString: string,
): SafeParseResult<Values12, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values12$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values12' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema;
}

/** @internal */
export const Values11$inboundSchema: z.ZodType<
  Values11,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema
  ),
  first_name: z.string(),
  last_name: z.string(),
  full_name: z.string(),
  attribute_type:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "first_name": "firstName",
    "last_name": "lastName",
    "full_name": "fullName",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type Values11$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound;
  first_name: string;
  last_name: string;
  full_name: string;
  attribute_type: string;
};

/** @internal */
export const Values11$outboundSchema: z.ZodType<
  Values11$Outbound,
  z.ZodTypeDef,
  Values11
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema
  ),
  firstName: z.string(),
  lastName: z.string(),
  fullName: z.string(),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    firstName: "first_name",
    lastName: "last_name",
    fullName: "full_name",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values11$ {
  /** @deprecated use `Values11$inboundSchema` instead. */
  export const inboundSchema = Values11$inboundSchema;
  /** @deprecated use `Values11$outboundSchema` instead. */
  export const outboundSchema = Values11$outboundSchema;
  /** @deprecated use `Values11$Outbound` instead. */
  export type Outbound = Values11$Outbound;
}

export function values11ToJSON(values11: Values11): string {
  return JSON.stringify(Values11$outboundSchema.parse(values11));
}

export function values11FromJSON(
  jsonString: string,
): SafeParseResult<Values11, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values11$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values11' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema;
}

/** @internal */
export const Values10$inboundSchema: z.ZodType<
  Values10,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema
  ),
  value: z.number(),
  attribute_type:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type Values10$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound;
  value: number;
  attribute_type: string;
};

/** @internal */
export const Values10$outboundSchema: z.ZodType<
  Values10$Outbound,
  z.ZodTypeDef,
  Values10
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema
  ),
  value: z.number(),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values10$ {
  /** @deprecated use `Values10$inboundSchema` instead. */
  export const inboundSchema = Values10$inboundSchema;
  /** @deprecated use `Values10$outboundSchema` instead. */
  export const outboundSchema = Values10$outboundSchema;
  /** @deprecated use `Values10$Outbound` instead. */
  export type Outbound = Values10$Outbound;
}

export function values10ToJSON(values10: Values10): string {
  return JSON.stringify(Values10$outboundSchema.parse(values10));
}

export function values10FromJSON(
  jsonString: string,
): SafeParseResult<Values10, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values10$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values10' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesCountryCode$inboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesCountryCode> = z
    .nativeEnum(PostV2ObjectsObjectRecordsValuesCountryCode);

/** @internal */
export const PostV2ObjectsObjectRecordsValuesCountryCode$outboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesCountryCode> =
    PostV2ObjectsObjectRecordsValuesCountryCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesCountryCode$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesCountryCode$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesCountryCode$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesCountryCode$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesCountryCode$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema;
}

/** @internal */
export const Values9$inboundSchema: z.ZodType<Values9, z.ZodTypeDef, unknown> =
  z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema
    ),
    line_1: z.nullable(z.string()),
    line_2: z.nullable(z.string()),
    line_3: z.nullable(z.string()),
    line_4: z.nullable(z.string()),
    locality: z.nullable(z.string()),
    region: z.nullable(z.string()),
    postcode: z.nullable(z.string()),
    country_code: z.nullable(
      PostV2ObjectsObjectRecordsValuesCountryCode$inboundSchema,
    ),
    latitude: z.nullable(z.string()),
    longitude: z.nullable(z.string()),
    attribute_type:
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "line_1": "line1",
      "line_2": "line2",
      "line_3": "line3",
      "line_4": "line4",
      "country_code": "countryCode",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Values9$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound;
  line_1: string | null;
  line_2: string | null;
  line_3: string | null;
  line_4: string | null;
  locality: string | null;
  region: string | null;
  postcode: string | null;
  country_code: string | null;
  latitude: string | null;
  longitude: string | null;
  attribute_type: string;
};

/** @internal */
export const Values9$outboundSchema: z.ZodType<
  Values9$Outbound,
  z.ZodTypeDef,
  Values9
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema
  ),
  line1: z.nullable(z.string()),
  line2: z.nullable(z.string()),
  line3: z.nullable(z.string()),
  line4: z.nullable(z.string()),
  locality: z.nullable(z.string()),
  region: z.nullable(z.string()),
  postcode: z.nullable(z.string()),
  countryCode: z.nullable(
    PostV2ObjectsObjectRecordsValuesCountryCode$outboundSchema,
  ),
  latitude: z.nullable(z.string()),
  longitude: z.nullable(z.string()),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    line1: "line_1",
    line2: "line_2",
    line3: "line_3",
    line4: "line_4",
    countryCode: "country_code",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values9$ {
  /** @deprecated use `Values9$inboundSchema` instead. */
  export const inboundSchema = Values9$inboundSchema;
  /** @deprecated use `Values9$outboundSchema` instead. */
  export const outboundSchema = Values9$outboundSchema;
  /** @deprecated use `Values9$Outbound` instead. */
  export type Outbound = Values9$Outbound;
}

export function values9ToJSON(values9: Values9): string {
  return JSON.stringify(Values9$outboundSchema.parse(values9));
}

export function values9FromJSON(
  jsonString: string,
): SafeParseResult<Values9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values9' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor' from JSON`,
  );
}

/** @internal */
export const ValuesInteractionType$inboundSchema: z.ZodNativeEnum<
  typeof ValuesInteractionType
> = z.nativeEnum(ValuesInteractionType);

/** @internal */
export const ValuesInteractionType$outboundSchema: z.ZodNativeEnum<
  typeof ValuesInteractionType
> = ValuesInteractionType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ValuesInteractionType$ {
  /** @deprecated use `ValuesInteractionType$inboundSchema` instead. */
  export const inboundSchema = ValuesInteractionType$inboundSchema;
  /** @deprecated use `ValuesInteractionType$outboundSchema` instead. */
  export const outboundSchema = ValuesInteractionType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema;
}

/** @internal */
export const ValuesOwnerActor$inboundSchema: z.ZodType<
  ValuesOwnerActor,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  type: z.nullable(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema,
  ).optional(),
});

/** @internal */
export type ValuesOwnerActor$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
};

/** @internal */
export const ValuesOwnerActor$outboundSchema: z.ZodType<
  ValuesOwnerActor$Outbound,
  z.ZodTypeDef,
  ValuesOwnerActor
> = z.object({
  id: z.nullable(z.string()).optional(),
  type: z.nullable(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema,
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ValuesOwnerActor$ {
  /** @deprecated use `ValuesOwnerActor$inboundSchema` instead. */
  export const inboundSchema = ValuesOwnerActor$inboundSchema;
  /** @deprecated use `ValuesOwnerActor$outboundSchema` instead. */
  export const outboundSchema = ValuesOwnerActor$outboundSchema;
  /** @deprecated use `ValuesOwnerActor$Outbound` instead. */
  export type Outbound = ValuesOwnerActor$Outbound;
}

export function valuesOwnerActorToJSON(
  valuesOwnerActor: ValuesOwnerActor,
): string {
  return JSON.stringify(
    ValuesOwnerActor$outboundSchema.parse(valuesOwnerActor),
  );
}

export function valuesOwnerActorFromJSON(
  jsonString: string,
): SafeParseResult<ValuesOwnerActor, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ValuesOwnerActor$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ValuesOwnerActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema;
}

/** @internal */
export const Values8$inboundSchema: z.ZodType<Values8, z.ZodTypeDef, unknown> =
  z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema
    ),
    interaction_type: ValuesInteractionType$inboundSchema,
    interacted_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    owner_actor: z.lazy(() => ValuesOwnerActor$inboundSchema),
    attribute_type:
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "interaction_type": "interactionType",
      "interacted_at": "interactedAt",
      "owner_actor": "ownerActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Values8$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound;
  interaction_type: string;
  interacted_at: string;
  owner_actor: ValuesOwnerActor$Outbound;
  attribute_type: string;
};

/** @internal */
export const Values8$outboundSchema: z.ZodType<
  Values8$Outbound,
  z.ZodTypeDef,
  Values8
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema
  ),
  interactionType: ValuesInteractionType$outboundSchema,
  interactedAt: z.date().transform(v => v.toISOString()),
  ownerActor: z.lazy(() => ValuesOwnerActor$outboundSchema),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    interactionType: "interaction_type",
    interactedAt: "interacted_at",
    ownerActor: "owner_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values8$ {
  /** @deprecated use `Values8$inboundSchema` instead. */
  export const inboundSchema = Values8$inboundSchema;
  /** @deprecated use `Values8$outboundSchema` instead. */
  export const outboundSchema = Values8$outboundSchema;
  /** @deprecated use `Values8$Outbound` instead. */
  export type Outbound = Values8$Outbound;
}

export function values8ToJSON(values8: Values8): string {
  return JSON.stringify(Values8$outboundSchema.parse(values8));
}

export function values8FromJSON(
  jsonString: string,
): SafeParseResult<Values8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values8' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema;
}

/** @internal */
export const Values7$inboundSchema: z.ZodType<Values7, z.ZodTypeDef, unknown> =
  z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema
    ),
    target_object: z.string(),
    target_record_id: z.string(),
    attribute_type:
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "target_object": "targetObject",
      "target_record_id": "targetRecordId",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Values7$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound;
  target_object: string;
  target_record_id: string;
  attribute_type: string;
};

/** @internal */
export const Values7$outboundSchema: z.ZodType<
  Values7$Outbound,
  z.ZodTypeDef,
  Values7
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema
  ),
  targetObject: z.string(),
  targetRecordId: z.string(),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    targetObject: "target_object",
    targetRecordId: "target_record_id",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values7$ {
  /** @deprecated use `Values7$inboundSchema` instead. */
  export const inboundSchema = Values7$inboundSchema;
  /** @deprecated use `Values7$outboundSchema` instead. */
  export const outboundSchema = Values7$outboundSchema;
  /** @deprecated use `Values7$Outbound` instead. */
  export type Outbound = Values7$Outbound;
}

export function values7ToJSON(values7: Values7): string {
  return JSON.stringify(Values7$outboundSchema.parse(values7));
}

export function values7FromJSON(
  jsonString: string,
): SafeParseResult<Values7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values7' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema;
}

/** @internal */
export const Values6$inboundSchema: z.ZodType<Values6, z.ZodTypeDef, unknown> =
  z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema
    ),
    original_email_address: z.string(),
    email_address: z.string(),
    email_domain: z.string(),
    email_root_domain: z.string(),
    email_local_specifier: z.string(),
    attribute_type:
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "original_email_address": "originalEmailAddress",
      "email_address": "emailAddress",
      "email_domain": "emailDomain",
      "email_root_domain": "emailRootDomain",
      "email_local_specifier": "emailLocalSpecifier",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Values6$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound;
  original_email_address: string;
  email_address: string;
  email_domain: string;
  email_root_domain: string;
  email_local_specifier: string;
  attribute_type: string;
};

/** @internal */
export const Values6$outboundSchema: z.ZodType<
  Values6$Outbound,
  z.ZodTypeDef,
  Values6
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema
  ),
  originalEmailAddress: z.string(),
  emailAddress: z.string(),
  emailDomain: z.string(),
  emailRootDomain: z.string(),
  emailLocalSpecifier: z.string(),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    originalEmailAddress: "original_email_address",
    emailAddress: "email_address",
    emailDomain: "email_domain",
    emailRootDomain: "email_root_domain",
    emailLocalSpecifier: "email_local_specifier",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values6$ {
  /** @deprecated use `Values6$inboundSchema` instead. */
  export const inboundSchema = Values6$inboundSchema;
  /** @deprecated use `Values6$outboundSchema` instead. */
  export const outboundSchema = Values6$outboundSchema;
  /** @deprecated use `Values6$Outbound` instead. */
  export type Outbound = Values6$Outbound;
}

export function values6ToJSON(values6: Values6): string {
  return JSON.stringify(Values6$outboundSchema.parse(values6));
}

export function values6FromJSON(
  jsonString: string,
): SafeParseResult<Values6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values6' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema
      .parse(
        postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor,
      ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema;
}

/** @internal */
export const Values5$inboundSchema: z.ZodType<Values5, z.ZodTypeDef, unknown> =
  z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema
    ),
    domain: z.string(),
    root_domain: z.string(),
    attribute_type:
      PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "root_domain": "rootDomain",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Values5$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound;
  domain: string;
  root_domain: string;
  attribute_type: string;
};

/** @internal */
export const Values5$outboundSchema: z.ZodType<
  Values5$Outbound,
  z.ZodTypeDef,
  Values5
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema
  ),
  domain: z.string(),
  rootDomain: z.string(),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    rootDomain: "root_domain",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values5$ {
  /** @deprecated use `Values5$inboundSchema` instead. */
  export const inboundSchema = Values5$inboundSchema;
  /** @deprecated use `Values5$outboundSchema` instead. */
  export const outboundSchema = Values5$outboundSchema;
  /** @deprecated use `Values5$Outbound` instead. */
  export type Outbound = Values5$Outbound;
}

export function values5ToJSON(values5: Values5): string {
  return JSON.stringify(Values5$outboundSchema.parse(values5));
}

export function values5FromJSON(
  jsonString: string,
): SafeParseResult<Values5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values5' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200Type
  > = z.nativeEnum(PostV2ObjectsObjectRecordsValuesRecordsResponse200Type);

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200Type
  > = PostV2ObjectsObjectRecordsValuesRecordsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200Type$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200Type$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200Type$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponse200Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$outboundSchema
      .parse(postV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$outboundSchema;
}

/** @internal */
export const Values4$inboundSchema: z.ZodType<Values4, z.ZodTypeDef, unknown> =
  z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$inboundSchema
    ),
    attribute_type:
      PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$inboundSchema,
    value: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Values4$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$Outbound;
  attribute_type: string;
  value: string;
};

/** @internal */
export const Values4$outboundSchema: z.ZodType<
  Values4$Outbound,
  z.ZodTypeDef,
  Values4
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$outboundSchema
  ),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$outboundSchema,
  value: z.string(),
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values4$ {
  /** @deprecated use `Values4$inboundSchema` instead. */
  export const inboundSchema = Values4$inboundSchema;
  /** @deprecated use `Values4$outboundSchema` instead. */
  export const outboundSchema = Values4$outboundSchema;
  /** @deprecated use `Values4$Outbound` instead. */
  export type Outbound = Values4$Outbound;
}

export function values4ToJSON(values4: Values4): string {
  return JSON.stringify(Values4$outboundSchema.parse(values4));
}

export function values4FromJSON(
  jsonString: string,
): SafeParseResult<Values4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values4' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesRecordsResponseType> =
    z.nativeEnum(PostV2ObjectsObjectRecordsValuesRecordsResponseType);

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesRecordsResponseType> =
    PostV2ObjectsObjectRecordsValuesRecordsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponseType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponseType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponseType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponseType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PostV2ObjectsObjectRecordsValuesRecordsResponseType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$outboundSchema
      .parse(postV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor' from JSON`,
  );
}

/** @internal */
export const ValuesCurrencyCode$inboundSchema: z.ZodNativeEnum<
  typeof ValuesCurrencyCode
> = z.nativeEnum(ValuesCurrencyCode);

/** @internal */
export const ValuesCurrencyCode$outboundSchema: z.ZodNativeEnum<
  typeof ValuesCurrencyCode
> = ValuesCurrencyCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ValuesCurrencyCode$ {
  /** @deprecated use `ValuesCurrencyCode$inboundSchema` instead. */
  export const inboundSchema = ValuesCurrencyCode$inboundSchema;
  /** @deprecated use `ValuesCurrencyCode$outboundSchema` instead. */
  export const outboundSchema = ValuesCurrencyCode$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType
  > = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType
  > =
    PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$outboundSchema;
}

/** @internal */
export const Values3$inboundSchema: z.ZodType<Values3, z.ZodTypeDef, unknown> =
  z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$inboundSchema
    ),
    currency_value: z.number(),
    currency_code: z.nullable(ValuesCurrencyCode$inboundSchema).optional(),
    attribute_type:
      PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "currency_value": "currencyValue",
      "currency_code": "currencyCode",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Values3$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$Outbound;
  currency_value: number;
  currency_code?: string | null | undefined;
  attribute_type: string;
};

/** @internal */
export const Values3$outboundSchema: z.ZodType<
  Values3$Outbound,
  z.ZodTypeDef,
  Values3
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$outboundSchema
  ),
  currencyValue: z.number(),
  currencyCode: z.nullable(ValuesCurrencyCode$outboundSchema).optional(),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    currencyValue: "currency_value",
    currencyCode: "currency_code",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Values3$ {
  /** @deprecated use `Values3$inboundSchema` instead. */
  export const inboundSchema = Values3$inboundSchema;
  /** @deprecated use `Values3$outboundSchema` instead. */
  export const outboundSchema = Values3$outboundSchema;
  /** @deprecated use `Values3$Outbound` instead. */
  export type Outbound = Values3$Outbound;
}

export function values3ToJSON(values3: Values3): string {
  return JSON.stringify(Values3$outboundSchema.parse(values3));
}

export function values3FromJSON(
  jsonString: string,
): SafeParseResult<Values3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Values3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Values3' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesRecordsType> = z
    .nativeEnum(PostV2ObjectsObjectRecordsValuesRecordsType);

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesRecordsType> =
    PostV2ObjectsObjectRecordsValuesRecordsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(PostV2ObjectsObjectRecordsValuesRecordsType$inboundSchema)
      .optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
};

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(PostV2ObjectsObjectRecordsValuesRecordsType$outboundSchema)
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesRecordsCreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesRecordsCreatedByActor:
    PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$outboundSchema.parse(
      postV2ObjectsObjectRecordsValuesRecordsCreatedByActor,
    ),
  );
}

export function postV2ObjectsObjectRecordsValuesRecordsCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsAttributeType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesRecordsAttributeType> =
    z.nativeEnum(PostV2ObjectsObjectRecordsValuesRecordsAttributeType);

/** @internal */
export const PostV2ObjectsObjectRecordsValuesRecordsAttributeType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesRecordsAttributeType> =
    PostV2ObjectsObjectRecordsValuesRecordsAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesRecordsAttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsAttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesRecordsAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesRecordsAttributeType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValues2$inboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsValues2,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$inboundSchema
  ),
  value: z.boolean(),
  attribute_type:
    PostV2ObjectsObjectRecordsValuesRecordsAttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PostV2ObjectsObjectRecordsValues2$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$Outbound;
  value: boolean;
  attribute_type: string;
};

/** @internal */
export const PostV2ObjectsObjectRecordsValues2$outboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsValues2$Outbound,
  z.ZodTypeDef,
  PostV2ObjectsObjectRecordsValues2
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesRecordsCreatedByActor$outboundSchema
  ),
  value: z.boolean(),
  attributeType:
    PostV2ObjectsObjectRecordsValuesRecordsAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValues2$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValues2$inboundSchema` instead. */
  export const inboundSchema = PostV2ObjectsObjectRecordsValues2$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValues2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValues2$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValues2$Outbound` instead. */
  export type Outbound = PostV2ObjectsObjectRecordsValues2$Outbound;
}

export function postV2ObjectsObjectRecordsValues2ToJSON(
  postV2ObjectsObjectRecordsValues2: PostV2ObjectsObjectRecordsValues2,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValues2$outboundSchema.parse(
      postV2ObjectsObjectRecordsValues2,
    ),
  );
}

export function postV2ObjectsObjectRecordsValues2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2ObjectsObjectRecordsValues2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2ObjectsObjectRecordsValues2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValues2' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesType> = z.nativeEnum(
    PostV2ObjectsObjectRecordsValuesType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsValuesType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesType> =
    PostV2ObjectsObjectRecordsValuesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesCreatedByActor$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(PostV2ObjectsObjectRecordsValuesType$inboundSchema)
      .optional(),
  });

/** @internal */
export type PostV2ObjectsObjectRecordsValuesCreatedByActor$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
};

/** @internal */
export const PostV2ObjectsObjectRecordsValuesCreatedByActor$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsValuesCreatedByActor$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsValuesCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(PostV2ObjectsObjectRecordsValuesType$outboundSchema)
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesCreatedByActor$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesCreatedByActor$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesCreatedByActor$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesCreatedByActor$Outbound` instead. */
  export type Outbound =
    PostV2ObjectsObjectRecordsValuesCreatedByActor$Outbound;
}

export function postV2ObjectsObjectRecordsValuesCreatedByActorToJSON(
  postV2ObjectsObjectRecordsValuesCreatedByActor:
    PostV2ObjectsObjectRecordsValuesCreatedByActor,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValuesCreatedByActor$outboundSchema.parse(
      postV2ObjectsObjectRecordsValuesCreatedByActor,
    ),
  );
}

export function postV2ObjectsObjectRecordsValuesCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2ObjectsObjectRecordsValuesCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsValuesCreatedByActor$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2ObjectsObjectRecordsValuesCreatedByActor' from JSON`,
  );
}

/** @internal */
export const ValuesReferencedActorType$inboundSchema: z.ZodNativeEnum<
  typeof ValuesReferencedActorType
> = z.nativeEnum(ValuesReferencedActorType);

/** @internal */
export const ValuesReferencedActorType$outboundSchema: z.ZodNativeEnum<
  typeof ValuesReferencedActorType
> = ValuesReferencedActorType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ValuesReferencedActorType$ {
  /** @deprecated use `ValuesReferencedActorType$inboundSchema` instead. */
  export const inboundSchema = ValuesReferencedActorType$inboundSchema;
  /** @deprecated use `ValuesReferencedActorType$outboundSchema` instead. */
  export const outboundSchema = ValuesReferencedActorType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValuesAttributeType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesAttributeType> = z
    .nativeEnum(PostV2ObjectsObjectRecordsValuesAttributeType);

/** @internal */
export const PostV2ObjectsObjectRecordsValuesAttributeType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsValuesAttributeType> =
    PostV2ObjectsObjectRecordsValuesAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValuesAttributeType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsValuesAttributeType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValuesAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValuesAttributeType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsValues1$inboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsValues1,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesCreatedByActor$inboundSchema
  ),
  referenced_actor_type: ValuesReferencedActorType$inboundSchema,
  referenced_actor_id: z.nullable(z.string()),
  attribute_type: PostV2ObjectsObjectRecordsValuesAttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "referenced_actor_type": "referencedActorType",
    "referenced_actor_id": "referencedActorId",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PostV2ObjectsObjectRecordsValues1$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor: PostV2ObjectsObjectRecordsValuesCreatedByActor$Outbound;
  referenced_actor_type: string;
  referenced_actor_id: string | null;
  attribute_type: string;
};

/** @internal */
export const PostV2ObjectsObjectRecordsValues1$outboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsValues1$Outbound,
  z.ZodTypeDef,
  PostV2ObjectsObjectRecordsValues1
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PostV2ObjectsObjectRecordsValuesCreatedByActor$outboundSchema
  ),
  referencedActorType: ValuesReferencedActorType$outboundSchema,
  referencedActorId: z.nullable(z.string()),
  attributeType: PostV2ObjectsObjectRecordsValuesAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    referencedActorType: "referenced_actor_type",
    referencedActorId: "referenced_actor_id",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValues1$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValues1$inboundSchema` instead. */
  export const inboundSchema = PostV2ObjectsObjectRecordsValues1$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValues1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsValues1$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValues1$Outbound` instead. */
  export type Outbound = PostV2ObjectsObjectRecordsValues1$Outbound;
}

export function postV2ObjectsObjectRecordsValues1ToJSON(
  postV2ObjectsObjectRecordsValues1: PostV2ObjectsObjectRecordsValues1,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValues1$outboundSchema.parse(
      postV2ObjectsObjectRecordsValues1,
    ),
  );
}

export function postV2ObjectsObjectRecordsValues1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2ObjectsObjectRecordsValues1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2ObjectsObjectRecordsValues1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValues1' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsValues$inboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsValues,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2ObjectsObjectRecordsValues2$inboundSchema),
  z.lazy(() => Values4$inboundSchema),
  z.lazy(() => Values10$inboundSchema),
  z.lazy(() => Values13$inboundSchema),
  z.lazy(() => Values14$inboundSchema),
  z.lazy(() => Values15$inboundSchema),
  z.lazy(() => Values16$inboundSchema),
  z.lazy(() => Values17$inboundSchema),
  z.lazy(() => PostV2ObjectsObjectRecordsValues1$inboundSchema),
  z.lazy(() => Values3$inboundSchema),
  z.lazy(() => Values5$inboundSchema),
  z.lazy(() => Values7$inboundSchema),
  z.lazy(() => Values8$inboundSchema),
  z.lazy(() => Values11$inboundSchema),
  z.lazy(() => Values12$inboundSchema),
  z.lazy(() => Values6$inboundSchema),
  z.lazy(() => Values9$inboundSchema),
]);

/** @internal */
export type PostV2ObjectsObjectRecordsValues$Outbound =
  | PostV2ObjectsObjectRecordsValues2$Outbound
  | Values4$Outbound
  | Values10$Outbound
  | Values13$Outbound
  | Values14$Outbound
  | Values15$Outbound
  | Values16$Outbound
  | Values17$Outbound
  | PostV2ObjectsObjectRecordsValues1$Outbound
  | Values3$Outbound
  | Values5$Outbound
  | Values7$Outbound
  | Values8$Outbound
  | Values11$Outbound
  | Values12$Outbound
  | Values6$Outbound
  | Values9$Outbound;

/** @internal */
export const PostV2ObjectsObjectRecordsValues$outboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsValues$Outbound,
  z.ZodTypeDef,
  PostV2ObjectsObjectRecordsValues
> = z.union([
  z.lazy(() => PostV2ObjectsObjectRecordsValues2$outboundSchema),
  z.lazy(() => Values4$outboundSchema),
  z.lazy(() => Values10$outboundSchema),
  z.lazy(() => Values13$outboundSchema),
  z.lazy(() => Values14$outboundSchema),
  z.lazy(() => Values15$outboundSchema),
  z.lazy(() => Values16$outboundSchema),
  z.lazy(() => Values17$outboundSchema),
  z.lazy(() => PostV2ObjectsObjectRecordsValues1$outboundSchema),
  z.lazy(() => Values3$outboundSchema),
  z.lazy(() => Values5$outboundSchema),
  z.lazy(() => Values7$outboundSchema),
  z.lazy(() => Values8$outboundSchema),
  z.lazy(() => Values11$outboundSchema),
  z.lazy(() => Values12$outboundSchema),
  z.lazy(() => Values6$outboundSchema),
  z.lazy(() => Values9$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsValues$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsValues$inboundSchema` instead. */
  export const inboundSchema = PostV2ObjectsObjectRecordsValues$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValues$outboundSchema` instead. */
  export const outboundSchema = PostV2ObjectsObjectRecordsValues$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsValues$Outbound` instead. */
  export type Outbound = PostV2ObjectsObjectRecordsValues$Outbound;
}

export function postV2ObjectsObjectRecordsValuesToJSON(
  postV2ObjectsObjectRecordsValues: PostV2ObjectsObjectRecordsValues,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsValues$outboundSchema.parse(
      postV2ObjectsObjectRecordsValues,
    ),
  );
}

export function postV2ObjectsObjectRecordsValuesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2ObjectsObjectRecordsValues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2ObjectsObjectRecordsValues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsValues' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsRecordsData$inboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsRecordsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.lazy(() => PostV2ObjectsObjectRecordsId$inboundSchema),
  created_at: z.string(),
  values: z.record(
    z.array(z.union([
      z.lazy(() => PostV2ObjectsObjectRecordsValues2$inboundSchema),
      z.lazy(() =>
        Values4$inboundSchema
      ),
      z.lazy(() => Values10$inboundSchema),
      z.lazy(() => Values13$inboundSchema),
      z.lazy(() => Values14$inboundSchema),
      z.lazy(() => Values15$inboundSchema),
      z.lazy(() => Values16$inboundSchema),
      z.lazy(() => Values17$inboundSchema),
      z.lazy(() => PostV2ObjectsObjectRecordsValues1$inboundSchema),
      z.lazy(() => Values3$inboundSchema),
      z.lazy(() => Values5$inboundSchema),
      z.lazy(() => Values7$inboundSchema),
      z.lazy(() => Values8$inboundSchema),
      z.lazy(() => Values11$inboundSchema),
      z.lazy(() => Values12$inboundSchema),
      z.lazy(() => Values6$inboundSchema),
      z.lazy(() => Values9$inboundSchema),
    ])),
  ),
}).transform((v) => {
  return remap$(v, {
    "created_at": "createdAt",
  });
});

/** @internal */
export type PostV2ObjectsObjectRecordsRecordsData$Outbound = {
  id: PostV2ObjectsObjectRecordsId$Outbound;
  created_at: string;
  values: {
    [k: string]: Array<
      | PostV2ObjectsObjectRecordsValues2$Outbound
      | Values4$Outbound
      | Values10$Outbound
      | Values13$Outbound
      | Values14$Outbound
      | Values15$Outbound
      | Values16$Outbound
      | Values17$Outbound
      | PostV2ObjectsObjectRecordsValues1$Outbound
      | Values3$Outbound
      | Values5$Outbound
      | Values7$Outbound
      | Values8$Outbound
      | Values11$Outbound
      | Values12$Outbound
      | Values6$Outbound
      | Values9$Outbound
    >;
  };
};

/** @internal */
export const PostV2ObjectsObjectRecordsRecordsData$outboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsRecordsData$Outbound,
  z.ZodTypeDef,
  PostV2ObjectsObjectRecordsRecordsData
> = z.object({
  id: z.lazy(() => PostV2ObjectsObjectRecordsId$outboundSchema),
  createdAt: z.string(),
  values: z.record(
    z.array(z.union([
      z.lazy(() => PostV2ObjectsObjectRecordsValues2$outboundSchema),
      z.lazy(() =>
        Values4$outboundSchema
      ),
      z.lazy(() => Values10$outboundSchema),
      z.lazy(() => Values13$outboundSchema),
      z.lazy(() => Values14$outboundSchema),
      z.lazy(() => Values15$outboundSchema),
      z.lazy(() => Values16$outboundSchema),
      z.lazy(() => Values17$outboundSchema),
      z.lazy(() => PostV2ObjectsObjectRecordsValues1$outboundSchema),
      z.lazy(() => Values3$outboundSchema),
      z.lazy(() => Values5$outboundSchema),
      z.lazy(() => Values7$outboundSchema),
      z.lazy(() => Values8$outboundSchema),
      z.lazy(() => Values11$outboundSchema),
      z.lazy(() => Values12$outboundSchema),
      z.lazy(() => Values6$outboundSchema),
      z.lazy(() => Values9$outboundSchema),
    ])),
  ),
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsRecordsData$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsRecordsData$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsRecordsData$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsRecordsData$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsRecordsData$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsRecordsData$Outbound` instead. */
  export type Outbound = PostV2ObjectsObjectRecordsRecordsData$Outbound;
}

export function postV2ObjectsObjectRecordsRecordsDataToJSON(
  postV2ObjectsObjectRecordsRecordsData: PostV2ObjectsObjectRecordsRecordsData,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsRecordsData$outboundSchema.parse(
      postV2ObjectsObjectRecordsRecordsData,
    ),
  );
}

export function postV2ObjectsObjectRecordsRecordsDataFromJSON(
  jsonString: string,
): SafeParseResult<PostV2ObjectsObjectRecordsRecordsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsRecordsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsRecordsData' from JSON`,
  );
}

/** @internal */
export const PostV2ObjectsObjectRecordsResponseBody$inboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => PostV2ObjectsObjectRecordsRecordsData$inboundSchema),
});

/** @internal */
export type PostV2ObjectsObjectRecordsResponseBody$Outbound = {
  data: PostV2ObjectsObjectRecordsRecordsData$Outbound;
};

/** @internal */
export const PostV2ObjectsObjectRecordsResponseBody$outboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2ObjectsObjectRecordsResponseBody
> = z.object({
  data: z.lazy(() => PostV2ObjectsObjectRecordsRecordsData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsResponseBody$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsResponseBody$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsResponseBody$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsResponseBody$Outbound` instead. */
  export type Outbound = PostV2ObjectsObjectRecordsResponseBody$Outbound;
}

export function postV2ObjectsObjectRecordsResponseBodyToJSON(
  postV2ObjectsObjectRecordsResponseBody:
    PostV2ObjectsObjectRecordsResponseBody,
): string {
  return JSON.stringify(
    PostV2ObjectsObjectRecordsResponseBody$outboundSchema.parse(
      postV2ObjectsObjectRecordsResponseBody,
    ),
  );
}

export function postV2ObjectsObjectRecordsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<PostV2ObjectsObjectRecordsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ObjectsObjectRecordsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2ObjectsObjectRecordsResponseBody' from JSON`,
  );
}
