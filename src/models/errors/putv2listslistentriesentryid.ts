/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const PutV2ListsListEntriesEntryIdEntriesType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PutV2ListsListEntriesEntryIdEntriesType = ClosedEnum<
  typeof PutV2ListsListEntriesEntryIdEntriesType
>;

export const PutV2ListsListEntriesEntryIdEntriesCode = {
  NotFound: "not_found",
} as const;
export type PutV2ListsListEntriesEntryIdEntriesCode = ClosedEnum<
  typeof PutV2ListsListEntriesEntryIdEntriesCode
>;

/**
 * Not Found
 */
export type PutV2ListsListEntriesEntryIdEntriesResponseBodyData = {
  statusCode: number;
  type: PutV2ListsListEntriesEntryIdEntriesType;
  code: PutV2ListsListEntriesEntryIdEntriesCode;
  message: string;
};

/**
 * Not Found
 */
export class PutV2ListsListEntriesEntryIdEntriesResponseBody extends Error {
  statusCode: number;
  type: PutV2ListsListEntriesEntryIdEntriesType;
  code: PutV2ListsListEntriesEntryIdEntriesCode;

  /** The original data that was passed to this error instance. */
  data$: PutV2ListsListEntriesEntryIdEntriesResponseBodyData;

  constructor(err: PutV2ListsListEntriesEntryIdEntriesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PutV2ListsListEntriesEntryIdEntriesResponseBody";
  }
}

export const PutV2ListsListEntriesEntryIdType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PutV2ListsListEntriesEntryIdType = ClosedEnum<
  typeof PutV2ListsListEntriesEntryIdType
>;

export const PutV2ListsListEntriesEntryIdCode = {
  ImmutableValue: "immutable_value",
} as const;
export type PutV2ListsListEntriesEntryIdCode = ClosedEnum<
  typeof PutV2ListsListEntriesEntryIdCode
>;

/**
 * Bad Request
 */
export type PutV2ListsListEntriesEntryIdResponseBodyData = {
  statusCode: number;
  type: PutV2ListsListEntriesEntryIdType;
  code: PutV2ListsListEntriesEntryIdCode;
  message: string;
};

/**
 * Bad Request
 */
export class PutV2ListsListEntriesEntryIdResponseBody extends Error {
  statusCode: number;
  type: PutV2ListsListEntriesEntryIdType;
  code: PutV2ListsListEntriesEntryIdCode;

  /** The original data that was passed to this error instance. */
  data$: PutV2ListsListEntriesEntryIdResponseBodyData;

  constructor(err: PutV2ListsListEntriesEntryIdResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PutV2ListsListEntriesEntryIdResponseBody";
  }
}

/** @internal */
export const PutV2ListsListEntriesEntryIdEntriesType$inboundSchema:
  z.ZodNativeEnum<typeof PutV2ListsListEntriesEntryIdEntriesType> = z
    .nativeEnum(PutV2ListsListEntriesEntryIdEntriesType);

/** @internal */
export const PutV2ListsListEntriesEntryIdEntriesType$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ListsListEntriesEntryIdEntriesType> =
    PutV2ListsListEntriesEntryIdEntriesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ListsListEntriesEntryIdEntriesType$ {
  /** @deprecated use `PutV2ListsListEntriesEntryIdEntriesType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ListsListEntriesEntryIdEntriesType$inboundSchema;
  /** @deprecated use `PutV2ListsListEntriesEntryIdEntriesType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ListsListEntriesEntryIdEntriesType$outboundSchema;
}

/** @internal */
export const PutV2ListsListEntriesEntryIdEntriesCode$inboundSchema:
  z.ZodNativeEnum<typeof PutV2ListsListEntriesEntryIdEntriesCode> = z
    .nativeEnum(PutV2ListsListEntriesEntryIdEntriesCode);

/** @internal */
export const PutV2ListsListEntriesEntryIdEntriesCode$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ListsListEntriesEntryIdEntriesCode> =
    PutV2ListsListEntriesEntryIdEntriesCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ListsListEntriesEntryIdEntriesCode$ {
  /** @deprecated use `PutV2ListsListEntriesEntryIdEntriesCode$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ListsListEntriesEntryIdEntriesCode$inboundSchema;
  /** @deprecated use `PutV2ListsListEntriesEntryIdEntriesCode$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ListsListEntriesEntryIdEntriesCode$outboundSchema;
}

/** @internal */
export const PutV2ListsListEntriesEntryIdEntriesResponseBody$inboundSchema:
  z.ZodType<
    PutV2ListsListEntriesEntryIdEntriesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type: PutV2ListsListEntriesEntryIdEntriesType$inboundSchema,
    code: PutV2ListsListEntriesEntryIdEntriesCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new PutV2ListsListEntriesEntryIdEntriesResponseBody(remapped);
    });

/** @internal */
export type PutV2ListsListEntriesEntryIdEntriesResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PutV2ListsListEntriesEntryIdEntriesResponseBody$outboundSchema:
  z.ZodType<
    PutV2ListsListEntriesEntryIdEntriesResponseBody$Outbound,
    z.ZodTypeDef,
    PutV2ListsListEntriesEntryIdEntriesResponseBody
  > = z.instanceof(PutV2ListsListEntriesEntryIdEntriesResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type: PutV2ListsListEntriesEntryIdEntriesType$outboundSchema,
        code: PutV2ListsListEntriesEntryIdEntriesCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ListsListEntriesEntryIdEntriesResponseBody$ {
  /** @deprecated use `PutV2ListsListEntriesEntryIdEntriesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ListsListEntriesEntryIdEntriesResponseBody$inboundSchema;
  /** @deprecated use `PutV2ListsListEntriesEntryIdEntriesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ListsListEntriesEntryIdEntriesResponseBody$outboundSchema;
  /** @deprecated use `PutV2ListsListEntriesEntryIdEntriesResponseBody$Outbound` instead. */
  export type Outbound =
    PutV2ListsListEntriesEntryIdEntriesResponseBody$Outbound;
}

/** @internal */
export const PutV2ListsListEntriesEntryIdType$inboundSchema: z.ZodNativeEnum<
  typeof PutV2ListsListEntriesEntryIdType
> = z.nativeEnum(PutV2ListsListEntriesEntryIdType);

/** @internal */
export const PutV2ListsListEntriesEntryIdType$outboundSchema: z.ZodNativeEnum<
  typeof PutV2ListsListEntriesEntryIdType
> = PutV2ListsListEntriesEntryIdType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ListsListEntriesEntryIdType$ {
  /** @deprecated use `PutV2ListsListEntriesEntryIdType$inboundSchema` instead. */
  export const inboundSchema = PutV2ListsListEntriesEntryIdType$inboundSchema;
  /** @deprecated use `PutV2ListsListEntriesEntryIdType$outboundSchema` instead. */
  export const outboundSchema = PutV2ListsListEntriesEntryIdType$outboundSchema;
}

/** @internal */
export const PutV2ListsListEntriesEntryIdCode$inboundSchema: z.ZodNativeEnum<
  typeof PutV2ListsListEntriesEntryIdCode
> = z.nativeEnum(PutV2ListsListEntriesEntryIdCode);

/** @internal */
export const PutV2ListsListEntriesEntryIdCode$outboundSchema: z.ZodNativeEnum<
  typeof PutV2ListsListEntriesEntryIdCode
> = PutV2ListsListEntriesEntryIdCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ListsListEntriesEntryIdCode$ {
  /** @deprecated use `PutV2ListsListEntriesEntryIdCode$inboundSchema` instead. */
  export const inboundSchema = PutV2ListsListEntriesEntryIdCode$inboundSchema;
  /** @deprecated use `PutV2ListsListEntriesEntryIdCode$outboundSchema` instead. */
  export const outboundSchema = PutV2ListsListEntriesEntryIdCode$outboundSchema;
}

/** @internal */
export const PutV2ListsListEntriesEntryIdResponseBody$inboundSchema: z.ZodType<
  PutV2ListsListEntriesEntryIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: PutV2ListsListEntriesEntryIdType$inboundSchema,
  code: PutV2ListsListEntriesEntryIdCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new PutV2ListsListEntriesEntryIdResponseBody(remapped);
  });

/** @internal */
export type PutV2ListsListEntriesEntryIdResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PutV2ListsListEntriesEntryIdResponseBody$outboundSchema: z.ZodType<
  PutV2ListsListEntriesEntryIdResponseBody$Outbound,
  z.ZodTypeDef,
  PutV2ListsListEntriesEntryIdResponseBody
> = z.instanceof(PutV2ListsListEntriesEntryIdResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      statusCode: z.number(),
      type: PutV2ListsListEntriesEntryIdType$outboundSchema,
      code: PutV2ListsListEntriesEntryIdCode$outboundSchema,
      message: z.string(),
    }).transform((v) => {
      return remap$(v, {
        statusCode: "status_code",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ListsListEntriesEntryIdResponseBody$ {
  /** @deprecated use `PutV2ListsListEntriesEntryIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ListsListEntriesEntryIdResponseBody$inboundSchema;
  /** @deprecated use `PutV2ListsListEntriesEntryIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ListsListEntriesEntryIdResponseBody$outboundSchema;
  /** @deprecated use `PutV2ListsListEntriesEntryIdResponseBody$Outbound` instead. */
  export type Outbound = PutV2ListsListEntriesEntryIdResponseBody$Outbound;
}
