/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Whether the attribute is on an object or a list.
 */
export const GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget = {
  Objects: "objects",
  Lists: "lists",
} as const;
/**
 * Whether the attribute is on an object or a list.
 */
export type GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget =
  ClosedEnum<
    typeof GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget
  >;

export type GetV2TargetIdentifierAttributesAttributeOptionsRequest = {
  /**
   * Whether the attribute is on an object or a list.
   */
  target: GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget;
  identifier: string;
  attribute: string;
  showArchived?: boolean | undefined;
};

/**
 * Success
 */
export type GetV2TargetIdentifierAttributesAttributeOptionsResponseBody = {
  data: Array<components.SelectOption>;
};

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget
  > = z.nativeEnum(
    GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget,
  );

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget
  > =
    GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget$ {
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget$inboundSchema` instead. */
  export const inboundSchema =
    GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget$inboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget$outboundSchema` instead. */
  export const outboundSchema =
    GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget$outboundSchema;
}

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeOptionsRequest$inboundSchema:
  z.ZodType<
    GetV2TargetIdentifierAttributesAttributeOptionsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    target:
      GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget$inboundSchema,
    identifier: z.string(),
    attribute: z.string(),
    show_archived: z.boolean().optional(),
  }).transform((v) => {
    return remap$(v, {
      "show_archived": "showArchived",
    });
  });

/** @internal */
export type GetV2TargetIdentifierAttributesAttributeOptionsRequest$Outbound = {
  target: string;
  identifier: string;
  attribute: string;
  show_archived?: boolean | undefined;
};

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeOptionsRequest$outboundSchema:
  z.ZodType<
    GetV2TargetIdentifierAttributesAttributeOptionsRequest$Outbound,
    z.ZodTypeDef,
    GetV2TargetIdentifierAttributesAttributeOptionsRequest
  > = z.object({
    target:
      GetV2TargetIdentifierAttributesAttributeOptionsPathParamTarget$outboundSchema,
    identifier: z.string(),
    attribute: z.string(),
    showArchived: z.boolean().optional(),
  }).transform((v) => {
    return remap$(v, {
      showArchived: "show_archived",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2TargetIdentifierAttributesAttributeOptionsRequest$ {
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeOptionsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV2TargetIdentifierAttributesAttributeOptionsRequest$inboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeOptionsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV2TargetIdentifierAttributesAttributeOptionsRequest$outboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeOptionsRequest$Outbound` instead. */
  export type Outbound =
    GetV2TargetIdentifierAttributesAttributeOptionsRequest$Outbound;
}

export function getV2TargetIdentifierAttributesAttributeOptionsRequestToJSON(
  getV2TargetIdentifierAttributesAttributeOptionsRequest:
    GetV2TargetIdentifierAttributesAttributeOptionsRequest,
): string {
  return JSON.stringify(
    GetV2TargetIdentifierAttributesAttributeOptionsRequest$outboundSchema.parse(
      getV2TargetIdentifierAttributesAttributeOptionsRequest,
    ),
  );
}

export function getV2TargetIdentifierAttributesAttributeOptionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2TargetIdentifierAttributesAttributeOptionsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2TargetIdentifierAttributesAttributeOptionsRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2TargetIdentifierAttributesAttributeOptionsRequest' from JSON`,
  );
}

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$inboundSchema:
  z.ZodType<
    GetV2TargetIdentifierAttributesAttributeOptionsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.array(components.SelectOption$inboundSchema),
  });

/** @internal */
export type GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$Outbound =
  {
    data: Array<components.SelectOption$Outbound>;
  };

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$outboundSchema:
  z.ZodType<
    GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$Outbound,
    z.ZodTypeDef,
    GetV2TargetIdentifierAttributesAttributeOptionsResponseBody
  > = z.object({
    data: z.array(components.SelectOption$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$ {
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$inboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$outboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$Outbound` instead. */
  export type Outbound =
    GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$Outbound;
}

export function getV2TargetIdentifierAttributesAttributeOptionsResponseBodyToJSON(
  getV2TargetIdentifierAttributesAttributeOptionsResponseBody:
    GetV2TargetIdentifierAttributesAttributeOptionsResponseBody,
): string {
  return JSON.stringify(
    GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$outboundSchema
      .parse(getV2TargetIdentifierAttributesAttributeOptionsResponseBody),
  );
}

export function getV2TargetIdentifierAttributesAttributeOptionsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2TargetIdentifierAttributesAttributeOptionsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2TargetIdentifierAttributesAttributeOptionsResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2TargetIdentifierAttributesAttributeOptionsResponseBody' from JSON`,
  );
}
