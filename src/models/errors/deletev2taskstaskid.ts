/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const DeleteV2TasksTaskIdType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type DeleteV2TasksTaskIdType = ClosedEnum<
  typeof DeleteV2TasksTaskIdType
>;

export const DeleteV2TasksTaskIdCode = {
  NotFound: "not_found",
} as const;
export type DeleteV2TasksTaskIdCode = ClosedEnum<
  typeof DeleteV2TasksTaskIdCode
>;

/**
 * Not Found
 */
export type DeleteV2TasksTaskIdResponseBodyData = {
  statusCode: number;
  type: DeleteV2TasksTaskIdType;
  code: DeleteV2TasksTaskIdCode;
  message: string;
};

/**
 * Not Found
 */
export class DeleteV2TasksTaskIdResponseBody extends Error {
  statusCode: number;
  type: DeleteV2TasksTaskIdType;
  code: DeleteV2TasksTaskIdCode;

  /** The original data that was passed to this error instance. */
  data$: DeleteV2TasksTaskIdResponseBodyData;

  constructor(err: DeleteV2TasksTaskIdResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "DeleteV2TasksTaskIdResponseBody";
  }
}

/** @internal */
export const DeleteV2TasksTaskIdType$inboundSchema: z.ZodNativeEnum<
  typeof DeleteV2TasksTaskIdType
> = z.nativeEnum(DeleteV2TasksTaskIdType);

/** @internal */
export const DeleteV2TasksTaskIdType$outboundSchema: z.ZodNativeEnum<
  typeof DeleteV2TasksTaskIdType
> = DeleteV2TasksTaskIdType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV2TasksTaskIdType$ {
  /** @deprecated use `DeleteV2TasksTaskIdType$inboundSchema` instead. */
  export const inboundSchema = DeleteV2TasksTaskIdType$inboundSchema;
  /** @deprecated use `DeleteV2TasksTaskIdType$outboundSchema` instead. */
  export const outboundSchema = DeleteV2TasksTaskIdType$outboundSchema;
}

/** @internal */
export const DeleteV2TasksTaskIdCode$inboundSchema: z.ZodNativeEnum<
  typeof DeleteV2TasksTaskIdCode
> = z.nativeEnum(DeleteV2TasksTaskIdCode);

/** @internal */
export const DeleteV2TasksTaskIdCode$outboundSchema: z.ZodNativeEnum<
  typeof DeleteV2TasksTaskIdCode
> = DeleteV2TasksTaskIdCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV2TasksTaskIdCode$ {
  /** @deprecated use `DeleteV2TasksTaskIdCode$inboundSchema` instead. */
  export const inboundSchema = DeleteV2TasksTaskIdCode$inboundSchema;
  /** @deprecated use `DeleteV2TasksTaskIdCode$outboundSchema` instead. */
  export const outboundSchema = DeleteV2TasksTaskIdCode$outboundSchema;
}

/** @internal */
export const DeleteV2TasksTaskIdResponseBody$inboundSchema: z.ZodType<
  DeleteV2TasksTaskIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: DeleteV2TasksTaskIdType$inboundSchema,
  code: DeleteV2TasksTaskIdCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new DeleteV2TasksTaskIdResponseBody(remapped);
  });

/** @internal */
export type DeleteV2TasksTaskIdResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const DeleteV2TasksTaskIdResponseBody$outboundSchema: z.ZodType<
  DeleteV2TasksTaskIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteV2TasksTaskIdResponseBody
> = z.instanceof(DeleteV2TasksTaskIdResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      statusCode: z.number(),
      type: DeleteV2TasksTaskIdType$outboundSchema,
      code: DeleteV2TasksTaskIdCode$outboundSchema,
      message: z.string(),
    }).transform((v) => {
      return remap$(v, {
        statusCode: "status_code",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV2TasksTaskIdResponseBody$ {
  /** @deprecated use `DeleteV2TasksTaskIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteV2TasksTaskIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteV2TasksTaskIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteV2TasksTaskIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteV2TasksTaskIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteV2TasksTaskIdResponseBody$Outbound;
}
