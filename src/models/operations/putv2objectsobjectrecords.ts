/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * An object with an attribute `api_slug` or `attribute_id` as the key, and a single value (for single-select attributes), or an array of values (for single or multi-select attributes) as the values. For complete documentation on values for all attribute types, please see our [attribute type docs](/docs/attribute-types).
 */
export type PutV2ObjectsObjectRecordsValues = {};

export type PutV2ObjectsObjectRecordsData = {
  /**
   * An object with an attribute `api_slug` or `attribute_id` as the key, and a single value (for single-select attributes), or an array of values (for single or multi-select attributes) as the values. For complete documentation on values for all attribute types, please see our [attribute type docs](/docs/attribute-types).
   */
  values: PutV2ObjectsObjectRecordsValues;
};

export type PutV2ObjectsObjectRecordsRequestBody = {
  data: PutV2ObjectsObjectRecordsData;
};

export type PutV2ObjectsObjectRecordsRequest = {
  object: string;
  matchingAttribute: string;
  requestBody: PutV2ObjectsObjectRecordsRequestBody;
};

export type PutV2ObjectsObjectRecordsId = {
  /**
   * A UUID identifying the workspace this record belongs to.
   */
  workspaceId: string;
  /**
   * A UUID identifying the object this record belongs to.
   */
  objectId: string;
  /**
   * A UUID identifying this record.
   */
  recordId: string;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType =
  {
    Timestamp: "timestamp",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType
  >;

export type PutV2ObjectsObjectRecordsValues17 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType;
  /**
   * A timestamp value represents a single, universal moment in time using an ISO 8601 formatted string. This means that a timestamp consists of a date, a time (with nanosecond precision), and a time zone. Attio will coerce timestamps which do not provide full nanosecond precision and UTC is assumed if no time zone is provided. For example, "2023", "2023-01", "2023-01-02", "2023-01-02T13:00", "2023-01-02T13:00:00", and "2023-01-02T13:00:00.000000000" will all be coerced to "2023-01-02T13:00:00.000000000Z". Timestamps are always returned in UTC. For example, writing a timestamp value using the string "2023-01-02T13:00:00.000000000+02:00" will result in the value "2023-01-02T11:00:00.000000000Z" being returned. The maximum date is "9999-12-31T23:59:59.999999999Z".
   */
  value: Date;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType =
  {
    Text: "text",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType
  >;

export type PutV2ObjectsObjectRecordsValues16 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor;
  /**
   * A raw text field. Values are limited to 10MB.
   */
  value: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType =
  {
    Select: "select",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType
  >;

export type PutV2ObjectsObjectRecordsValues15 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor;
  option: components.SelectOption;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType =
  {
    Rating: "rating",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType
  >;

export type PutV2ObjectsObjectRecordsValues14 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor;
  /**
   * A number between 0 and 5 (inclusive) to represent a star rating.
   */
  value: number;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType =
  {
    Status: "status",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType
  >;

export type PutV2ObjectsObjectRecordsValues13 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor;
  status: components.Status;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
      | null
      | undefined;
  };

/**
 * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsCountryCode = {
  Af: "AF",
  Ax: "AX",
  Al: "AL",
  Dz: "DZ",
  As: "AS",
  Ad: "AD",
  Ao: "AO",
  Ai: "AI",
  Aq: "AQ",
  Ag: "AG",
  Ar: "AR",
  Am: "AM",
  Aw: "AW",
  Au: "AU",
  At: "AT",
  Az: "AZ",
  Bs: "BS",
  Bh: "BH",
  Bd: "BD",
  Bb: "BB",
  By: "BY",
  Be: "BE",
  Bz: "BZ",
  Bj: "BJ",
  Bm: "BM",
  Bt: "BT",
  Bo: "BO",
  Ba: "BA",
  Bw: "BW",
  Bv: "BV",
  Br: "BR",
  Io: "IO",
  Bn: "BN",
  Bg: "BG",
  Bf: "BF",
  Bi: "BI",
  Kh: "KH",
  Cm: "CM",
  Ca: "CA",
  Cv: "CV",
  Ky: "KY",
  Cf: "CF",
  Td: "TD",
  Cl: "CL",
  Cn: "CN",
  Cx: "CX",
  Cc: "CC",
  Co: "CO",
  Km: "KM",
  Cg: "CG",
  Cd: "CD",
  Ck: "CK",
  Cr: "CR",
  Ci: "CI",
  Hr: "HR",
  Cu: "CU",
  Cw: "CW",
  Cy: "CY",
  Cz: "CZ",
  Dk: "DK",
  Dj: "DJ",
  Dm: "DM",
  Do: "DO",
  Ec: "EC",
  Eg: "EG",
  Sv: "SV",
  Gq: "GQ",
  Er: "ER",
  Ee: "EE",
  Et: "ET",
  Fk: "FK",
  Fo: "FO",
  Fj: "FJ",
  Fi: "FI",
  Fr: "FR",
  Gf: "GF",
  Pf: "PF",
  Tf: "TF",
  Ga: "GA",
  Gm: "GM",
  Ge: "GE",
  De: "DE",
  Gh: "GH",
  Gi: "GI",
  Gr: "GR",
  Gl: "GL",
  Gd: "GD",
  Gp: "GP",
  Gu: "GU",
  Gt: "GT",
  Gg: "GG",
  Gn: "GN",
  Gw: "GW",
  Gy: "GY",
  Ht: "HT",
  Hm: "HM",
  Va: "VA",
  Hn: "HN",
  Hk: "HK",
  Hu: "HU",
  Is: "IS",
  In: "IN",
  Id: "ID",
  Ir: "IR",
  Iq: "IQ",
  Ie: "IE",
  Im: "IM",
  Il: "IL",
  It: "IT",
  Jm: "JM",
  Jp: "JP",
  Je: "JE",
  Jo: "JO",
  Kz: "KZ",
  Ke: "KE",
  Ki: "KI",
  Kr: "KR",
  Kw: "KW",
  Kg: "KG",
  La: "LA",
  Lv: "LV",
  Lb: "LB",
  Ls: "LS",
  Lr: "LR",
  Ly: "LY",
  Li: "LI",
  Lt: "LT",
  Lu: "LU",
  Mo: "MO",
  Mk: "MK",
  Mg: "MG",
  Mw: "MW",
  My: "MY",
  Mv: "MV",
  Ml: "ML",
  Mt: "MT",
  Mh: "MH",
  Mq: "MQ",
  Mr: "MR",
  Mu: "MU",
  Yt: "YT",
  Mx: "MX",
  Fm: "FM",
  Md: "MD",
  Mc: "MC",
  Mn: "MN",
  Me: "ME",
  Ms: "MS",
  Ma: "MA",
  Mz: "MZ",
  Mm: "MM",
  Na: "NA",
  Nr: "NR",
  Np: "NP",
  Nl: "NL",
  An: "AN",
  Nc: "NC",
  Nz: "NZ",
  Ni: "NI",
  Ne: "NE",
  Ng: "NG",
  Nu: "NU",
  Nf: "NF",
  Mp: "MP",
  No: "NO",
  Om: "OM",
  Pk: "PK",
  Pw: "PW",
  Ps: "PS",
  Pa: "PA",
  Pg: "PG",
  Py: "PY",
  Pe: "PE",
  Ph: "PH",
  Pn: "PN",
  Pl: "PL",
  Pt: "PT",
  Pr: "PR",
  Qa: "QA",
  Re: "RE",
  Ro: "RO",
  Ru: "RU",
  Rw: "RW",
  Bl: "BL",
  Sh: "SH",
  Kn: "KN",
  Lc: "LC",
  Mf: "MF",
  Pm: "PM",
  Vc: "VC",
  Ws: "WS",
  Sm: "SM",
  St: "ST",
  Sa: "SA",
  Sn: "SN",
  Ss: "SS",
  Rs: "RS",
  Sc: "SC",
  Sl: "SL",
  Sg: "SG",
  Sk: "SK",
  Si: "SI",
  Sb: "SB",
  So: "SO",
  Za: "ZA",
  Gs: "GS",
  Es: "ES",
  Lk: "LK",
  Sd: "SD",
  Sr: "SR",
  Sj: "SJ",
  Sz: "SZ",
  Se: "SE",
  Ch: "CH",
  Sy: "SY",
  Tw: "TW",
  Tj: "TJ",
  Tz: "TZ",
  Th: "TH",
  Tl: "TL",
  Tg: "TG",
  Tk: "TK",
  To: "TO",
  Tt: "TT",
  Tn: "TN",
  Tr: "TR",
  Tm: "TM",
  Tc: "TC",
  Tv: "TV",
  Ug: "UG",
  Ua: "UA",
  Ae: "AE",
  Gb: "GB",
  Us: "US",
  Um: "UM",
  Uy: "UY",
  Uz: "UZ",
  Vu: "VU",
  Ve: "VE",
  Vn: "VN",
  Vg: "VG",
  Vi: "VI",
  Wf: "WF",
  Eh: "EH",
  Ye: "YE",
  Zm: "ZM",
  Zw: "ZW",
} as const;
/**
 * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsCountryCode = ClosedEnum<
  typeof PutV2ObjectsObjectRecordsValuesRecordsCountryCode
>;

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType =
  {
    PhoneNumber: "phone-number",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType
  >;

export type PutV2ObjectsObjectRecordsValues12 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor;
  /**
   * The raw, original phone number, as inputted.
   */
  originalPhoneNumber: string;
  /**
   * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
   */
  countryCode: PutV2ObjectsObjectRecordsValuesRecordsCountryCode;
  phoneNumber: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType =
  {
    PersonalName: "personal-name",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType
  >;

export type PutV2ObjectsObjectRecordsValues11 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor;
  /**
   * The first name.
   */
  firstName: string;
  /**
   * The last name.
   */
  lastName: string;
  /**
   * The full name.
   */
  fullName: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType =
  {
    Number: "number",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType
  >;

export type PutV2ObjectsObjectRecordsValues10 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor;
  /**
   * Numbers are persisted as 64 bit floats.
   */
  value: number;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
      | null
      | undefined;
  };

/**
 * The ISO 3166-1 alpha-2 country code for the country this location is in.
 */
export const PutV2ObjectsObjectRecordsValuesCountryCode = {
  Af: "AF",
  Ax: "AX",
  Al: "AL",
  Dz: "DZ",
  As: "AS",
  Ad: "AD",
  Ao: "AO",
  Ai: "AI",
  Aq: "AQ",
  Ag: "AG",
  Ar: "AR",
  Am: "AM",
  Aw: "AW",
  Au: "AU",
  At: "AT",
  Az: "AZ",
  Bs: "BS",
  Bh: "BH",
  Bd: "BD",
  Bb: "BB",
  By: "BY",
  Be: "BE",
  Bz: "BZ",
  Bj: "BJ",
  Bm: "BM",
  Bt: "BT",
  Bo: "BO",
  Ba: "BA",
  Bw: "BW",
  Bv: "BV",
  Br: "BR",
  Io: "IO",
  Bn: "BN",
  Bg: "BG",
  Bf: "BF",
  Bi: "BI",
  Kh: "KH",
  Cm: "CM",
  Ca: "CA",
  Cv: "CV",
  Ky: "KY",
  Cf: "CF",
  Td: "TD",
  Cl: "CL",
  Cn: "CN",
  Cx: "CX",
  Cc: "CC",
  Co: "CO",
  Km: "KM",
  Cg: "CG",
  Cd: "CD",
  Ck: "CK",
  Cr: "CR",
  Ci: "CI",
  Hr: "HR",
  Cu: "CU",
  Cw: "CW",
  Cy: "CY",
  Cz: "CZ",
  Dk: "DK",
  Dj: "DJ",
  Dm: "DM",
  Do: "DO",
  Ec: "EC",
  Eg: "EG",
  Sv: "SV",
  Gq: "GQ",
  Er: "ER",
  Ee: "EE",
  Et: "ET",
  Fk: "FK",
  Fo: "FO",
  Fj: "FJ",
  Fi: "FI",
  Fr: "FR",
  Gf: "GF",
  Pf: "PF",
  Tf: "TF",
  Ga: "GA",
  Gm: "GM",
  Ge: "GE",
  De: "DE",
  Gh: "GH",
  Gi: "GI",
  Gr: "GR",
  Gl: "GL",
  Gd: "GD",
  Gp: "GP",
  Gu: "GU",
  Gt: "GT",
  Gg: "GG",
  Gn: "GN",
  Gw: "GW",
  Gy: "GY",
  Ht: "HT",
  Hm: "HM",
  Va: "VA",
  Hn: "HN",
  Hk: "HK",
  Hu: "HU",
  Is: "IS",
  In: "IN",
  Id: "ID",
  Ir: "IR",
  Iq: "IQ",
  Ie: "IE",
  Im: "IM",
  Il: "IL",
  It: "IT",
  Jm: "JM",
  Jp: "JP",
  Je: "JE",
  Jo: "JO",
  Kz: "KZ",
  Ke: "KE",
  Ki: "KI",
  Kr: "KR",
  Kw: "KW",
  Kg: "KG",
  La: "LA",
  Lv: "LV",
  Lb: "LB",
  Ls: "LS",
  Lr: "LR",
  Ly: "LY",
  Li: "LI",
  Lt: "LT",
  Lu: "LU",
  Mo: "MO",
  Mk: "MK",
  Mg: "MG",
  Mw: "MW",
  My: "MY",
  Mv: "MV",
  Ml: "ML",
  Mt: "MT",
  Mh: "MH",
  Mq: "MQ",
  Mr: "MR",
  Mu: "MU",
  Yt: "YT",
  Mx: "MX",
  Fm: "FM",
  Md: "MD",
  Mc: "MC",
  Mn: "MN",
  Me: "ME",
  Ms: "MS",
  Ma: "MA",
  Mz: "MZ",
  Mm: "MM",
  Na: "NA",
  Nr: "NR",
  Np: "NP",
  Nl: "NL",
  An: "AN",
  Nc: "NC",
  Nz: "NZ",
  Ni: "NI",
  Ne: "NE",
  Ng: "NG",
  Nu: "NU",
  Nf: "NF",
  Mp: "MP",
  No: "NO",
  Om: "OM",
  Pk: "PK",
  Pw: "PW",
  Ps: "PS",
  Pa: "PA",
  Pg: "PG",
  Py: "PY",
  Pe: "PE",
  Ph: "PH",
  Pn: "PN",
  Pl: "PL",
  Pt: "PT",
  Pr: "PR",
  Qa: "QA",
  Re: "RE",
  Ro: "RO",
  Ru: "RU",
  Rw: "RW",
  Bl: "BL",
  Sh: "SH",
  Kn: "KN",
  Lc: "LC",
  Mf: "MF",
  Pm: "PM",
  Vc: "VC",
  Ws: "WS",
  Sm: "SM",
  St: "ST",
  Sa: "SA",
  Sn: "SN",
  Ss: "SS",
  Rs: "RS",
  Sc: "SC",
  Sl: "SL",
  Sg: "SG",
  Sk: "SK",
  Si: "SI",
  Sb: "SB",
  So: "SO",
  Za: "ZA",
  Gs: "GS",
  Es: "ES",
  Lk: "LK",
  Sd: "SD",
  Sr: "SR",
  Sj: "SJ",
  Sz: "SZ",
  Se: "SE",
  Ch: "CH",
  Sy: "SY",
  Tw: "TW",
  Tj: "TJ",
  Tz: "TZ",
  Th: "TH",
  Tl: "TL",
  Tg: "TG",
  Tk: "TK",
  To: "TO",
  Tt: "TT",
  Tn: "TN",
  Tr: "TR",
  Tm: "TM",
  Tc: "TC",
  Tv: "TV",
  Ug: "UG",
  Ua: "UA",
  Ae: "AE",
  Gb: "GB",
  Us: "US",
  Um: "UM",
  Uy: "UY",
  Uz: "UZ",
  Vu: "VU",
  Ve: "VE",
  Vn: "VN",
  Vg: "VG",
  Vi: "VI",
  Wf: "WF",
  Eh: "EH",
  Ye: "YE",
  Zm: "ZM",
  Zw: "ZW",
} as const;
/**
 * The ISO 3166-1 alpha-2 country code for the country this location is in.
 */
export type PutV2ObjectsObjectRecordsValuesCountryCode = ClosedEnum<
  typeof PutV2ObjectsObjectRecordsValuesCountryCode
>;

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType =
  {
    Location: "location",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType
  >;

export type PutV2ObjectsObjectRecordsValues9 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor;
  /**
   * The first line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line1: string | null;
  /**
   * The second line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line2: string | null;
  /**
   * The third line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line3: string | null;
  /**
   * The fourth line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line4: string | null;
  /**
   * The town, neighborhood or area the location is in.
   */
  locality: string | null;
  /**
   * The state, county, province or region that the location is in.
   */
  region: string | null;
  /**
   * The postcode or zip code for the location. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.}
   */
  postcode: string | null;
  /**
   * The ISO 3166-1 alpha-2 country code for the country this location is in.
   */
  countryCode: PutV2ObjectsObjectRecordsValuesCountryCode | null;
  /**
   * The latitude of the location. Validated by the regular expression `/^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?)$/`. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.}
   */
  latitude: string | null;
  /**
   * The longitude of the location. Validated by the regular expression `/^[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$/`
   */
  longitude: string | null;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
      | null
      | undefined;
  };

/**
 * The type of interaction e.g. calendar or email.
 */
export const PutV2ObjectsObjectRecordsValuesInteractionType = {
  CalendarEvent: "calendar-event",
  Call: "call",
  ChatThread: "chat-thread",
  Email: "email",
  InPersonMeeting: "in-person-meeting",
  Meeting: "meeting",
} as const;
/**
 * The type of interaction e.g. calendar or email.
 */
export type PutV2ObjectsObjectRecordsValuesInteractionType = ClosedEnum<
  typeof PutV2ObjectsObjectRecordsValuesInteractionType
>;

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesOwnerActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?:
    | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
    | null
    | undefined;
};

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType =
  {
    Interaction: "interaction",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType
  >;

export type PutV2ObjectsObjectRecordsValues8 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor;
  /**
   * The type of interaction e.g. calendar or email.
   */
  interactionType: PutV2ObjectsObjectRecordsValuesInteractionType;
  /**
   * When the interaction occurred.
   */
  interactedAt: Date;
  /**
   * The actor that created this value.
   */
  ownerActor: PutV2ObjectsObjectRecordsValuesOwnerActor;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType =
  {
    RecordReference: "record-reference",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType
  >;

export type PutV2ObjectsObjectRecordsValues7 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor;
  /**
   * A slug identifying the object that the referenced record belongs to.
   */
  targetObject: string;
  /**
   * A UUID to identify the referenced record.
   */
  targetRecordId: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType =
  {
    EmailAddress: "email-address",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType
  >;

export type PutV2ObjectsObjectRecordsValues6 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor;
  originalEmailAddress: string;
  emailAddress: string;
  emailDomain: string;
  emailRootDomain: string;
  emailLocalSpecifier: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType
  >;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType =
  {
    Domain: "domain",
  } as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType
  >;

export type PutV2ObjectsObjectRecordsValues5 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor;
  domain: string;
  rootDomain: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200Type = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200Type = ClosedEnum<
  typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200Type
>;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?:
    | PutV2ObjectsObjectRecordsValuesRecordsResponse200Type
    | null
    | undefined;
};

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType = {
  Date: "date",
} as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType
  >;

export type PutV2ObjectsObjectRecordsValues4 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor;
  /**
   * The attribute type of the value.
   */
  attributeType: PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType;
  /**
   * A date represents a single calendar year, month and day, independent of timezone. If hours, months, seconds or timezones are provided, they will be trimmed. For example, "2023" and "2023-01" will be coerced into "2023-01-01", and "2023-01-02", "2023-01-02T13:00", "2023-01-02T14:00:00", "2023-01-02T15:00:00.000000000", and "2023-01-02T15:00:00.000000000+02:00" will all be coerced to "2023-01-02". If a timezone is provided that would result in a different calendar date in UTC, the date will be coerced to UTC and then the timezone component will be trimmed. For example, the value "2023-01-02T23:00:00-10:00" will be returned as "2023-01-03". The maximum date is "9999-12-31".
   */
  value: string;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponseType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponseType = ClosedEnum<
  typeof PutV2ObjectsObjectRecordsValuesRecordsResponseType
>;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?: PutV2ObjectsObjectRecordsValuesRecordsResponseType | null | undefined;
};

/**
 * The ISO4217 currency code representing the currency that the value is stored in.
 */
export const PutV2ObjectsObjectRecordsValuesCurrencyCode = {
  Aud: "AUD",
  Brl: "BRL",
  Bel: "BEL",
  Cad: "CAD",
  Cny: "CNY",
  Cop: "COP",
  Czk: "CZK",
  Dkk: "DKK",
  Eur: "EUR",
  Hkd: "HKD",
  Isk: "ISK",
  Inr: "INR",
  Ils: "ILS",
  Jpy: "JPY",
  Krw: "KRW",
  Myr: "MYR",
  Mxn: "MXN",
  Ntd: "NTD",
  Nzd: "NZD",
  Ngn: "NGN",
  Nok: "NOK",
  Xpf: "XPF",
  Pen: "PEN",
  Php: "PHP",
  Pln: "PLN",
  Gbp: "GBP",
  Sar: "SAR",
  Sgd: "SGD",
  Zar: "ZAR",
  Sek: "SEK",
  Chf: "CHF",
  Aed: "AED",
  Usd: "USD",
} as const;
/**
 * The ISO4217 currency code representing the currency that the value is stored in.
 */
export type PutV2ObjectsObjectRecordsValuesCurrencyCode = ClosedEnum<
  typeof PutV2ObjectsObjectRecordsValuesCurrencyCode
>;

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType = {
  Currency: "currency",
} as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType =
  ClosedEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType
  >;

export type PutV2ObjectsObjectRecordsValues3 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor: PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor;
  /**
   * A numerical representation of the currency value. A decimal with a max of 4 decimal places.
   */
  currencyValue: number;
  /**
   * The ISO4217 currency code representing the currency that the value is stored in.
   */
  currencyCode?: PutV2ObjectsObjectRecordsValuesCurrencyCode | null | undefined;
  /**
   * The attribute type of the value.
   */
  attributeType: PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesRecordsType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesRecordsType = ClosedEnum<
  typeof PutV2ObjectsObjectRecordsValuesRecordsType
>;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?: PutV2ObjectsObjectRecordsValuesRecordsType | null | undefined;
};

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesRecordsAttributeType = {
  Checkbox: "checkbox",
} as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesRecordsAttributeType = ClosedEnum<
  typeof PutV2ObjectsObjectRecordsValuesRecordsAttributeType
>;

export type PutV2ObjectsObjectRecordsValues2 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor: PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor;
  /**
   * A boolean representing whether the checkbox is checked or not. The string values 'true' and 'false' are also accepted.
   */
  value: boolean;
  /**
   * The attribute type of the value.
   */
  attributeType: PutV2ObjectsObjectRecordsValuesRecordsAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesType = ClosedEnum<
  typeof PutV2ObjectsObjectRecordsValuesType
>;

/**
 * The actor that created this value.
 */
export type PutV2ObjectsObjectRecordsValuesCreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?: PutV2ObjectsObjectRecordsValuesType | null | undefined;
};

/**
 * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
 */
export const PutV2ObjectsObjectRecordsValuesReferencedActorType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
 */
export type PutV2ObjectsObjectRecordsValuesReferencedActorType = ClosedEnum<
  typeof PutV2ObjectsObjectRecordsValuesReferencedActorType
>;

/**
 * The attribute type of the value.
 */
export const PutV2ObjectsObjectRecordsValuesAttributeType = {
  ActorReference: "actor-reference",
} as const;
/**
 * The attribute type of the value.
 */
export type PutV2ObjectsObjectRecordsValuesAttributeType = ClosedEnum<
  typeof PutV2ObjectsObjectRecordsValuesAttributeType
>;

export type PutV2ObjectsObjectRecordsValues1 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor: PutV2ObjectsObjectRecordsValuesCreatedByActor;
  /**
   * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
   */
  referencedActorType: PutV2ObjectsObjectRecordsValuesReferencedActorType;
  /**
   * The ID of the referenced actor.
   */
  referencedActorId: string | null;
  /**
   * The attribute type of the value.
   */
  attributeType: PutV2ObjectsObjectRecordsValuesAttributeType;
};

export type PutV2ObjectsObjectRecordsRecordsValues =
  | PutV2ObjectsObjectRecordsValues2
  | PutV2ObjectsObjectRecordsValues4
  | PutV2ObjectsObjectRecordsValues10
  | PutV2ObjectsObjectRecordsValues13
  | PutV2ObjectsObjectRecordsValues14
  | PutV2ObjectsObjectRecordsValues15
  | PutV2ObjectsObjectRecordsValues16
  | PutV2ObjectsObjectRecordsValues17
  | PutV2ObjectsObjectRecordsValues1
  | PutV2ObjectsObjectRecordsValues3
  | PutV2ObjectsObjectRecordsValues5
  | PutV2ObjectsObjectRecordsValues7
  | PutV2ObjectsObjectRecordsValues8
  | PutV2ObjectsObjectRecordsValues11
  | PutV2ObjectsObjectRecordsValues12
  | PutV2ObjectsObjectRecordsValues6
  | PutV2ObjectsObjectRecordsValues9;

export type PutV2ObjectsObjectRecordsRecordsData = {
  id: PutV2ObjectsObjectRecordsId;
  /**
   * When this record was created.
   */
  createdAt: string;
  /**
   * A record type with an attribute `api_slug` as the key, and an array of value objects as the values.
   */
  values: {
    [k: string]: Array<
      | PutV2ObjectsObjectRecordsValues2
      | PutV2ObjectsObjectRecordsValues4
      | PutV2ObjectsObjectRecordsValues10
      | PutV2ObjectsObjectRecordsValues13
      | PutV2ObjectsObjectRecordsValues14
      | PutV2ObjectsObjectRecordsValues15
      | PutV2ObjectsObjectRecordsValues16
      | PutV2ObjectsObjectRecordsValues17
      | PutV2ObjectsObjectRecordsValues1
      | PutV2ObjectsObjectRecordsValues3
      | PutV2ObjectsObjectRecordsValues5
      | PutV2ObjectsObjectRecordsValues7
      | PutV2ObjectsObjectRecordsValues8
      | PutV2ObjectsObjectRecordsValues11
      | PutV2ObjectsObjectRecordsValues12
      | PutV2ObjectsObjectRecordsValues6
      | PutV2ObjectsObjectRecordsValues9
    >;
  };
};

/**
 * Success
 */
export type PutV2ObjectsObjectRecordsResponseBody = {
  data: PutV2ObjectsObjectRecordsRecordsData;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PutV2ObjectsObjectRecordsValues$Outbound = {};

/** @internal */
export const PutV2ObjectsObjectRecordsValues$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsValues$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues$Outbound;
}

export function putV2ObjectsObjectRecordsValuesToJSON(
  putV2ObjectsObjectRecordsValues: PutV2ObjectsObjectRecordsValues,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues,
    ),
  );
}

export function putV2ObjectsObjectRecordsValuesFromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsData$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  values: z.lazy(() => PutV2ObjectsObjectRecordsValues$inboundSchema),
});

/** @internal */
export type PutV2ObjectsObjectRecordsData$Outbound = {
  values: PutV2ObjectsObjectRecordsValues$Outbound;
};

/** @internal */
export const PutV2ObjectsObjectRecordsData$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsData$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsData
> = z.object({
  values: z.lazy(() => PutV2ObjectsObjectRecordsValues$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsData$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsData$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsData$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsData$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsData$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsData$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsData$Outbound;
}

export function putV2ObjectsObjectRecordsDataToJSON(
  putV2ObjectsObjectRecordsData: PutV2ObjectsObjectRecordsData,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsData$outboundSchema.parse(
      putV2ObjectsObjectRecordsData,
    ),
  );
}

export function putV2ObjectsObjectRecordsDataFromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsData' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsRequestBody$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => PutV2ObjectsObjectRecordsData$inboundSchema),
});

/** @internal */
export type PutV2ObjectsObjectRecordsRequestBody$Outbound = {
  data: PutV2ObjectsObjectRecordsData$Outbound;
};

/** @internal */
export const PutV2ObjectsObjectRecordsRequestBody$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsRequestBody$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsRequestBody
> = z.object({
  data: z.lazy(() => PutV2ObjectsObjectRecordsData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsRequestBody$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsRequestBody$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsRequestBody$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsRequestBody$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsRequestBody$Outbound;
}

export function putV2ObjectsObjectRecordsRequestBodyToJSON(
  putV2ObjectsObjectRecordsRequestBody: PutV2ObjectsObjectRecordsRequestBody,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsRequestBody$outboundSchema.parse(
      putV2ObjectsObjectRecordsRequestBody,
    ),
  );
}

export function putV2ObjectsObjectRecordsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsRequestBody' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsRequest$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  object: z.string(),
  matching_attribute: z.string(),
  RequestBody: z.lazy(() => PutV2ObjectsObjectRecordsRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "matching_attribute": "matchingAttribute",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsRequest$Outbound = {
  object: string;
  matching_attribute: string;
  RequestBody: PutV2ObjectsObjectRecordsRequestBody$Outbound;
};

/** @internal */
export const PutV2ObjectsObjectRecordsRequest$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsRequest$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsRequest
> = z.object({
  object: z.string(),
  matchingAttribute: z.string(),
  requestBody: z.lazy(() =>
    PutV2ObjectsObjectRecordsRequestBody$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    matchingAttribute: "matching_attribute",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsRequest$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsRequest$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsRequest$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsRequest$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsRequest$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsRequest$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsRequest$Outbound;
}

export function putV2ObjectsObjectRecordsRequestToJSON(
  putV2ObjectsObjectRecordsRequest: PutV2ObjectsObjectRecordsRequest,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsRequest$outboundSchema.parse(
      putV2ObjectsObjectRecordsRequest,
    ),
  );
}

export function putV2ObjectsObjectRecordsRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsRequest' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsId$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsId,
  z.ZodTypeDef,
  unknown
> = z.object({
  workspace_id: z.string(),
  object_id: z.string(),
  record_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "workspace_id": "workspaceId",
    "object_id": "objectId",
    "record_id": "recordId",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsId$Outbound = {
  workspace_id: string;
  object_id: string;
  record_id: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsId$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsId$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsId
> = z.object({
  workspaceId: z.string(),
  objectId: z.string(),
  recordId: z.string(),
}).transform((v) => {
  return remap$(v, {
    workspaceId: "workspace_id",
    objectId: "object_id",
    recordId: "record_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsId$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsId$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsId$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsId$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsId$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsId$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsId$Outbound;
}

export function putV2ObjectsObjectRecordsIdToJSON(
  putV2ObjectsObjectRecordsId: PutV2ObjectsObjectRecordsId,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsId$outboundSchema.parse(
      putV2ObjectsObjectRecordsId,
    ),
  );
}

export function putV2ObjectsObjectRecordsIdFromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsId, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsId$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsId' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues17$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues17,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema
  ),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema,
  value: z.string().datetime({ offset: true }).transform(v => new Date(v)),
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues17$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound;
  attribute_type: string;
  value: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues17$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues17$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues17
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema
  ),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema,
  value: z.date().transform(v => v.toISOString()),
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues17$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues17$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues17$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues17$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValues17$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues17$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues17$Outbound;
}

export function putV2ObjectsObjectRecordsValues17ToJSON(
  putV2ObjectsObjectRecordsValues17: PutV2ObjectsObjectRecordsValues17,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues17$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues17,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues17FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues17, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues17$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues17' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues16$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues16,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema
  ),
  value: z.string(),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues16$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound;
  value: string;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues16$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues16$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues16
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema
  ),
  value: z.string(),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues16$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues16$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues16$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues16$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValues16$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues16$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues16$Outbound;
}

export function putV2ObjectsObjectRecordsValues16ToJSON(
  putV2ObjectsObjectRecordsValues16: PutV2ObjectsObjectRecordsValues16,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues16$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues16,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues16FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues16, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues16$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues16' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues15$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues15,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema
  ),
  option: components.SelectOption$inboundSchema,
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues15$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound;
  option: components.SelectOption$Outbound;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues15$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues15$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues15
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema
  ),
  option: components.SelectOption$outboundSchema,
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues15$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues15$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues15$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues15$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValues15$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues15$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues15$Outbound;
}

export function putV2ObjectsObjectRecordsValues15ToJSON(
  putV2ObjectsObjectRecordsValues15: PutV2ObjectsObjectRecordsValues15,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues15$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues15,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues15FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues15, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues15$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues15' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues14$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues14,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema
  ),
  value: z.number(),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues14$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound;
  value: number;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues14$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues14$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues14
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema
  ),
  value: z.number(),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues14$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues14$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues14$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues14$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValues14$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues14$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues14$Outbound;
}

export function putV2ObjectsObjectRecordsValues14ToJSON(
  putV2ObjectsObjectRecordsValues14: PutV2ObjectsObjectRecordsValues14,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues14$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues14,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues14FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues14, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues14$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues14' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues13$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues13,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema
  ),
  status: components.Status$inboundSchema,
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues13$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound;
  status: components.Status$Outbound;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues13$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues13$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues13
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema
  ),
  status: components.Status$outboundSchema,
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues13$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues13$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues13$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues13$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValues13$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues13$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues13$Outbound;
}

export function putV2ObjectsObjectRecordsValues13ToJSON(
  putV2ObjectsObjectRecordsValues13: PutV2ObjectsObjectRecordsValues13,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues13$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues13,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues13FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues13, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues13$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues13' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsCountryCode$inboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesRecordsCountryCode> = z
    .nativeEnum(PutV2ObjectsObjectRecordsValuesRecordsCountryCode);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsCountryCode$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesRecordsCountryCode> =
    PutV2ObjectsObjectRecordsValuesRecordsCountryCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsCountryCode$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsCountryCode$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsCountryCode$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsCountryCode$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsCountryCode$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues12$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues12,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema
  ),
  original_phone_number: z.string(),
  country_code: PutV2ObjectsObjectRecordsValuesRecordsCountryCode$inboundSchema,
  phone_number: z.string(),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "original_phone_number": "originalPhoneNumber",
    "country_code": "countryCode",
    "phone_number": "phoneNumber",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues12$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound;
  original_phone_number: string;
  country_code: string;
  phone_number: string;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues12$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues12$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues12
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema
  ),
  originalPhoneNumber: z.string(),
  countryCode: PutV2ObjectsObjectRecordsValuesRecordsCountryCode$outboundSchema,
  phoneNumber: z.string(),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    originalPhoneNumber: "original_phone_number",
    countryCode: "country_code",
    phoneNumber: "phone_number",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues12$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues12$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues12$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues12$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValues12$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues12$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues12$Outbound;
}

export function putV2ObjectsObjectRecordsValues12ToJSON(
  putV2ObjectsObjectRecordsValues12: PutV2ObjectsObjectRecordsValues12,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues12$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues12,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues12FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues12, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues12$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues12' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues11$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues11,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema
  ),
  first_name: z.string(),
  last_name: z.string(),
  full_name: z.string(),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "first_name": "firstName",
    "last_name": "lastName",
    "full_name": "fullName",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues11$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound;
  first_name: string;
  last_name: string;
  full_name: string;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues11$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues11$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues11
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema
  ),
  firstName: z.string(),
  lastName: z.string(),
  fullName: z.string(),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    firstName: "first_name",
    lastName: "last_name",
    fullName: "full_name",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues11$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues11$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues11$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues11$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValues11$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues11$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues11$Outbound;
}

export function putV2ObjectsObjectRecordsValues11ToJSON(
  putV2ObjectsObjectRecordsValues11: PutV2ObjectsObjectRecordsValues11,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues11$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues11,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues11FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues11, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues11$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues11' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues10$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues10,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema
  ),
  value: z.number(),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues10$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound;
  value: number;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues10$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues10$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues10
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema
  ),
  value: z.number(),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues10$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues10$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues10$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues10$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValues10$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues10$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues10$Outbound;
}

export function putV2ObjectsObjectRecordsValues10ToJSON(
  putV2ObjectsObjectRecordsValues10: PutV2ObjectsObjectRecordsValues10,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues10$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues10,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues10FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues10, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues10$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues10' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesCountryCode$inboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesCountryCode> = z
    .nativeEnum(PutV2ObjectsObjectRecordsValuesCountryCode);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesCountryCode$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesCountryCode> =
    PutV2ObjectsObjectRecordsValuesCountryCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesCountryCode$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesCountryCode$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesCountryCode$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesCountryCode$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesCountryCode$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues9$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues9,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema
  ),
  line_1: z.nullable(z.string()),
  line_2: z.nullable(z.string()),
  line_3: z.nullable(z.string()),
  line_4: z.nullable(z.string()),
  locality: z.nullable(z.string()),
  region: z.nullable(z.string()),
  postcode: z.nullable(z.string()),
  country_code: z.nullable(
    PutV2ObjectsObjectRecordsValuesCountryCode$inboundSchema,
  ),
  latitude: z.nullable(z.string()),
  longitude: z.nullable(z.string()),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "line_1": "line1",
    "line_2": "line2",
    "line_3": "line3",
    "line_4": "line4",
    "country_code": "countryCode",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues9$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound;
  line_1: string | null;
  line_2: string | null;
  line_3: string | null;
  line_4: string | null;
  locality: string | null;
  region: string | null;
  postcode: string | null;
  country_code: string | null;
  latitude: string | null;
  longitude: string | null;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues9$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues9$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues9
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema
  ),
  line1: z.nullable(z.string()),
  line2: z.nullable(z.string()),
  line3: z.nullable(z.string()),
  line4: z.nullable(z.string()),
  locality: z.nullable(z.string()),
  region: z.nullable(z.string()),
  postcode: z.nullable(z.string()),
  countryCode: z.nullable(
    PutV2ObjectsObjectRecordsValuesCountryCode$outboundSchema,
  ),
  latitude: z.nullable(z.string()),
  longitude: z.nullable(z.string()),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    line1: "line_1",
    line2: "line_2",
    line3: "line_3",
    line4: "line_4",
    countryCode: "country_code",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues9$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues9$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues9$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues9$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsValues9$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues9$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues9$Outbound;
}

export function putV2ObjectsObjectRecordsValues9ToJSON(
  putV2ObjectsObjectRecordsValues9: PutV2ObjectsObjectRecordsValues9,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues9$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues9,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues9FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues9' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesInteractionType$inboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesInteractionType> = z
    .nativeEnum(PutV2ObjectsObjectRecordsValuesInteractionType);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesInteractionType$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesInteractionType> =
    PutV2ObjectsObjectRecordsValuesInteractionType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesInteractionType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesInteractionType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesInteractionType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesInteractionType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesInteractionType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesOwnerActor$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValuesOwnerActor,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  type: z.nullable(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema,
  ).optional(),
});

/** @internal */
export type PutV2ObjectsObjectRecordsValuesOwnerActor$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValuesOwnerActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesOwnerActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesOwnerActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesOwnerActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesOwnerActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesOwnerActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesOwnerActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesOwnerActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesOwnerActor$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValuesOwnerActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesOwnerActorToJSON(
  putV2ObjectsObjectRecordsValuesOwnerActor:
    PutV2ObjectsObjectRecordsValuesOwnerActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesOwnerActor$outboundSchema.parse(
      putV2ObjectsObjectRecordsValuesOwnerActor,
    ),
  );
}

export function putV2ObjectsObjectRecordsValuesOwnerActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesOwnerActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesOwnerActor$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesOwnerActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues8$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues8,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema
  ),
  interaction_type:
    PutV2ObjectsObjectRecordsValuesInteractionType$inboundSchema,
  interacted_at: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  owner_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesOwnerActor$inboundSchema
  ),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "interaction_type": "interactionType",
    "interacted_at": "interactedAt",
    "owner_actor": "ownerActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues8$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound;
  interaction_type: string;
  interacted_at: string;
  owner_actor: PutV2ObjectsObjectRecordsValuesOwnerActor$Outbound;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues8$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues8$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues8
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema
  ),
  interactionType:
    PutV2ObjectsObjectRecordsValuesInteractionType$outboundSchema,
  interactedAt: z.date().transform(v => v.toISOString()),
  ownerActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesOwnerActor$outboundSchema
  ),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    interactionType: "interaction_type",
    interactedAt: "interacted_at",
    ownerActor: "owner_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues8$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues8$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues8$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues8$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsValues8$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues8$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues8$Outbound;
}

export function putV2ObjectsObjectRecordsValues8ToJSON(
  putV2ObjectsObjectRecordsValues8: PutV2ObjectsObjectRecordsValues8,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues8$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues8,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues8FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues8' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues7$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues7,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema
  ),
  target_object: z.string(),
  target_record_id: z.string(),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "target_object": "targetObject",
    "target_record_id": "targetRecordId",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues7$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound;
  target_object: string;
  target_record_id: string;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues7$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues7$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues7
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema
  ),
  targetObject: z.string(),
  targetRecordId: z.string(),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    targetObject: "target_object",
    targetRecordId: "target_record_id",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues7$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues7$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues7$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues7$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsValues7$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues7$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues7$Outbound;
}

export function putV2ObjectsObjectRecordsValues7ToJSON(
  putV2ObjectsObjectRecordsValues7: PutV2ObjectsObjectRecordsValues7,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues7$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues7,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues7FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues7' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues6$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues6,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema
  ),
  original_email_address: z.string(),
  email_address: z.string(),
  email_domain: z.string(),
  email_root_domain: z.string(),
  email_local_specifier: z.string(),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "original_email_address": "originalEmailAddress",
    "email_address": "emailAddress",
    "email_domain": "emailDomain",
    "email_root_domain": "emailRootDomain",
    "email_local_specifier": "emailLocalSpecifier",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues6$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound;
  original_email_address: string;
  email_address: string;
  email_domain: string;
  email_root_domain: string;
  email_local_specifier: string;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues6$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues6$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues6
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema
  ),
  originalEmailAddress: z.string(),
  emailAddress: z.string(),
  emailDomain: z.string(),
  emailRootDomain: z.string(),
  emailLocalSpecifier: z.string(),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    originalEmailAddress: "original_email_address",
    emailAddress: "email_address",
    emailDomain: "email_domain",
    emailRootDomain: "email_root_domain",
    emailLocalSpecifier: "email_local_specifier",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues6$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues6$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues6$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues6$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsValues6$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues6$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues6$Outbound;
}

export function putV2ObjectsObjectRecordsValues6ToJSON(
  putV2ObjectsObjectRecordsValues6: PutV2ObjectsObjectRecordsValues6,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues6$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues6,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues6FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues6' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema
      .parse(
        putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor,
      ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues5$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues5,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema
  ),
  domain: z.string(),
  root_domain: z.string(),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "root_domain": "rootDomain",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues5$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound;
  domain: string;
  root_domain: string;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues5$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues5$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues5
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema
  ),
  domain: z.string(),
  rootDomain: z.string(),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    rootDomain: "root_domain",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues5$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues5$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues5$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues5$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsValues5$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues5$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues5$Outbound;
}

export function putV2ObjectsObjectRecordsValues5ToJSON(
  putV2ObjectsObjectRecordsValues5: PutV2ObjectsObjectRecordsValues5,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues5$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues5,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues5FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues5' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200Type
  > = z.nativeEnum(PutV2ObjectsObjectRecordsValuesRecordsResponse200Type);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200Type
  > = PutV2ObjectsObjectRecordsValuesRecordsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200Type$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200Type$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200Type$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponse200Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$outboundSchema
      .parse(putV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType
  > = z.nativeEnum(
    PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType,
  );

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType
  > =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues4$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues4,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$inboundSchema
  ),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$inboundSchema,
  value: z.string(),
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues4$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$Outbound;
  attribute_type: string;
  value: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues4$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues4$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues4
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponse200CreatedByActor$outboundSchema
  ),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponse200AttributeType$outboundSchema,
  value: z.string(),
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues4$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues4$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues4$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues4$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsValues4$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues4$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues4$Outbound;
}

export function putV2ObjectsObjectRecordsValues4ToJSON(
  putV2ObjectsObjectRecordsValues4: PutV2ObjectsObjectRecordsValues4,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues4$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues4,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues4FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues4' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesRecordsResponseType> = z
    .nativeEnum(PutV2ObjectsObjectRecordsValuesRecordsResponseType);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesRecordsResponseType> =
    PutV2ObjectsObjectRecordsValuesRecordsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponseType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponseType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponseType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponseType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PutV2ObjectsObjectRecordsValuesRecordsResponseType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$outboundSchema
      .parse(putV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesCurrencyCode$inboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesCurrencyCode> = z
    .nativeEnum(PutV2ObjectsObjectRecordsValuesCurrencyCode);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesCurrencyCode$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesCurrencyCode> =
    PutV2ObjectsObjectRecordsValuesCurrencyCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesCurrencyCode$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesCurrencyCode$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesCurrencyCode$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesCurrencyCode$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesCurrencyCode$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType
  > = z.nativeEnum(PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType
  > = PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues3$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues3,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$inboundSchema
  ),
  currency_value: z.number(),
  currency_code: z.nullable(
    PutV2ObjectsObjectRecordsValuesCurrencyCode$inboundSchema,
  ).optional(),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "currency_value": "currencyValue",
    "currency_code": "currencyCode",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues3$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$Outbound;
  currency_value: number;
  currency_code?: string | null | undefined;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues3$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues3$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues3
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsResponseCreatedByActor$outboundSchema
  ),
  currencyValue: z.number(),
  currencyCode: z.nullable(
    PutV2ObjectsObjectRecordsValuesCurrencyCode$outboundSchema,
  ).optional(),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsResponseAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    currencyValue: "currency_value",
    currencyCode: "currency_code",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues3$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues3$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues3$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues3$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsValues3$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues3$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues3$Outbound;
}

export function putV2ObjectsObjectRecordsValues3ToJSON(
  putV2ObjectsObjectRecordsValues3: PutV2ObjectsObjectRecordsValues3,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues3$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues3,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues3FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues3' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsType$inboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesRecordsType> = z
    .nativeEnum(PutV2ObjectsObjectRecordsValuesRecordsType);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsType$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesRecordsType> =
    PutV2ObjectsObjectRecordsValuesRecordsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(PutV2ObjectsObjectRecordsValuesRecordsType$inboundSchema)
      .optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(PutV2ObjectsObjectRecordsValuesRecordsType$outboundSchema)
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$Outbound` instead. */
  export type Outbound =
    PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesRecordsCreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesRecordsCreatedByActor:
    PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$outboundSchema.parse(
      putV2ObjectsObjectRecordsValuesRecordsCreatedByActor,
    ),
  );
}

export function putV2ObjectsObjectRecordsValuesRecordsCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsAttributeType$inboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesRecordsAttributeType> =
    z.nativeEnum(PutV2ObjectsObjectRecordsValuesRecordsAttributeType);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesRecordsAttributeType$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesRecordsAttributeType> =
    PutV2ObjectsObjectRecordsValuesRecordsAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesRecordsAttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsAttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesRecordsAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesRecordsAttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues2$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues2,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$inboundSchema
  ),
  value: z.boolean(),
  attribute_type:
    PutV2ObjectsObjectRecordsValuesRecordsAttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues2$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$Outbound;
  value: boolean;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues2$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues2$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues2
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesRecordsCreatedByActor$outboundSchema
  ),
  value: z.boolean(),
  attributeType:
    PutV2ObjectsObjectRecordsValuesRecordsAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues2$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues2$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues2$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues2$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsValues2$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues2$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues2$Outbound;
}

export function putV2ObjectsObjectRecordsValues2ToJSON(
  putV2ObjectsObjectRecordsValues2: PutV2ObjectsObjectRecordsValues2,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues2$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues2,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues2FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues2' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesType$inboundSchema: z.ZodNativeEnum<
  typeof PutV2ObjectsObjectRecordsValuesType
> = z.nativeEnum(PutV2ObjectsObjectRecordsValuesType);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesType$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesType> =
    PutV2ObjectsObjectRecordsValuesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesCreatedByActor$inboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(PutV2ObjectsObjectRecordsValuesType$inboundSchema)
      .optional(),
  });

/** @internal */
export type PutV2ObjectsObjectRecordsValuesCreatedByActor$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValuesCreatedByActor$outboundSchema:
  z.ZodType<
    PutV2ObjectsObjectRecordsValuesCreatedByActor$Outbound,
    z.ZodTypeDef,
    PutV2ObjectsObjectRecordsValuesCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(PutV2ObjectsObjectRecordsValuesType$outboundSchema)
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesCreatedByActor$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesCreatedByActor$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesCreatedByActor$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesCreatedByActor$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValuesCreatedByActor$Outbound;
}

export function putV2ObjectsObjectRecordsValuesCreatedByActorToJSON(
  putV2ObjectsObjectRecordsValuesCreatedByActor:
    PutV2ObjectsObjectRecordsValuesCreatedByActor,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValuesCreatedByActor$outboundSchema.parse(
      putV2ObjectsObjectRecordsValuesCreatedByActor,
    ),
  );
}

export function putV2ObjectsObjectRecordsValuesCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV2ObjectsObjectRecordsValuesCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsValuesCreatedByActor$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutV2ObjectsObjectRecordsValuesCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesReferencedActorType$inboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesReferencedActorType> = z
    .nativeEnum(PutV2ObjectsObjectRecordsValuesReferencedActorType);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesReferencedActorType$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesReferencedActorType> =
    PutV2ObjectsObjectRecordsValuesReferencedActorType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesReferencedActorType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesReferencedActorType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesReferencedActorType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesReferencedActorType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesReferencedActorType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValuesAttributeType$inboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesAttributeType> = z
    .nativeEnum(PutV2ObjectsObjectRecordsValuesAttributeType);

/** @internal */
export const PutV2ObjectsObjectRecordsValuesAttributeType$outboundSchema:
  z.ZodNativeEnum<typeof PutV2ObjectsObjectRecordsValuesAttributeType> =
    PutV2ObjectsObjectRecordsValuesAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValuesAttributeType$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsValuesAttributeType$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValuesAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsValuesAttributeType$outboundSchema;
}

/** @internal */
export const PutV2ObjectsObjectRecordsValues1$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues1,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesCreatedByActor$inboundSchema
  ),
  referenced_actor_type:
    PutV2ObjectsObjectRecordsValuesReferencedActorType$inboundSchema,
  referenced_actor_id: z.nullable(z.string()),
  attribute_type: PutV2ObjectsObjectRecordsValuesAttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "referenced_actor_type": "referencedActorType",
    "referenced_actor_id": "referencedActorId",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsValues1$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor: PutV2ObjectsObjectRecordsValuesCreatedByActor$Outbound;
  referenced_actor_type: string;
  referenced_actor_id: string | null;
  attribute_type: string;
};

/** @internal */
export const PutV2ObjectsObjectRecordsValues1$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsValues1$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsValues1
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    PutV2ObjectsObjectRecordsValuesCreatedByActor$outboundSchema
  ),
  referencedActorType:
    PutV2ObjectsObjectRecordsValuesReferencedActorType$outboundSchema,
  referencedActorId: z.nullable(z.string()),
  attributeType: PutV2ObjectsObjectRecordsValuesAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    referencedActorType: "referenced_actor_type",
    referencedActorId: "referenced_actor_id",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsValues1$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsValues1$inboundSchema` instead. */
  export const inboundSchema = PutV2ObjectsObjectRecordsValues1$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues1$outboundSchema` instead. */
  export const outboundSchema = PutV2ObjectsObjectRecordsValues1$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsValues1$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsValues1$Outbound;
}

export function putV2ObjectsObjectRecordsValues1ToJSON(
  putV2ObjectsObjectRecordsValues1: PutV2ObjectsObjectRecordsValues1,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsValues1$outboundSchema.parse(
      putV2ObjectsObjectRecordsValues1,
    ),
  );
}

export function putV2ObjectsObjectRecordsValues1FromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsValues1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutV2ObjectsObjectRecordsValues1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsValues1' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsRecordsValues$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsRecordsValues,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PutV2ObjectsObjectRecordsValues2$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues4$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues10$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues13$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues14$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues15$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues16$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues17$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues1$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues3$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues5$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues7$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues8$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues11$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues12$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues6$inboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues9$inboundSchema),
]);

/** @internal */
export type PutV2ObjectsObjectRecordsRecordsValues$Outbound =
  | PutV2ObjectsObjectRecordsValues2$Outbound
  | PutV2ObjectsObjectRecordsValues4$Outbound
  | PutV2ObjectsObjectRecordsValues10$Outbound
  | PutV2ObjectsObjectRecordsValues13$Outbound
  | PutV2ObjectsObjectRecordsValues14$Outbound
  | PutV2ObjectsObjectRecordsValues15$Outbound
  | PutV2ObjectsObjectRecordsValues16$Outbound
  | PutV2ObjectsObjectRecordsValues17$Outbound
  | PutV2ObjectsObjectRecordsValues1$Outbound
  | PutV2ObjectsObjectRecordsValues3$Outbound
  | PutV2ObjectsObjectRecordsValues5$Outbound
  | PutV2ObjectsObjectRecordsValues7$Outbound
  | PutV2ObjectsObjectRecordsValues8$Outbound
  | PutV2ObjectsObjectRecordsValues11$Outbound
  | PutV2ObjectsObjectRecordsValues12$Outbound
  | PutV2ObjectsObjectRecordsValues6$Outbound
  | PutV2ObjectsObjectRecordsValues9$Outbound;

/** @internal */
export const PutV2ObjectsObjectRecordsRecordsValues$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsRecordsValues$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsRecordsValues
> = z.union([
  z.lazy(() => PutV2ObjectsObjectRecordsValues2$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues4$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues10$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues13$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues14$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues15$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues16$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues17$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues1$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues3$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues5$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues7$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues8$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues11$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues12$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues6$outboundSchema),
  z.lazy(() => PutV2ObjectsObjectRecordsValues9$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsRecordsValues$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsRecordsValues$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsRecordsValues$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsRecordsValues$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsRecordsValues$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsRecordsValues$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsRecordsValues$Outbound;
}

export function putV2ObjectsObjectRecordsRecordsValuesToJSON(
  putV2ObjectsObjectRecordsRecordsValues:
    PutV2ObjectsObjectRecordsRecordsValues,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsRecordsValues$outboundSchema.parse(
      putV2ObjectsObjectRecordsRecordsValues,
    ),
  );
}

export function putV2ObjectsObjectRecordsRecordsValuesFromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsRecordsValues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsRecordsValues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsRecordsValues' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsRecordsData$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsRecordsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.lazy(() => PutV2ObjectsObjectRecordsId$inboundSchema),
  created_at: z.string(),
  values: z.record(
    z.array(z.union([
      z.lazy(() => PutV2ObjectsObjectRecordsValues2$inboundSchema),
      z.lazy(() =>
        PutV2ObjectsObjectRecordsValues4$inboundSchema
      ),
      z.lazy(() => PutV2ObjectsObjectRecordsValues10$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues13$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues14$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues15$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues16$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues17$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues1$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues3$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues5$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues7$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues8$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues11$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues12$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues6$inboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues9$inboundSchema),
    ])),
  ),
}).transform((v) => {
  return remap$(v, {
    "created_at": "createdAt",
  });
});

/** @internal */
export type PutV2ObjectsObjectRecordsRecordsData$Outbound = {
  id: PutV2ObjectsObjectRecordsId$Outbound;
  created_at: string;
  values: {
    [k: string]: Array<
      | PutV2ObjectsObjectRecordsValues2$Outbound
      | PutV2ObjectsObjectRecordsValues4$Outbound
      | PutV2ObjectsObjectRecordsValues10$Outbound
      | PutV2ObjectsObjectRecordsValues13$Outbound
      | PutV2ObjectsObjectRecordsValues14$Outbound
      | PutV2ObjectsObjectRecordsValues15$Outbound
      | PutV2ObjectsObjectRecordsValues16$Outbound
      | PutV2ObjectsObjectRecordsValues17$Outbound
      | PutV2ObjectsObjectRecordsValues1$Outbound
      | PutV2ObjectsObjectRecordsValues3$Outbound
      | PutV2ObjectsObjectRecordsValues5$Outbound
      | PutV2ObjectsObjectRecordsValues7$Outbound
      | PutV2ObjectsObjectRecordsValues8$Outbound
      | PutV2ObjectsObjectRecordsValues11$Outbound
      | PutV2ObjectsObjectRecordsValues12$Outbound
      | PutV2ObjectsObjectRecordsValues6$Outbound
      | PutV2ObjectsObjectRecordsValues9$Outbound
    >;
  };
};

/** @internal */
export const PutV2ObjectsObjectRecordsRecordsData$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsRecordsData$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsRecordsData
> = z.object({
  id: z.lazy(() => PutV2ObjectsObjectRecordsId$outboundSchema),
  createdAt: z.string(),
  values: z.record(
    z.array(z.union([
      z.lazy(() => PutV2ObjectsObjectRecordsValues2$outboundSchema),
      z.lazy(() =>
        PutV2ObjectsObjectRecordsValues4$outboundSchema
      ),
      z.lazy(() => PutV2ObjectsObjectRecordsValues10$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues13$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues14$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues15$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues16$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues17$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues1$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues3$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues5$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues7$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues8$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues11$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues12$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues6$outboundSchema),
      z.lazy(() => PutV2ObjectsObjectRecordsValues9$outboundSchema),
    ])),
  ),
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsRecordsData$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsRecordsData$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsRecordsData$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsRecordsData$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsRecordsData$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsRecordsData$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsRecordsData$Outbound;
}

export function putV2ObjectsObjectRecordsRecordsDataToJSON(
  putV2ObjectsObjectRecordsRecordsData: PutV2ObjectsObjectRecordsRecordsData,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsRecordsData$outboundSchema.parse(
      putV2ObjectsObjectRecordsRecordsData,
    ),
  );
}

export function putV2ObjectsObjectRecordsRecordsDataFromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsRecordsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsRecordsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsRecordsData' from JSON`,
  );
}

/** @internal */
export const PutV2ObjectsObjectRecordsResponseBody$inboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => PutV2ObjectsObjectRecordsRecordsData$inboundSchema),
});

/** @internal */
export type PutV2ObjectsObjectRecordsResponseBody$Outbound = {
  data: PutV2ObjectsObjectRecordsRecordsData$Outbound;
};

/** @internal */
export const PutV2ObjectsObjectRecordsResponseBody$outboundSchema: z.ZodType<
  PutV2ObjectsObjectRecordsResponseBody$Outbound,
  z.ZodTypeDef,
  PutV2ObjectsObjectRecordsResponseBody
> = z.object({
  data: z.lazy(() => PutV2ObjectsObjectRecordsRecordsData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV2ObjectsObjectRecordsResponseBody$ {
  /** @deprecated use `PutV2ObjectsObjectRecordsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PutV2ObjectsObjectRecordsResponseBody$inboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PutV2ObjectsObjectRecordsResponseBody$outboundSchema;
  /** @deprecated use `PutV2ObjectsObjectRecordsResponseBody$Outbound` instead. */
  export type Outbound = PutV2ObjectsObjectRecordsResponseBody$Outbound;
}

export function putV2ObjectsObjectRecordsResponseBodyToJSON(
  putV2ObjectsObjectRecordsResponseBody: PutV2ObjectsObjectRecordsResponseBody,
): string {
  return JSON.stringify(
    PutV2ObjectsObjectRecordsResponseBody$outboundSchema.parse(
      putV2ObjectsObjectRecordsResponseBody,
    ),
  );
}

export function putV2ObjectsObjectRecordsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<PutV2ObjectsObjectRecordsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutV2ObjectsObjectRecordsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutV2ObjectsObjectRecordsResponseBody' from JSON`,
  );
}
