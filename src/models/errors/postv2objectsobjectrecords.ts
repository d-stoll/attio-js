/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const PostV2ObjectsObjectRecordsRecordsType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PostV2ObjectsObjectRecordsRecordsType = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsRecordsType
>;

export const PostV2ObjectsObjectRecordsRecordsCode = {
  NotFound: "not_found",
} as const;
export type PostV2ObjectsObjectRecordsRecordsCode = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsRecordsCode
>;

/**
 * Not Found
 */
export type PostV2ObjectsObjectRecordsRecordsResponseBodyData = {
  statusCode: number;
  type: PostV2ObjectsObjectRecordsRecordsType;
  code: PostV2ObjectsObjectRecordsRecordsCode;
  message: string;
};

/**
 * Not Found
 */
export class PostV2ObjectsObjectRecordsRecordsResponseBody extends Error {
  statusCode: number;
  type: PostV2ObjectsObjectRecordsRecordsType;
  code: PostV2ObjectsObjectRecordsRecordsCode;

  /** The original data that was passed to this error instance. */
  data$: PostV2ObjectsObjectRecordsRecordsResponseBodyData;

  constructor(err: PostV2ObjectsObjectRecordsRecordsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2ObjectsObjectRecordsRecordsResponseBody";
  }
}

export const PostV2ObjectsObjectRecordsType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type PostV2ObjectsObjectRecordsType = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsType
>;

export const PostV2ObjectsObjectRecordsCode = {
  ValueNotFound: "value_not_found",
} as const;
export type PostV2ObjectsObjectRecordsCode = ClosedEnum<
  typeof PostV2ObjectsObjectRecordsCode
>;

/**
 * Bad Request
 */
export type PostV2ObjectsObjectRecordsResponseBodyData = {
  statusCode: number;
  type: PostV2ObjectsObjectRecordsType;
  code: PostV2ObjectsObjectRecordsCode;
  message: string;
};

/**
 * Bad Request
 */
export class PostV2ObjectsObjectRecordsResponseBody extends Error {
  statusCode: number;
  type: PostV2ObjectsObjectRecordsType;
  code: PostV2ObjectsObjectRecordsCode;

  /** The original data that was passed to this error instance. */
  data$: PostV2ObjectsObjectRecordsResponseBodyData;

  constructor(err: PostV2ObjectsObjectRecordsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "PostV2ObjectsObjectRecordsResponseBody";
  }
}

/** @internal */
export const PostV2ObjectsObjectRecordsRecordsType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsRecordsType> = z.nativeEnum(
    PostV2ObjectsObjectRecordsRecordsType,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsRecordsType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsRecordsType> =
    PostV2ObjectsObjectRecordsRecordsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsRecordsType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsRecordsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsRecordsType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsRecordsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsRecordsType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsRecordsCode$inboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsRecordsCode> = z.nativeEnum(
    PostV2ObjectsObjectRecordsRecordsCode,
  );

/** @internal */
export const PostV2ObjectsObjectRecordsRecordsCode$outboundSchema:
  z.ZodNativeEnum<typeof PostV2ObjectsObjectRecordsRecordsCode> =
    PostV2ObjectsObjectRecordsRecordsCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsRecordsCode$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsRecordsCode$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsRecordsCode$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsRecordsCode$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsRecordsCode$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsRecordsResponseBody$inboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsRecordsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type: PostV2ObjectsObjectRecordsRecordsType$inboundSchema,
    code: PostV2ObjectsObjectRecordsRecordsCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new PostV2ObjectsObjectRecordsRecordsResponseBody(remapped);
    });

/** @internal */
export type PostV2ObjectsObjectRecordsRecordsResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2ObjectsObjectRecordsRecordsResponseBody$outboundSchema:
  z.ZodType<
    PostV2ObjectsObjectRecordsRecordsResponseBody$Outbound,
    z.ZodTypeDef,
    PostV2ObjectsObjectRecordsRecordsResponseBody
  > = z.instanceof(PostV2ObjectsObjectRecordsRecordsResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type: PostV2ObjectsObjectRecordsRecordsType$outboundSchema,
        code: PostV2ObjectsObjectRecordsRecordsCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsRecordsResponseBody$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsRecordsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsRecordsResponseBody$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsRecordsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsRecordsResponseBody$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsRecordsResponseBody$Outbound` instead. */
  export type Outbound = PostV2ObjectsObjectRecordsRecordsResponseBody$Outbound;
}

/** @internal */
export const PostV2ObjectsObjectRecordsType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ObjectsObjectRecordsType
> = z.nativeEnum(PostV2ObjectsObjectRecordsType);

/** @internal */
export const PostV2ObjectsObjectRecordsType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ObjectsObjectRecordsType
> = PostV2ObjectsObjectRecordsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsType$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsType$inboundSchema` instead. */
  export const inboundSchema = PostV2ObjectsObjectRecordsType$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsType$outboundSchema` instead. */
  export const outboundSchema = PostV2ObjectsObjectRecordsType$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsCode$inboundSchema: z.ZodNativeEnum<
  typeof PostV2ObjectsObjectRecordsCode
> = z.nativeEnum(PostV2ObjectsObjectRecordsCode);

/** @internal */
export const PostV2ObjectsObjectRecordsCode$outboundSchema: z.ZodNativeEnum<
  typeof PostV2ObjectsObjectRecordsCode
> = PostV2ObjectsObjectRecordsCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsCode$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsCode$inboundSchema` instead. */
  export const inboundSchema = PostV2ObjectsObjectRecordsCode$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsCode$outboundSchema` instead. */
  export const outboundSchema = PostV2ObjectsObjectRecordsCode$outboundSchema;
}

/** @internal */
export const PostV2ObjectsObjectRecordsResponseBody$inboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status_code: z.number(),
  type: PostV2ObjectsObjectRecordsType$inboundSchema,
  code: PostV2ObjectsObjectRecordsCode$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "status_code": "statusCode",
    });

    return new PostV2ObjectsObjectRecordsResponseBody(remapped);
  });

/** @internal */
export type PostV2ObjectsObjectRecordsResponseBody$Outbound = {
  status_code: number;
  type: string;
  code: string;
  message: string;
};

/** @internal */
export const PostV2ObjectsObjectRecordsResponseBody$outboundSchema: z.ZodType<
  PostV2ObjectsObjectRecordsResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2ObjectsObjectRecordsResponseBody
> = z.instanceof(PostV2ObjectsObjectRecordsResponseBody)
  .transform(v => v.data$)
  .pipe(
    z.object({
      statusCode: z.number(),
      type: PostV2ObjectsObjectRecordsType$outboundSchema,
      code: PostV2ObjectsObjectRecordsCode$outboundSchema,
      message: z.string(),
    }).transform((v) => {
      return remap$(v, {
        statusCode: "status_code",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ObjectsObjectRecordsResponseBody$ {
  /** @deprecated use `PostV2ObjectsObjectRecordsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ObjectsObjectRecordsResponseBody$inboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ObjectsObjectRecordsResponseBody$outboundSchema;
  /** @deprecated use `PostV2ObjectsObjectRecordsResponseBody$Outbound` instead. */
  export type Outbound = PostV2ObjectsObjectRecordsResponseBody$Outbound;
}
