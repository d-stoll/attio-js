/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { RFCDate } from "../../types/rfcdate.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PatchV2ObjectsObjectRecordsRecordIdData = {
  /**
   * An object with an attribute `api_slug` or `attribute_id` as the key, and a single value (for single-select attributes), or an array of values (for single or multi-select attributes) as the values. For complete documentation on values for all attribute types, please see our [attribute type docs](/docs/attribute-types).
   */
  values: { [k: string]: Array<any> };
};

export type PatchV2ObjectsObjectRecordsRecordIdRequestBody = {
  data: PatchV2ObjectsObjectRecordsRecordIdData;
};

export type PatchV2ObjectsObjectRecordsRecordIdRequest = {
  object: string;
  recordId: string;
  requestBody: PatchV2ObjectsObjectRecordsRecordIdRequestBody;
};

export type PatchV2ObjectsObjectRecordsRecordIdId = {
  /**
   * A UUID identifying the workspace this record belongs to.
   */
  workspaceId: string;
  /**
   * A UUID identifying the object this record belongs to.
   */
  objectId: string;
  /**
   * A UUID identifying this record.
   */
  recordId: string;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType =
  {
    Timestamp: "timestamp",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues17 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType;
  /**
   * A timestamp value represents a single, universal moment in time using an ISO 8601 formatted string. This means that a timestamp consists of a date, a time (with nanosecond precision), and a time zone. Attio will coerce timestamps which do not provide full nanosecond precision and UTC is assumed if no time zone is provided. For example, "2023", "2023-01", "2023-01-02", "2023-01-02T13:00", "2023-01-02T13:00:00", and "2023-01-02T13:00:00.000000000" will all be coerced to "2023-01-02T13:00:00.000000000Z". Timestamps are always returned in UTC. For example, writing a timestamp value using the string "2023-01-02T13:00:00.000000000+02:00" will result in the value "2023-01-02T11:00:00.000000000Z" being returned. The maximum date is "9999-12-31T23:59:59.999999999Z".
   */
  value: RFCDate;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType =
  {
    Text: "text",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues16 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor;
  /**
   * A raw text field. Values are limited to 10MB.
   */
  value: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType =
  {
    Select: "select",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues15 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor;
  option: components.SelectOption;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType =
  {
    Rating: "rating",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues14 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor;
  /**
   * A number between 0 and 5 (inclusive) to represent a star rating.
   */
  value: number;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType =
  {
    Status: "status",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues13 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor;
  status: components.Status;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
      | null
      | undefined;
  };

/**
 * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode = {
  Af: "AF",
  Ax: "AX",
  Al: "AL",
  Dz: "DZ",
  As: "AS",
  Ad: "AD",
  Ao: "AO",
  Ai: "AI",
  Aq: "AQ",
  Ag: "AG",
  Ar: "AR",
  Am: "AM",
  Aw: "AW",
  Au: "AU",
  At: "AT",
  Az: "AZ",
  Bs: "BS",
  Bh: "BH",
  Bd: "BD",
  Bb: "BB",
  By: "BY",
  Be: "BE",
  Bz: "BZ",
  Bj: "BJ",
  Bm: "BM",
  Bt: "BT",
  Bo: "BO",
  Ba: "BA",
  Bw: "BW",
  Bv: "BV",
  Br: "BR",
  Io: "IO",
  Bn: "BN",
  Bg: "BG",
  Bf: "BF",
  Bi: "BI",
  Kh: "KH",
  Cm: "CM",
  Ca: "CA",
  Cv: "CV",
  Ky: "KY",
  Cf: "CF",
  Td: "TD",
  Cl: "CL",
  Cn: "CN",
  Cx: "CX",
  Cc: "CC",
  Co: "CO",
  Km: "KM",
  Cg: "CG",
  Cd: "CD",
  Ck: "CK",
  Cr: "CR",
  Ci: "CI",
  Hr: "HR",
  Cu: "CU",
  Cw: "CW",
  Cy: "CY",
  Cz: "CZ",
  Dk: "DK",
  Dj: "DJ",
  Dm: "DM",
  Do: "DO",
  Ec: "EC",
  Eg: "EG",
  Sv: "SV",
  Gq: "GQ",
  Er: "ER",
  Ee: "EE",
  Et: "ET",
  Fk: "FK",
  Fo: "FO",
  Fj: "FJ",
  Fi: "FI",
  Fr: "FR",
  Gf: "GF",
  Pf: "PF",
  Tf: "TF",
  Ga: "GA",
  Gm: "GM",
  Ge: "GE",
  De: "DE",
  Gh: "GH",
  Gi: "GI",
  Gr: "GR",
  Gl: "GL",
  Gd: "GD",
  Gp: "GP",
  Gu: "GU",
  Gt: "GT",
  Gg: "GG",
  Gn: "GN",
  Gw: "GW",
  Gy: "GY",
  Ht: "HT",
  Hm: "HM",
  Va: "VA",
  Hn: "HN",
  Hk: "HK",
  Hu: "HU",
  Is: "IS",
  In: "IN",
  Id: "ID",
  Ir: "IR",
  Iq: "IQ",
  Ie: "IE",
  Im: "IM",
  Il: "IL",
  It: "IT",
  Jm: "JM",
  Jp: "JP",
  Je: "JE",
  Jo: "JO",
  Kz: "KZ",
  Ke: "KE",
  Ki: "KI",
  Kr: "KR",
  Kw: "KW",
  Kg: "KG",
  La: "LA",
  Lv: "LV",
  Lb: "LB",
  Ls: "LS",
  Lr: "LR",
  Ly: "LY",
  Li: "LI",
  Lt: "LT",
  Lu: "LU",
  Mo: "MO",
  Mk: "MK",
  Mg: "MG",
  Mw: "MW",
  My: "MY",
  Mv: "MV",
  Ml: "ML",
  Mt: "MT",
  Mh: "MH",
  Mq: "MQ",
  Mr: "MR",
  Mu: "MU",
  Yt: "YT",
  Mx: "MX",
  Fm: "FM",
  Md: "MD",
  Mc: "MC",
  Mn: "MN",
  Me: "ME",
  Ms: "MS",
  Ma: "MA",
  Mz: "MZ",
  Mm: "MM",
  Na: "NA",
  Nr: "NR",
  Np: "NP",
  Nl: "NL",
  An: "AN",
  Nc: "NC",
  Nz: "NZ",
  Ni: "NI",
  Ne: "NE",
  Ng: "NG",
  Nu: "NU",
  Nf: "NF",
  Mp: "MP",
  No: "NO",
  Om: "OM",
  Pk: "PK",
  Pw: "PW",
  Ps: "PS",
  Pa: "PA",
  Pg: "PG",
  Py: "PY",
  Pe: "PE",
  Ph: "PH",
  Pn: "PN",
  Pl: "PL",
  Pt: "PT",
  Pr: "PR",
  Qa: "QA",
  Re: "RE",
  Ro: "RO",
  Ru: "RU",
  Rw: "RW",
  Bl: "BL",
  Sh: "SH",
  Kn: "KN",
  Lc: "LC",
  Mf: "MF",
  Pm: "PM",
  Vc: "VC",
  Ws: "WS",
  Sm: "SM",
  St: "ST",
  Sa: "SA",
  Sn: "SN",
  Ss: "SS",
  Rs: "RS",
  Sc: "SC",
  Sl: "SL",
  Sg: "SG",
  Sk: "SK",
  Si: "SI",
  Sb: "SB",
  So: "SO",
  Za: "ZA",
  Gs: "GS",
  Es: "ES",
  Lk: "LK",
  Sd: "SD",
  Sr: "SR",
  Sj: "SJ",
  Sz: "SZ",
  Se: "SE",
  Ch: "CH",
  Sy: "SY",
  Tw: "TW",
  Tj: "TJ",
  Tz: "TZ",
  Th: "TH",
  Tl: "TL",
  Tg: "TG",
  Tk: "TK",
  To: "TO",
  Tt: "TT",
  Tn: "TN",
  Tr: "TR",
  Tm: "TM",
  Tc: "TC",
  Tv: "TV",
  Ug: "UG",
  Ua: "UA",
  Ae: "AE",
  Gb: "GB",
  Us: "US",
  Um: "UM",
  Uy: "UY",
  Uz: "UZ",
  Vu: "VU",
  Ve: "VE",
  Vn: "VN",
  Vg: "VG",
  Vi: "VI",
  Wf: "WF",
  Eh: "EH",
  Ye: "YE",
  Zm: "ZM",
  Zw: "ZW",
} as const;
/**
 * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode
  >;

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType =
  {
    PhoneNumber: "phone-number",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues12 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor;
  /**
   * The raw, original phone number, as inputted.
   */
  originalPhoneNumber: string;
  /**
   * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
   */
  countryCode: PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode;
  phoneNumber: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType =
  {
    PersonalName: "personal-name",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues11 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor;
  /**
   * The first name.
   */
  firstName: string;
  /**
   * The last name.
   */
  lastName: string;
  /**
   * The full name.
   */
  fullName: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType =
  {
    Number: "number",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues10 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor;
  /**
   * Numbers are persisted as 64 bit floats.
   */
  value: number;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
      | null
      | undefined;
  };

/**
 * The ISO 3166-1 alpha-2 country code for the country this location is in.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode = {
  Af: "AF",
  Ax: "AX",
  Al: "AL",
  Dz: "DZ",
  As: "AS",
  Ad: "AD",
  Ao: "AO",
  Ai: "AI",
  Aq: "AQ",
  Ag: "AG",
  Ar: "AR",
  Am: "AM",
  Aw: "AW",
  Au: "AU",
  At: "AT",
  Az: "AZ",
  Bs: "BS",
  Bh: "BH",
  Bd: "BD",
  Bb: "BB",
  By: "BY",
  Be: "BE",
  Bz: "BZ",
  Bj: "BJ",
  Bm: "BM",
  Bt: "BT",
  Bo: "BO",
  Ba: "BA",
  Bw: "BW",
  Bv: "BV",
  Br: "BR",
  Io: "IO",
  Bn: "BN",
  Bg: "BG",
  Bf: "BF",
  Bi: "BI",
  Kh: "KH",
  Cm: "CM",
  Ca: "CA",
  Cv: "CV",
  Ky: "KY",
  Cf: "CF",
  Td: "TD",
  Cl: "CL",
  Cn: "CN",
  Cx: "CX",
  Cc: "CC",
  Co: "CO",
  Km: "KM",
  Cg: "CG",
  Cd: "CD",
  Ck: "CK",
  Cr: "CR",
  Ci: "CI",
  Hr: "HR",
  Cu: "CU",
  Cw: "CW",
  Cy: "CY",
  Cz: "CZ",
  Dk: "DK",
  Dj: "DJ",
  Dm: "DM",
  Do: "DO",
  Ec: "EC",
  Eg: "EG",
  Sv: "SV",
  Gq: "GQ",
  Er: "ER",
  Ee: "EE",
  Et: "ET",
  Fk: "FK",
  Fo: "FO",
  Fj: "FJ",
  Fi: "FI",
  Fr: "FR",
  Gf: "GF",
  Pf: "PF",
  Tf: "TF",
  Ga: "GA",
  Gm: "GM",
  Ge: "GE",
  De: "DE",
  Gh: "GH",
  Gi: "GI",
  Gr: "GR",
  Gl: "GL",
  Gd: "GD",
  Gp: "GP",
  Gu: "GU",
  Gt: "GT",
  Gg: "GG",
  Gn: "GN",
  Gw: "GW",
  Gy: "GY",
  Ht: "HT",
  Hm: "HM",
  Va: "VA",
  Hn: "HN",
  Hk: "HK",
  Hu: "HU",
  Is: "IS",
  In: "IN",
  Id: "ID",
  Ir: "IR",
  Iq: "IQ",
  Ie: "IE",
  Im: "IM",
  Il: "IL",
  It: "IT",
  Jm: "JM",
  Jp: "JP",
  Je: "JE",
  Jo: "JO",
  Kz: "KZ",
  Ke: "KE",
  Ki: "KI",
  Kr: "KR",
  Kw: "KW",
  Kg: "KG",
  La: "LA",
  Lv: "LV",
  Lb: "LB",
  Ls: "LS",
  Lr: "LR",
  Ly: "LY",
  Li: "LI",
  Lt: "LT",
  Lu: "LU",
  Mo: "MO",
  Mk: "MK",
  Mg: "MG",
  Mw: "MW",
  My: "MY",
  Mv: "MV",
  Ml: "ML",
  Mt: "MT",
  Mh: "MH",
  Mq: "MQ",
  Mr: "MR",
  Mu: "MU",
  Yt: "YT",
  Mx: "MX",
  Fm: "FM",
  Md: "MD",
  Mc: "MC",
  Mn: "MN",
  Me: "ME",
  Ms: "MS",
  Ma: "MA",
  Mz: "MZ",
  Mm: "MM",
  Na: "NA",
  Nr: "NR",
  Np: "NP",
  Nl: "NL",
  An: "AN",
  Nc: "NC",
  Nz: "NZ",
  Ni: "NI",
  Ne: "NE",
  Ng: "NG",
  Nu: "NU",
  Nf: "NF",
  Mp: "MP",
  No: "NO",
  Om: "OM",
  Pk: "PK",
  Pw: "PW",
  Ps: "PS",
  Pa: "PA",
  Pg: "PG",
  Py: "PY",
  Pe: "PE",
  Ph: "PH",
  Pn: "PN",
  Pl: "PL",
  Pt: "PT",
  Pr: "PR",
  Qa: "QA",
  Re: "RE",
  Ro: "RO",
  Ru: "RU",
  Rw: "RW",
  Bl: "BL",
  Sh: "SH",
  Kn: "KN",
  Lc: "LC",
  Mf: "MF",
  Pm: "PM",
  Vc: "VC",
  Ws: "WS",
  Sm: "SM",
  St: "ST",
  Sa: "SA",
  Sn: "SN",
  Ss: "SS",
  Rs: "RS",
  Sc: "SC",
  Sl: "SL",
  Sg: "SG",
  Sk: "SK",
  Si: "SI",
  Sb: "SB",
  So: "SO",
  Za: "ZA",
  Gs: "GS",
  Es: "ES",
  Lk: "LK",
  Sd: "SD",
  Sr: "SR",
  Sj: "SJ",
  Sz: "SZ",
  Se: "SE",
  Ch: "CH",
  Sy: "SY",
  Tw: "TW",
  Tj: "TJ",
  Tz: "TZ",
  Th: "TH",
  Tl: "TL",
  Tg: "TG",
  Tk: "TK",
  To: "TO",
  Tt: "TT",
  Tn: "TN",
  Tr: "TR",
  Tm: "TM",
  Tc: "TC",
  Tv: "TV",
  Ug: "UG",
  Ua: "UA",
  Ae: "AE",
  Gb: "GB",
  Us: "US",
  Um: "UM",
  Uy: "UY",
  Uz: "UZ",
  Vu: "VU",
  Ve: "VE",
  Vn: "VN",
  Vg: "VG",
  Vi: "VI",
  Wf: "WF",
  Eh: "EH",
  Ye: "YE",
  Zm: "ZM",
  Zw: "ZW",
} as const;
/**
 * The ISO 3166-1 alpha-2 country code for the country this location is in.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode = ClosedEnum<
  typeof PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode
>;

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType =
  {
    Location: "location",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues9 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor;
  /**
   * The first line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line1: string | null;
  /**
   * The second line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line2: string | null;
  /**
   * The third line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line3: string | null;
  /**
   * The fourth line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line4: string | null;
  /**
   * The town, neighborhood or area the location is in.
   */
  locality: string | null;
  /**
   * The state, county, province or region that the location is in.
   */
  region: string | null;
  /**
   * The postcode or zip code for the location. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.}
   */
  postcode: string | null;
  /**
   * The ISO 3166-1 alpha-2 country code for the country this location is in.
   */
  countryCode: PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode | null;
  /**
   * The latitude of the location. Validated by the regular expression `/^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?)$/`. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.}
   */
  latitude: string | null;
  /**
   * The longitude of the location. Validated by the regular expression `/^[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$/`
   */
  longitude: string | null;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
      | null
      | undefined;
  };

/**
 * The type of interaction e.g. calendar or email.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType = {
  CalendarEvent: "calendar-event",
  Call: "call",
  ChatThread: "chat-thread",
  Email: "email",
  InPersonMeeting: "in-person-meeting",
  Meeting: "meeting",
} as const;
/**
 * The type of interaction e.g. calendar or email.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType =
  ClosedEnum<typeof PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType>;

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?:
    | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
    | null
    | undefined;
};

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType =
  {
    Interaction: "interaction",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues8 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor;
  /**
   * The type of interaction e.g. calendar or email.
   */
  interactionType: PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType;
  /**
   * When the interaction occurred.
   */
  interactedAt: Date;
  /**
   * The actor that created this value.
   */
  ownerActor: PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType =
  {
    RecordReference: "record-reference",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues7 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor;
  /**
   * A slug identifying the object that the referenced record belongs to.
   */
  targetObject: string;
  /**
   * A UUID to identify the referenced record.
   */
  targetRecordId: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType =
  {
    EmailAddress: "email-address",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues6 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor;
  originalEmailAddress: string;
  emailAddress: string;
  emailDomain: string;
  emailRootDomain: string;
  emailLocalSpecifier: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType =
  {
    Domain: "domain",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues5 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor;
  domain: string;
  rootDomain: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType =
  {
    Date: "date",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues4 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType;
  /**
   * A date represents a single calendar year, month and day, independent of timezone. If hours, months, seconds or timezones are provided, they will be trimmed. For example, "2023" and "2023-01" will be coerced into "2023-01-01", and "2023-01-02", "2023-01-02T13:00", "2023-01-02T14:00:00", "2023-01-02T15:00:00.000000000", and "2023-01-02T15:00:00.000000000+02:00" will all be coerced to "2023-01-02". If a timezone is provided that would result in a different calendar date in UTC, the date will be coerced to UTC and then the timezone component will be trimmed. For example, the value "2023-01-02T23:00:00-10:00" will be returned as "2023-01-03". The maximum date is "9999-12-31".
   */
  value: string;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType
  >;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType
      | null
      | undefined;
  };

/**
 * The ISO4217 currency code representing the currency that the value is stored in.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode = {
  Aud: "AUD",
  Brl: "BRL",
  Bel: "BEL",
  Cad: "CAD",
  Cny: "CNY",
  Cop: "COP",
  Czk: "CZK",
  Dkk: "DKK",
  Eur: "EUR",
  Hkd: "HKD",
  Isk: "ISK",
  Inr: "INR",
  Ils: "ILS",
  Jpy: "JPY",
  Krw: "KRW",
  Myr: "MYR",
  Mxn: "MXN",
  Ntd: "NTD",
  Nzd: "NZD",
  Ngn: "NGN",
  Nok: "NOK",
  Xpf: "XPF",
  Pen: "PEN",
  Php: "PHP",
  Pln: "PLN",
  Gbp: "GBP",
  Sar: "SAR",
  Sgd: "SGD",
  Zar: "ZAR",
  Sek: "SEK",
  Chf: "CHF",
  Aed: "AED",
  Usd: "USD",
} as const;
/**
 * The ISO4217 currency code representing the currency that the value is stored in.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode = ClosedEnum<
  typeof PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode
>;

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType =
  {
    Currency: "currency",
  } as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues3 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor;
  /**
   * A numerical representation of the currency value. A decimal with a max of 4 decimal places.
   */
  currencyValue: number;
  /**
   * The ISO4217 currency code representing the currency that the value is stored in.
   */
  currencyCode?:
    | PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode
    | null
    | undefined;
  /**
   * The attribute type of the value.
   */
  attributeType:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType = ClosedEnum<
  typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType
>;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?:
    | PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType
    | null
    | undefined;
};

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType = {
  Checkbox: "checkbox",
} as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType
  >;

export type PatchV2ObjectsObjectRecordsRecordIdValues2 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor;
  /**
   * A boolean representing whether the checkbox is checked or not. The string values 'true' and 'false' are also accepted.
   */
  value: boolean;
  /**
   * The attribute type of the value.
   */
  attributeType: PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesType = ClosedEnum<
  typeof PatchV2ObjectsObjectRecordsRecordIdValuesType
>;

/**
 * The actor that created this value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?: PatchV2ObjectsObjectRecordsRecordIdValuesType | null | undefined;
};

/**
 * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType = {
  ApiToken: "api-token",
  WorkspaceMember: "workspace-member",
  System: "system",
  App: "app",
} as const;
/**
 * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType =
  ClosedEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType
  >;

/**
 * The attribute type of the value.
 */
export const PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType = {
  ActorReference: "actor-reference",
} as const;
/**
 * The attribute type of the value.
 */
export type PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType = ClosedEnum<
  typeof PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType
>;

export type PatchV2ObjectsObjectRecordsRecordIdValues1 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor: PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor;
  /**
   * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
   */
  referencedActorType:
    PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType;
  /**
   * The ID of the referenced actor.
   */
  referencedActorId: string | null;
  /**
   * The attribute type of the value.
   */
  attributeType: PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType;
};

export type PatchV2ObjectsObjectRecordsRecordIdValues =
  | PatchV2ObjectsObjectRecordsRecordIdValues2
  | PatchV2ObjectsObjectRecordsRecordIdValues4
  | PatchV2ObjectsObjectRecordsRecordIdValues10
  | PatchV2ObjectsObjectRecordsRecordIdValues13
  | PatchV2ObjectsObjectRecordsRecordIdValues14
  | PatchV2ObjectsObjectRecordsRecordIdValues15
  | PatchV2ObjectsObjectRecordsRecordIdValues16
  | PatchV2ObjectsObjectRecordsRecordIdValues17
  | PatchV2ObjectsObjectRecordsRecordIdValues1
  | PatchV2ObjectsObjectRecordsRecordIdValues3
  | PatchV2ObjectsObjectRecordsRecordIdValues5
  | PatchV2ObjectsObjectRecordsRecordIdValues7
  | PatchV2ObjectsObjectRecordsRecordIdValues8
  | PatchV2ObjectsObjectRecordsRecordIdValues11
  | PatchV2ObjectsObjectRecordsRecordIdValues12
  | PatchV2ObjectsObjectRecordsRecordIdValues6
  | PatchV2ObjectsObjectRecordsRecordIdValues9;

export type PatchV2ObjectsObjectRecordsRecordIdRecordsData = {
  id: PatchV2ObjectsObjectRecordsRecordIdId;
  /**
   * When this record was created.
   */
  createdAt: string;
  /**
   * A record type with an attribute `api_slug` as the key, and an array of value objects as the values.
   */
  values: {
    [k: string]: Array<
      | PatchV2ObjectsObjectRecordsRecordIdValues2
      | PatchV2ObjectsObjectRecordsRecordIdValues4
      | PatchV2ObjectsObjectRecordsRecordIdValues10
      | PatchV2ObjectsObjectRecordsRecordIdValues13
      | PatchV2ObjectsObjectRecordsRecordIdValues14
      | PatchV2ObjectsObjectRecordsRecordIdValues15
      | PatchV2ObjectsObjectRecordsRecordIdValues16
      | PatchV2ObjectsObjectRecordsRecordIdValues17
      | PatchV2ObjectsObjectRecordsRecordIdValues1
      | PatchV2ObjectsObjectRecordsRecordIdValues3
      | PatchV2ObjectsObjectRecordsRecordIdValues5
      | PatchV2ObjectsObjectRecordsRecordIdValues7
      | PatchV2ObjectsObjectRecordsRecordIdValues8
      | PatchV2ObjectsObjectRecordsRecordIdValues11
      | PatchV2ObjectsObjectRecordsRecordIdValues12
      | PatchV2ObjectsObjectRecordsRecordIdValues6
      | PatchV2ObjectsObjectRecordsRecordIdValues9
    >;
  };
};

/**
 * Success
 */
export type PatchV2ObjectsObjectRecordsRecordIdResponseBody = {
  data: PatchV2ObjectsObjectRecordsRecordIdRecordsData;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdData$inboundSchema: z.ZodType<
  PatchV2ObjectsObjectRecordsRecordIdData,
  z.ZodTypeDef,
  unknown
> = z.object({
  values: z.record(z.array(z.any())),
});

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdData$Outbound = {
  values: { [k: string]: Array<any> };
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdData$outboundSchema: z.ZodType<
  PatchV2ObjectsObjectRecordsRecordIdData$Outbound,
  z.ZodTypeDef,
  PatchV2ObjectsObjectRecordsRecordIdData
> = z.object({
  values: z.record(z.array(z.any())),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdData$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdData$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdData$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdData$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdData$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdData$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdData$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdDataToJSON(
  patchV2ObjectsObjectRecordsRecordIdData:
    PatchV2ObjectsObjectRecordsRecordIdData,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdData$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdData,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdDataFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdData' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdRequestBody$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdData$inboundSchema),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdRequestBody$Outbound = {
  data: PatchV2ObjectsObjectRecordsRecordIdData$Outbound;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdRequestBody$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdRequestBody$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdRequestBody
  > = z.object({
    data: z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdData$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdRequestBody$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdRequestBody$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdRequestBody$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdRequestBody$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdRequestBody$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdRequestBodyToJSON(
  patchV2ObjectsObjectRecordsRecordIdRequestBody:
    PatchV2ObjectsObjectRecordsRecordIdRequestBody,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdRequestBody$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdRequestBody,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdRequestBody' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdRequest$inboundSchema:
  z.ZodType<PatchV2ObjectsObjectRecordsRecordIdRequest, z.ZodTypeDef, unknown> =
    z.object({
      object: z.string(),
      record_id: z.string(),
      RequestBody: z.lazy(() =>
        PatchV2ObjectsObjectRecordsRecordIdRequestBody$inboundSchema
      ),
    }).transform((v) => {
      return remap$(v, {
        "record_id": "recordId",
        "RequestBody": "requestBody",
      });
    });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdRequest$Outbound = {
  object: string;
  record_id: string;
  RequestBody: PatchV2ObjectsObjectRecordsRecordIdRequestBody$Outbound;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdRequest$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdRequest$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdRequest
  > = z.object({
    object: z.string(),
    recordId: z.string(),
    requestBody: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdRequestBody$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      recordId: "record_id",
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdRequest$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdRequest$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdRequest$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdRequest$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdRequest$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdRequestToJSON(
  patchV2ObjectsObjectRecordsRecordIdRequest:
    PatchV2ObjectsObjectRecordsRecordIdRequest,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdRequest$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdRequest,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdRequest' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdId$inboundSchema: z.ZodType<
  PatchV2ObjectsObjectRecordsRecordIdId,
  z.ZodTypeDef,
  unknown
> = z.object({
  workspace_id: z.string(),
  object_id: z.string(),
  record_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "workspace_id": "workspaceId",
    "object_id": "objectId",
    "record_id": "recordId",
  });
});

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdId$Outbound = {
  workspace_id: string;
  object_id: string;
  record_id: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdId$outboundSchema: z.ZodType<
  PatchV2ObjectsObjectRecordsRecordIdId$Outbound,
  z.ZodTypeDef,
  PatchV2ObjectsObjectRecordsRecordIdId
> = z.object({
  workspaceId: z.string(),
  objectId: z.string(),
  recordId: z.string(),
}).transform((v) => {
  return remap$(v, {
    workspaceId: "workspace_id",
    objectId: "object_id",
    recordId: "record_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdId$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdId$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdId$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdId$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdId$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdId$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdId$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdIdToJSON(
  patchV2ObjectsObjectRecordsRecordIdId: PatchV2ObjectsObjectRecordsRecordIdId,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdId$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdId,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdIdFromJSON(
  jsonString: string,
): SafeParseResult<PatchV2ObjectsObjectRecordsRecordIdId, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdId$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdId' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues17$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues17,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$inboundSchema
    ),
    attribute_type:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$inboundSchema,
    value: z.string().transform(v => new RFCDate(v)),
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues17$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$Outbound;
  attribute_type: string;
  value: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues17$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues17$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues17
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17CreatedByActor$outboundSchema
    ),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData17AttributeType$outboundSchema,
    value: z.instanceof(RFCDate).transform(v => v.toString()),
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues17$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues17$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues17$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues17$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues17$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues17$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues17$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues17ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues17:
    PatchV2ObjectsObjectRecordsRecordIdValues17,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues17$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues17,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues17FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues17,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues17$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues17' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues16$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues16,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$inboundSchema
    ),
    value: z.string(),
    attribute_type:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues16$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$Outbound;
  value: string;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues16$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues16$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues16
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16CreatedByActor$outboundSchema
    ),
    value: z.string(),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData16AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues16$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues16$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues16$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues16$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues16$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues16$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues16$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues16ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues16:
    PatchV2ObjectsObjectRecordsRecordIdValues16,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues16$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues16,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues16FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues16,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues16$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues16' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues15$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues15,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$inboundSchema
    ),
    option: components.SelectOption$inboundSchema,
    attribute_type:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues15$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$Outbound;
  option: components.SelectOption$Outbound;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues15$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues15$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues15
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15CreatedByActor$outboundSchema
    ),
    option: components.SelectOption$outboundSchema,
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData15AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues15$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues15$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues15$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues15$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues15$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues15$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues15$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues15ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues15:
    PatchV2ObjectsObjectRecordsRecordIdValues15,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues15$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues15,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues15FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues15,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues15$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues15' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues14$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues14,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$inboundSchema
    ),
    value: z.number(),
    attribute_type:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues14$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$Outbound;
  value: number;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues14$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues14$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues14
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14CreatedByActor$outboundSchema
    ),
    value: z.number(),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData14AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues14$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues14$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues14$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues14$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues14$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues14$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues14$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues14ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues14:
    PatchV2ObjectsObjectRecordsRecordIdValues14,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues14$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues14,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues14FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues14,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues14$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues14' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues13$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues13,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$inboundSchema
    ),
    status: components.Status$inboundSchema,
    attribute_type:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues13$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$Outbound;
  status: components.Status$Outbound;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues13$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues13$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues13
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13CreatedByActor$outboundSchema
    ),
    status: components.Status$outboundSchema,
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData13AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues13$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues13$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues13$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues13$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues13$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues13$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues13$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues13ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues13:
    PatchV2ObjectsObjectRecordsRecordIdValues13,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues13$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues13,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues13FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues13,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues13$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues13' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode
  > = z.nativeEnum(PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode);

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode
  > = PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues12$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues12,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$inboundSchema
    ),
    original_phone_number: z.string(),
    country_code:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode$inboundSchema,
    phone_number: z.string(),
    attribute_type:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "original_phone_number": "originalPhoneNumber",
      "country_code": "countryCode",
      "phone_number": "phoneNumber",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues12$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$Outbound;
  original_phone_number: string;
  country_code: string;
  phone_number: string;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues12$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues12$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues12
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12CreatedByActor$outboundSchema
    ),
    originalPhoneNumber: z.string(),
    countryCode:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCountryCode$outboundSchema,
    phoneNumber: z.string(),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData12AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      originalPhoneNumber: "original_phone_number",
      countryCode: "country_code",
      phoneNumber: "phone_number",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues12$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues12$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues12$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues12$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues12$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues12$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues12$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues12ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues12:
    PatchV2ObjectsObjectRecordsRecordIdValues12,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues12$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues12,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues12FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues12,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues12$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues12' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues11$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues11,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$inboundSchema
    ),
    first_name: z.string(),
    last_name: z.string(),
    full_name: z.string(),
    attribute_type:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "first_name": "firstName",
      "last_name": "lastName",
      "full_name": "fullName",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues11$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$Outbound;
  first_name: string;
  last_name: string;
  full_name: string;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues11$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues11$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues11
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11CreatedByActor$outboundSchema
    ),
    firstName: z.string(),
    lastName: z.string(),
    fullName: z.string(),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData11AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      firstName: "first_name",
      lastName: "last_name",
      fullName: "full_name",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues11$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues11$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues11$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues11$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues11$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues11$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues11$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues11ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues11:
    PatchV2ObjectsObjectRecordsRecordIdValues11,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues11$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues11,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues11FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues11,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues11$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues11' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues10$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues10,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$inboundSchema
    ),
    value: z.number(),
    attribute_type:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues10$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$Outbound;
  value: number;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues10$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues10$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues10
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10CreatedByActor$outboundSchema
    ),
    value: z.number(),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData10AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues10$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues10$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues10$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues10$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues10$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues10$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues10$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues10ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues10:
    PatchV2ObjectsObjectRecordsRecordIdValues10,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues10$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues10,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues10FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues10,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues10$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues10' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode$inboundSchema:
  z.ZodNativeEnum<typeof PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode> =
    z.nativeEnum(PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode);

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode$outboundSchema:
  z.ZodNativeEnum<typeof PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode> =
    PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues9$inboundSchema:
  z.ZodType<PatchV2ObjectsObjectRecordsRecordIdValues9, z.ZodTypeDef, unknown> =
    z.object({
      active_from: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
      active_until: z.nullable(
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
      ),
      created_by_actor: z.lazy(() =>
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$inboundSchema
      ),
      line_1: z.nullable(z.string()),
      line_2: z.nullable(z.string()),
      line_3: z.nullable(z.string()),
      line_4: z.nullable(z.string()),
      locality: z.nullable(z.string()),
      region: z.nullable(z.string()),
      postcode: z.nullable(z.string()),
      country_code: z.nullable(
        PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode$inboundSchema,
      ),
      latitude: z.nullable(z.string()),
      longitude: z.nullable(z.string()),
      attribute_type:
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "active_from": "activeFrom",
        "active_until": "activeUntil",
        "created_by_actor": "createdByActor",
        "line_1": "line1",
        "line_2": "line2",
        "line_3": "line3",
        "line_4": "line4",
        "country_code": "countryCode",
        "attribute_type": "attributeType",
      });
    });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues9$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$Outbound;
  line_1: string | null;
  line_2: string | null;
  line_3: string | null;
  line_4: string | null;
  locality: string | null;
  region: string | null;
  postcode: string | null;
  country_code: string | null;
  latitude: string | null;
  longitude: string | null;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues9$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues9$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues9
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9CreatedByActor$outboundSchema
    ),
    line1: z.nullable(z.string()),
    line2: z.nullable(z.string()),
    line3: z.nullable(z.string()),
    line4: z.nullable(z.string()),
    locality: z.nullable(z.string()),
    region: z.nullable(z.string()),
    postcode: z.nullable(z.string()),
    countryCode: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesCountryCode$outboundSchema,
    ),
    latitude: z.nullable(z.string()),
    longitude: z.nullable(z.string()),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData9AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      line1: "line_1",
      line2: "line_2",
      line3: "line_3",
      line4: "line_4",
      countryCode: "country_code",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues9$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues9$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues9$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues9$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues9$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues9$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues9$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues9ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues9:
    PatchV2ObjectsObjectRecordsRecordIdValues9,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues9$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues9,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues9FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues9,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues9$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues9' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType
  > = z.nativeEnum(PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType);

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType
  > = PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8OwnerActorType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesOwnerActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesOwnerActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValuesOwnerActor,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesOwnerActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues8$inboundSchema:
  z.ZodType<PatchV2ObjectsObjectRecordsRecordIdValues8, z.ZodTypeDef, unknown> =
    z.object({
      active_from: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
      active_until: z.nullable(
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
      ),
      created_by_actor: z.lazy(() =>
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$inboundSchema
      ),
      interaction_type:
        PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType$inboundSchema,
      interacted_at: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
      owner_actor: z.lazy(() =>
        PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$inboundSchema
      ),
      attribute_type:
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "active_from": "activeFrom",
        "active_until": "activeUntil",
        "created_by_actor": "createdByActor",
        "interaction_type": "interactionType",
        "interacted_at": "interactedAt",
        "owner_actor": "ownerActor",
        "attribute_type": "attributeType",
      });
    });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues8$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$Outbound;
  interaction_type: string;
  interacted_at: string;
  owner_actor: PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$Outbound;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues8$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues8$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues8
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8CreatedByActor$outboundSchema
    ),
    interactionType:
      PatchV2ObjectsObjectRecordsRecordIdValuesInteractionType$outboundSchema,
    interactedAt: z.date().transform(v => v.toISOString()),
    ownerActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesOwnerActor$outboundSchema
    ),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyData8AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      interactionType: "interaction_type",
      interactedAt: "interacted_at",
      ownerActor: "owner_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues8$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues8$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues8$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues8$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues8$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues8$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues8$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues8ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues8:
    PatchV2ObjectsObjectRecordsRecordIdValues8,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues8$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues8,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues8FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues8,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues8$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues8' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues7$inboundSchema:
  z.ZodType<PatchV2ObjectsObjectRecordsRecordIdValues7, z.ZodTypeDef, unknown> =
    z.object({
      active_from: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
      active_until: z.nullable(
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
      ),
      created_by_actor: z.lazy(() =>
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$inboundSchema
      ),
      target_object: z.string(),
      target_record_id: z.string(),
      attribute_type:
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "active_from": "activeFrom",
        "active_until": "activeUntil",
        "created_by_actor": "createdByActor",
        "target_object": "targetObject",
        "target_record_id": "targetRecordId",
        "attribute_type": "attributeType",
      });
    });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues7$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$Outbound;
  target_object: string;
  target_record_id: string;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues7$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues7$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues7
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataCreatedByActor$outboundSchema
    ),
    targetObject: z.string(),
    targetRecordId: z.string(),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyDataAttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      targetObject: "target_object",
      targetRecordId: "target_record_id",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues7$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues7$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues7$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues7$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues7$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues7$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues7$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues7ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues7:
    PatchV2ObjectsObjectRecordsRecordIdValues7,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues7$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues7,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues7FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues7,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues7$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues7' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues6$inboundSchema:
  z.ZodType<PatchV2ObjectsObjectRecordsRecordIdValues6, z.ZodTypeDef, unknown> =
    z.object({
      active_from: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
      active_until: z.nullable(
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
      ),
      created_by_actor: z.lazy(() =>
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema
      ),
      original_email_address: z.string(),
      email_address: z.string(),
      email_domain: z.string(),
      email_root_domain: z.string(),
      email_local_specifier: z.string(),
      attribute_type:
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "active_from": "activeFrom",
        "active_until": "activeUntil",
        "created_by_actor": "createdByActor",
        "original_email_address": "originalEmailAddress",
        "email_address": "emailAddress",
        "email_domain": "emailDomain",
        "email_root_domain": "emailRootDomain",
        "email_local_specifier": "emailLocalSpecifier",
        "attribute_type": "attributeType",
      });
    });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues6$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound;
  original_email_address: string;
  email_address: string;
  email_domain: string;
  email_root_domain: string;
  email_local_specifier: string;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues6$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues6$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues6
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema
    ),
    originalEmailAddress: z.string(),
    emailAddress: z.string(),
    emailDomain: z.string(),
    emailRootDomain: z.string(),
    emailLocalSpecifier: z.string(),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      originalEmailAddress: "original_email_address",
      emailAddress: "email_address",
      emailDomain: "email_domain",
      emailRootDomain: "email_root_domain",
      emailLocalSpecifier: "email_local_specifier",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues6$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues6$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues6$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues6$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues6$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues6$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues6$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues6ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues6:
    PatchV2ObjectsObjectRecordsRecordIdValues6,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues6$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues6,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues6FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues6,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues6$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues6' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues5$inboundSchema:
  z.ZodType<PatchV2ObjectsObjectRecordsRecordIdValues5, z.ZodTypeDef, unknown> =
    z.object({
      active_from: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
      active_until: z.nullable(
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
      ),
      created_by_actor: z.lazy(() =>
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema
      ),
      domain: z.string(),
      root_domain: z.string(),
      attribute_type:
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "active_from": "activeFrom",
        "active_until": "activeUntil",
        "created_by_actor": "createdByActor",
        "root_domain": "rootDomain",
        "attribute_type": "attributeType",
      });
    });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues5$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$Outbound;
  domain: string;
  root_domain: string;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues5$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues5$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues5
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema
    ),
    domain: z.string(),
    rootDomain: z.string(),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200ApplicationJSONAttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      rootDomain: "root_domain",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues5$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues5$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues5$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues5$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues5$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues5$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues5$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues5ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues5:
    PatchV2ObjectsObjectRecordsRecordIdValues5,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues5$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues5,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues5FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues5' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues4$inboundSchema:
  z.ZodType<PatchV2ObjectsObjectRecordsRecordIdValues4, z.ZodTypeDef, unknown> =
    z.object({
      active_from: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
      active_until: z.nullable(
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
      ),
      created_by_actor: z.lazy(() =>
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$inboundSchema
      ),
      attribute_type:
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType$inboundSchema,
      value: z.string(),
    }).transform((v) => {
      return remap$(v, {
        "active_from": "activeFrom",
        "active_until": "activeUntil",
        "created_by_actor": "createdByActor",
        "attribute_type": "attributeType",
      });
    });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues4$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$Outbound;
  attribute_type: string;
  value: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues4$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues4$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues4
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200CreatedByActor$outboundSchema
    ),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponse200AttributeType$outboundSchema,
    value: z.string(),
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues4$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues4$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues4$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues4$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues4$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues4$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues4$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues4ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues4:
    PatchV2ObjectsObjectRecordsRecordIdValues4,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues4$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues4,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues4FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues4' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$outboundSchema
      .parse(
        patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor,
      ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode
  > = z.nativeEnum(PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode);

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode
  > = PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues3$inboundSchema:
  z.ZodType<PatchV2ObjectsObjectRecordsRecordIdValues3, z.ZodTypeDef, unknown> =
    z.object({
      active_from: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
      active_until: z.nullable(
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
      ),
      created_by_actor: z.lazy(() =>
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$inboundSchema
      ),
      currency_value: z.number(),
      currency_code: z.nullable(
        PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode$inboundSchema,
      ).optional(),
      attribute_type:
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "active_from": "activeFrom",
        "active_until": "activeUntil",
        "created_by_actor": "createdByActor",
        "currency_value": "currencyValue",
        "currency_code": "currencyCode",
        "attribute_type": "attributeType",
      });
    });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues3$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$Outbound;
  currency_value: number;
  currency_code?: string | null | undefined;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues3$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues3$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues3
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseCreatedByActor$outboundSchema
    ),
    currencyValue: z.number(),
    currencyCode: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesCurrencyCode$outboundSchema,
    ).optional(),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsResponseAttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      currencyValue: "currency_value",
      currencyCode: "currency_code",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues3$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues3$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues3$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues3$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues3$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues3$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues3$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues3ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues3:
    PatchV2ObjectsObjectRecordsRecordIdValues3,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues3$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues3,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues3FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues3' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType$inboundSchema:
  z.ZodNativeEnum<typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType> =
    z.nativeEnum(PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType);

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType$outboundSchema:
  z.ZodNativeEnum<typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType> =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$outboundSchema
      .parse(patchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues2$inboundSchema:
  z.ZodType<PatchV2ObjectsObjectRecordsRecordIdValues2, z.ZodTypeDef, unknown> =
    z.object({
      active_from: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
      active_until: z.nullable(
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
      ),
      created_by_actor: z.lazy(() =>
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$inboundSchema
      ),
      value: z.boolean(),
      attribute_type:
        PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "active_from": "activeFrom",
        "active_until": "activeUntil",
        "created_by_actor": "createdByActor",
        "attribute_type": "attributeType",
      });
    });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues2$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$Outbound;
  value: boolean;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues2$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues2$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues2
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsCreatedByActor$outboundSchema
    ),
    value: z.boolean(),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesRecordsAttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues2$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues2$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues2$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues2$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues2$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues2$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues2$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues2ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues2:
    PatchV2ObjectsObjectRecordsRecordIdValues2,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues2$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues2,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues2FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues2' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesType$inboundSchema:
  z.ZodNativeEnum<typeof PatchV2ObjectsObjectRecordsRecordIdValuesType> = z
    .nativeEnum(PatchV2ObjectsObjectRecordsRecordIdValuesType);

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesType$outboundSchema:
  z.ZodNativeEnum<typeof PatchV2ObjectsObjectRecordsRecordIdValuesType> =
    PatchV2ObjectsObjectRecordsRecordIdValuesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      PatchV2ObjectsObjectRecordsRecordIdValuesType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesCreatedByActorToJSON(
  patchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor:
    PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$outboundSchema
      .parse(patchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType
  > = z.nativeEnum(
    PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType,
  );

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType
  > =
    PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType
  > = z.nativeEnum(PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType);

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType
  > = PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType$outboundSchema;
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues1$inboundSchema:
  z.ZodType<PatchV2ObjectsObjectRecordsRecordIdValues1, z.ZodTypeDef, unknown> =
    z.object({
      active_from: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
      active_until: z.nullable(
        z.string().datetime({ offset: true }).transform(v => new Date(v)),
      ),
      created_by_actor: z.lazy(() =>
        PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$inboundSchema
      ),
      referenced_actor_type:
        PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType$inboundSchema,
      referenced_actor_id: z.nullable(z.string()),
      attribute_type:
        PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "active_from": "activeFrom",
        "active_until": "activeUntil",
        "created_by_actor": "createdByActor",
        "referenced_actor_type": "referencedActorType",
        "referenced_actor_id": "referencedActorId",
        "attribute_type": "attributeType",
      });
    });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues1$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$Outbound;
  referenced_actor_type: string;
  referenced_actor_id: string | null;
  attribute_type: string;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues1$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues1$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues1
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdValuesCreatedByActor$outboundSchema
    ),
    referencedActorType:
      PatchV2ObjectsObjectRecordsRecordIdValuesReferencedActorType$outboundSchema,
    referencedActorId: z.nullable(z.string()),
    attributeType:
      PatchV2ObjectsObjectRecordsRecordIdValuesAttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      referencedActorType: "referenced_actor_type",
      referencedActorId: "referenced_actor_id",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues1$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues1$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues1$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues1$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues1$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues1$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues1$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValues1ToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues1:
    PatchV2ObjectsObjectRecordsRecordIdValues1,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues1$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues1,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValues1FromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues1' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues$inboundSchema: z.ZodType<
  PatchV2ObjectsObjectRecordsRecordIdValues,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues2$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues4$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues10$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues13$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues14$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues15$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues16$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues17$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues1$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues3$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues5$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues7$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues8$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues11$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues12$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues6$inboundSchema),
  z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues9$inboundSchema),
]);

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdValues$Outbound =
  | PatchV2ObjectsObjectRecordsRecordIdValues2$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues4$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues10$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues13$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues14$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues15$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues16$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues17$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues1$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues3$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues5$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues7$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues8$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues11$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues12$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues6$Outbound
  | PatchV2ObjectsObjectRecordsRecordIdValues9$Outbound;

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdValues$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdValues$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdValues
  > = z.union([
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues2$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues4$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues10$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues13$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues14$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues15$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues16$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues17$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues1$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues3$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues5$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues7$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues8$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues11$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues12$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues6$outboundSchema),
    z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues9$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdValues$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdValues$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdValues$Outbound` instead. */
  export type Outbound = PatchV2ObjectsObjectRecordsRecordIdValues$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdValuesToJSON(
  patchV2ObjectsObjectRecordsRecordIdValues:
    PatchV2ObjectsObjectRecordsRecordIdValues,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdValues$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdValues,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdValuesFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdValues,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdValues$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdValues' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdRecordsData$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdRecordsData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdId$inboundSchema),
    created_at: z.string(),
    values: z.record(
      z.array(z.union([
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues2$inboundSchema),
        z.lazy(() =>
          PatchV2ObjectsObjectRecordsRecordIdValues4$inboundSchema
        ),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues10$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues13$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues14$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues15$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues16$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues17$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues1$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues3$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues5$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues7$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues8$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues11$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues12$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues6$inboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues9$inboundSchema),
      ])),
    ),
  }).transform((v) => {
    return remap$(v, {
      "created_at": "createdAt",
    });
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdRecordsData$Outbound = {
  id: PatchV2ObjectsObjectRecordsRecordIdId$Outbound;
  created_at: string;
  values: {
    [k: string]: Array<
      | PatchV2ObjectsObjectRecordsRecordIdValues2$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues4$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues10$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues13$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues14$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues15$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues16$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues17$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues1$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues3$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues5$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues7$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues8$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues11$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues12$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues6$Outbound
      | PatchV2ObjectsObjectRecordsRecordIdValues9$Outbound
    >;
  };
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdRecordsData$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdRecordsData$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdRecordsData
  > = z.object({
    id: z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdId$outboundSchema),
    createdAt: z.string(),
    values: z.record(
      z.array(z.union([
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues2$outboundSchema),
        z.lazy(() =>
          PatchV2ObjectsObjectRecordsRecordIdValues4$outboundSchema
        ),
        z.lazy(() =>
          PatchV2ObjectsObjectRecordsRecordIdValues10$outboundSchema
        ),
        z.lazy(() =>
          PatchV2ObjectsObjectRecordsRecordIdValues13$outboundSchema
        ),
        z.lazy(() =>
          PatchV2ObjectsObjectRecordsRecordIdValues14$outboundSchema
        ),
        z.lazy(() =>
          PatchV2ObjectsObjectRecordsRecordIdValues15$outboundSchema
        ),
        z.lazy(() =>
          PatchV2ObjectsObjectRecordsRecordIdValues16$outboundSchema
        ),
        z.lazy(() =>
          PatchV2ObjectsObjectRecordsRecordIdValues17$outboundSchema
        ),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues1$outboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues3$outboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues5$outboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues7$outboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues8$outboundSchema),
        z.lazy(() =>
          PatchV2ObjectsObjectRecordsRecordIdValues11$outboundSchema
        ),
        z.lazy(() =>
          PatchV2ObjectsObjectRecordsRecordIdValues12$outboundSchema
        ),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues6$outboundSchema),
        z.lazy(() => PatchV2ObjectsObjectRecordsRecordIdValues9$outboundSchema),
      ])),
    ),
  }).transform((v) => {
    return remap$(v, {
      createdAt: "created_at",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdRecordsData$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdRecordsData$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdRecordsData$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdRecordsData$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdRecordsData$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdRecordsData$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdRecordsData$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdRecordsDataToJSON(
  patchV2ObjectsObjectRecordsRecordIdRecordsData:
    PatchV2ObjectsObjectRecordsRecordIdRecordsData,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdRecordsData$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdRecordsData,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdRecordsDataFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdRecordsData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdRecordsData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdRecordsData' from JSON`,
  );
}

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdResponseBody$inboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdRecordsData$inboundSchema
    ),
  });

/** @internal */
export type PatchV2ObjectsObjectRecordsRecordIdResponseBody$Outbound = {
  data: PatchV2ObjectsObjectRecordsRecordIdRecordsData$Outbound;
};

/** @internal */
export const PatchV2ObjectsObjectRecordsRecordIdResponseBody$outboundSchema:
  z.ZodType<
    PatchV2ObjectsObjectRecordsRecordIdResponseBody$Outbound,
    z.ZodTypeDef,
    PatchV2ObjectsObjectRecordsRecordIdResponseBody
  > = z.object({
    data: z.lazy(() =>
      PatchV2ObjectsObjectRecordsRecordIdRecordsData$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ObjectsObjectRecordsRecordIdResponseBody$ {
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdResponseBody$inboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ObjectsObjectRecordsRecordIdResponseBody$outboundSchema;
  /** @deprecated use `PatchV2ObjectsObjectRecordsRecordIdResponseBody$Outbound` instead. */
  export type Outbound =
    PatchV2ObjectsObjectRecordsRecordIdResponseBody$Outbound;
}

export function patchV2ObjectsObjectRecordsRecordIdResponseBodyToJSON(
  patchV2ObjectsObjectRecordsRecordIdResponseBody:
    PatchV2ObjectsObjectRecordsRecordIdResponseBody,
): string {
  return JSON.stringify(
    PatchV2ObjectsObjectRecordsRecordIdResponseBody$outboundSchema.parse(
      patchV2ObjectsObjectRecordsRecordIdResponseBody,
    ),
  );
}

export function patchV2ObjectsObjectRecordsRecordIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PatchV2ObjectsObjectRecordsRecordIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PatchV2ObjectsObjectRecordsRecordIdResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PatchV2ObjectsObjectRecordsRecordIdResponseBody' from JSON`,
  );
}
