/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const GetV2TargetIdentifierAttributesAttributeStatusesType = {
  InvalidRequestError: "invalid_request_error",
} as const;
export type GetV2TargetIdentifierAttributesAttributeStatusesType = ClosedEnum<
  typeof GetV2TargetIdentifierAttributesAttributeStatusesType
>;

export const GetV2TargetIdentifierAttributesAttributeStatusesCode = {
  NotFound: "not_found",
} as const;
export type GetV2TargetIdentifierAttributesAttributeStatusesCode = ClosedEnum<
  typeof GetV2TargetIdentifierAttributesAttributeStatusesCode
>;

/**
 * Not Found
 */
export type GetV2TargetIdentifierAttributesAttributeStatusesResponseBodyData = {
  statusCode: number;
  type: GetV2TargetIdentifierAttributesAttributeStatusesType;
  code: GetV2TargetIdentifierAttributesAttributeStatusesCode;
  message: string;
};

/**
 * Not Found
 */
export class GetV2TargetIdentifierAttributesAttributeStatusesResponseBody
  extends Error
{
  statusCode: number;
  type: GetV2TargetIdentifierAttributesAttributeStatusesType;
  code: GetV2TargetIdentifierAttributesAttributeStatusesCode;

  /** The original data that was passed to this error instance. */
  data$: GetV2TargetIdentifierAttributesAttributeStatusesResponseBodyData;

  constructor(
    err: GetV2TargetIdentifierAttributesAttributeStatusesResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    this.type = err.type;
    this.code = err.code;

    this.name = "GetV2TargetIdentifierAttributesAttributeStatusesResponseBody";
  }
}

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeStatusesType$inboundSchema:
  z.ZodNativeEnum<typeof GetV2TargetIdentifierAttributesAttributeStatusesType> =
    z.nativeEnum(GetV2TargetIdentifierAttributesAttributeStatusesType);

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeStatusesType$outboundSchema:
  z.ZodNativeEnum<typeof GetV2TargetIdentifierAttributesAttributeStatusesType> =
    GetV2TargetIdentifierAttributesAttributeStatusesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2TargetIdentifierAttributesAttributeStatusesType$ {
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeStatusesType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2TargetIdentifierAttributesAttributeStatusesType$inboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeStatusesType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2TargetIdentifierAttributesAttributeStatusesType$outboundSchema;
}

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeStatusesCode$inboundSchema:
  z.ZodNativeEnum<typeof GetV2TargetIdentifierAttributesAttributeStatusesCode> =
    z.nativeEnum(GetV2TargetIdentifierAttributesAttributeStatusesCode);

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeStatusesCode$outboundSchema:
  z.ZodNativeEnum<typeof GetV2TargetIdentifierAttributesAttributeStatusesCode> =
    GetV2TargetIdentifierAttributesAttributeStatusesCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2TargetIdentifierAttributesAttributeStatusesCode$ {
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeStatusesCode$inboundSchema` instead. */
  export const inboundSchema =
    GetV2TargetIdentifierAttributesAttributeStatusesCode$inboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeStatusesCode$outboundSchema` instead. */
  export const outboundSchema =
    GetV2TargetIdentifierAttributesAttributeStatusesCode$outboundSchema;
}

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeStatusesResponseBody$inboundSchema:
  z.ZodType<
    GetV2TargetIdentifierAttributesAttributeStatusesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status_code: z.number(),
    type: GetV2TargetIdentifierAttributesAttributeStatusesType$inboundSchema,
    code: GetV2TargetIdentifierAttributesAttributeStatusesCode$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "status_code": "statusCode",
      });

      return new GetV2TargetIdentifierAttributesAttributeStatusesResponseBody(
        remapped,
      );
    });

/** @internal */
export type GetV2TargetIdentifierAttributesAttributeStatusesResponseBody$Outbound =
  {
    status_code: number;
    type: string;
    code: string;
    message: string;
  };

/** @internal */
export const GetV2TargetIdentifierAttributesAttributeStatusesResponseBody$outboundSchema:
  z.ZodType<
    GetV2TargetIdentifierAttributesAttributeStatusesResponseBody$Outbound,
    z.ZodTypeDef,
    GetV2TargetIdentifierAttributesAttributeStatusesResponseBody
  > = z.instanceof(GetV2TargetIdentifierAttributesAttributeStatusesResponseBody)
    .transform(v => v.data$)
    .pipe(
      z.object({
        statusCode: z.number(),
        type:
          GetV2TargetIdentifierAttributesAttributeStatusesType$outboundSchema,
        code:
          GetV2TargetIdentifierAttributesAttributeStatusesCode$outboundSchema,
        message: z.string(),
      }).transform((v) => {
        return remap$(v, {
          statusCode: "status_code",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2TargetIdentifierAttributesAttributeStatusesResponseBody$ {
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeStatusesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetV2TargetIdentifierAttributesAttributeStatusesResponseBody$inboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeStatusesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV2TargetIdentifierAttributesAttributeStatusesResponseBody$outboundSchema;
  /** @deprecated use `GetV2TargetIdentifierAttributesAttributeStatusesResponseBody$Outbound` instead. */
  export type Outbound =
    GetV2TargetIdentifierAttributesAttributeStatusesResponseBody$Outbound;
}
