/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteV2TasksTaskIdRequest = {
  taskId: string;
};

/**
 * Success
 */
export type DeleteV2TasksTaskIdResponse = {};

/** @internal */
export const DeleteV2TasksTaskIdRequest$inboundSchema: z.ZodType<
  DeleteV2TasksTaskIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  task_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "task_id": "taskId",
  });
});

/** @internal */
export type DeleteV2TasksTaskIdRequest$Outbound = {
  task_id: string;
};

/** @internal */
export const DeleteV2TasksTaskIdRequest$outboundSchema: z.ZodType<
  DeleteV2TasksTaskIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteV2TasksTaskIdRequest
> = z.object({
  taskId: z.string(),
}).transform((v) => {
  return remap$(v, {
    taskId: "task_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV2TasksTaskIdRequest$ {
  /** @deprecated use `DeleteV2TasksTaskIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteV2TasksTaskIdRequest$inboundSchema;
  /** @deprecated use `DeleteV2TasksTaskIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteV2TasksTaskIdRequest$outboundSchema;
  /** @deprecated use `DeleteV2TasksTaskIdRequest$Outbound` instead. */
  export type Outbound = DeleteV2TasksTaskIdRequest$Outbound;
}

export function deleteV2TasksTaskIdRequestToJSON(
  deleteV2TasksTaskIdRequest: DeleteV2TasksTaskIdRequest,
): string {
  return JSON.stringify(
    DeleteV2TasksTaskIdRequest$outboundSchema.parse(deleteV2TasksTaskIdRequest),
  );
}

export function deleteV2TasksTaskIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteV2TasksTaskIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteV2TasksTaskIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteV2TasksTaskIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteV2TasksTaskIdResponse$inboundSchema: z.ZodType<
  DeleteV2TasksTaskIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type DeleteV2TasksTaskIdResponse$Outbound = {};

/** @internal */
export const DeleteV2TasksTaskIdResponse$outboundSchema: z.ZodType<
  DeleteV2TasksTaskIdResponse$Outbound,
  z.ZodTypeDef,
  DeleteV2TasksTaskIdResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV2TasksTaskIdResponse$ {
  /** @deprecated use `DeleteV2TasksTaskIdResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteV2TasksTaskIdResponse$inboundSchema;
  /** @deprecated use `DeleteV2TasksTaskIdResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteV2TasksTaskIdResponse$outboundSchema;
  /** @deprecated use `DeleteV2TasksTaskIdResponse$Outbound` instead. */
  export type Outbound = DeleteV2TasksTaskIdResponse$Outbound;
}

export function deleteV2TasksTaskIdResponseToJSON(
  deleteV2TasksTaskIdResponse: DeleteV2TasksTaskIdResponse,
): string {
  return JSON.stringify(
    DeleteV2TasksTaskIdResponse$outboundSchema.parse(
      deleteV2TasksTaskIdResponse,
    ),
  );
}

export function deleteV2TasksTaskIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteV2TasksTaskIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteV2TasksTaskIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteV2TasksTaskIdResponse' from JSON`,
  );
}
