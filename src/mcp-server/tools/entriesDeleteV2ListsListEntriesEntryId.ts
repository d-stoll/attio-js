/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { entriesDeleteV2ListsListEntriesEntryId } from "../../funcs/entriesDeleteV2ListsListEntriesEntryId.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.DeleteV2ListsListEntriesEntryIdRequest$inboundSchema,
};

export const tool$entriesDeleteV2ListsListEntriesEntryId: ToolDefinition<
  typeof args
> = {
  name: "entries-delete-v2-lists-list-entries-entry-id",
  description: `Delete a list entry

Deletes a single list entry by its \`entry_id\`.

Required scopes: \`list_entry:read-write\`, \`list_configuration:read\`.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await entriesDeleteV2ListsListEntriesEntryId(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
