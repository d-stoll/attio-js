/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { RFCDate } from "../../types/rfcdate.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest =
  {
    object: string;
    recordId: string;
    attribute: string;
    showHistoric?: boolean | undefined;
    limit?: number | undefined;
    offset?: number | undefined;
  };

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType =
  {
    Timestamp: "timestamp",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType
  >;

export type Seventeen = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType;
  /**
   * A timestamp value represents a single, universal moment in time using an ISO 8601 formatted string. This means that a timestamp consists of a date, a time (with nanosecond precision), and a time zone. Attio will coerce timestamps which do not provide full nanosecond precision and UTC is assumed if no time zone is provided. For example, "2023", "2023-01", "2023-01-02", "2023-01-02T13:00", "2023-01-02T13:00:00", and "2023-01-02T13:00:00.000000000" will all be coerced to "2023-01-02T13:00:00.000000000Z". Timestamps are always returned in UTC. For example, writing a timestamp value using the string "2023-01-02T13:00:00.000000000+02:00" will result in the value "2023-01-02T11:00:00.000000000Z" being returned. The maximum date is "9999-12-31T23:59:59.999999999Z".
   */
  value: RFCDate;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType =
  {
    Text: "text",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType
  >;

export type Sixteen = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor;
  /**
   * A raw text field. Values are limited to 10MB.
   */
  value: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType =
  {
    Select: "select",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType
  >;

export type Fifteen = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor;
  option: components.SelectOption;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType =
  {
    Rating: "rating",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType
  >;

export type Fourteen = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor;
  /**
   * A number between 0 and 5 (inclusive) to represent a star rating.
   */
  value: number;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType =
  {
    Status: "status",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType
  >;

export type Thirteen = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor;
  status: components.Status;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type
      | null
      | undefined;
  };

/**
 * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
 */
export const DataCountryCode = {
  Af: "AF",
  Ax: "AX",
  Al: "AL",
  Dz: "DZ",
  As: "AS",
  Ad: "AD",
  Ao: "AO",
  Ai: "AI",
  Aq: "AQ",
  Ag: "AG",
  Ar: "AR",
  Am: "AM",
  Aw: "AW",
  Au: "AU",
  At: "AT",
  Az: "AZ",
  Bs: "BS",
  Bh: "BH",
  Bd: "BD",
  Bb: "BB",
  By: "BY",
  Be: "BE",
  Bz: "BZ",
  Bj: "BJ",
  Bm: "BM",
  Bt: "BT",
  Bo: "BO",
  Ba: "BA",
  Bw: "BW",
  Bv: "BV",
  Br: "BR",
  Io: "IO",
  Bn: "BN",
  Bg: "BG",
  Bf: "BF",
  Bi: "BI",
  Kh: "KH",
  Cm: "CM",
  Ca: "CA",
  Cv: "CV",
  Ky: "KY",
  Cf: "CF",
  Td: "TD",
  Cl: "CL",
  Cn: "CN",
  Cx: "CX",
  Cc: "CC",
  Co: "CO",
  Km: "KM",
  Cg: "CG",
  Cd: "CD",
  Ck: "CK",
  Cr: "CR",
  Ci: "CI",
  Hr: "HR",
  Cu: "CU",
  Cw: "CW",
  Cy: "CY",
  Cz: "CZ",
  Dk: "DK",
  Dj: "DJ",
  Dm: "DM",
  Do: "DO",
  Ec: "EC",
  Eg: "EG",
  Sv: "SV",
  Gq: "GQ",
  Er: "ER",
  Ee: "EE",
  Et: "ET",
  Fk: "FK",
  Fo: "FO",
  Fj: "FJ",
  Fi: "FI",
  Fr: "FR",
  Gf: "GF",
  Pf: "PF",
  Tf: "TF",
  Ga: "GA",
  Gm: "GM",
  Ge: "GE",
  De: "DE",
  Gh: "GH",
  Gi: "GI",
  Gr: "GR",
  Gl: "GL",
  Gd: "GD",
  Gp: "GP",
  Gu: "GU",
  Gt: "GT",
  Gg: "GG",
  Gn: "GN",
  Gw: "GW",
  Gy: "GY",
  Ht: "HT",
  Hm: "HM",
  Va: "VA",
  Hn: "HN",
  Hk: "HK",
  Hu: "HU",
  Is: "IS",
  In: "IN",
  Id: "ID",
  Ir: "IR",
  Iq: "IQ",
  Ie: "IE",
  Im: "IM",
  Il: "IL",
  It: "IT",
  Jm: "JM",
  Jp: "JP",
  Je: "JE",
  Jo: "JO",
  Kz: "KZ",
  Ke: "KE",
  Ki: "KI",
  Kr: "KR",
  Kw: "KW",
  Kg: "KG",
  La: "LA",
  Lv: "LV",
  Lb: "LB",
  Ls: "LS",
  Lr: "LR",
  Ly: "LY",
  Li: "LI",
  Lt: "LT",
  Lu: "LU",
  Mo: "MO",
  Mk: "MK",
  Mg: "MG",
  Mw: "MW",
  My: "MY",
  Mv: "MV",
  Ml: "ML",
  Mt: "MT",
  Mh: "MH",
  Mq: "MQ",
  Mr: "MR",
  Mu: "MU",
  Yt: "YT",
  Mx: "MX",
  Fm: "FM",
  Md: "MD",
  Mc: "MC",
  Mn: "MN",
  Me: "ME",
  Ms: "MS",
  Ma: "MA",
  Mz: "MZ",
  Mm: "MM",
  Na: "NA",
  Nr: "NR",
  Np: "NP",
  Nl: "NL",
  An: "AN",
  Nc: "NC",
  Nz: "NZ",
  Ni: "NI",
  Ne: "NE",
  Ng: "NG",
  Nu: "NU",
  Nf: "NF",
  Mp: "MP",
  No: "NO",
  Om: "OM",
  Pk: "PK",
  Pw: "PW",
  Ps: "PS",
  Pa: "PA",
  Pg: "PG",
  Py: "PY",
  Pe: "PE",
  Ph: "PH",
  Pn: "PN",
  Pl: "PL",
  Pt: "PT",
  Pr: "PR",
  Qa: "QA",
  Re: "RE",
  Ro: "RO",
  Ru: "RU",
  Rw: "RW",
  Bl: "BL",
  Sh: "SH",
  Kn: "KN",
  Lc: "LC",
  Mf: "MF",
  Pm: "PM",
  Vc: "VC",
  Ws: "WS",
  Sm: "SM",
  St: "ST",
  Sa: "SA",
  Sn: "SN",
  Ss: "SS",
  Rs: "RS",
  Sc: "SC",
  Sl: "SL",
  Sg: "SG",
  Sk: "SK",
  Si: "SI",
  Sb: "SB",
  So: "SO",
  Za: "ZA",
  Gs: "GS",
  Es: "ES",
  Lk: "LK",
  Sd: "SD",
  Sr: "SR",
  Sj: "SJ",
  Sz: "SZ",
  Se: "SE",
  Ch: "CH",
  Sy: "SY",
  Tw: "TW",
  Tj: "TJ",
  Tz: "TZ",
  Th: "TH",
  Tl: "TL",
  Tg: "TG",
  Tk: "TK",
  To: "TO",
  Tt: "TT",
  Tn: "TN",
  Tr: "TR",
  Tm: "TM",
  Tc: "TC",
  Tv: "TV",
  Ug: "UG",
  Ua: "UA",
  Ae: "AE",
  Gb: "GB",
  Us: "US",
  Um: "UM",
  Uy: "UY",
  Uz: "UZ",
  Vu: "VU",
  Ve: "VE",
  Vn: "VN",
  Vg: "VG",
  Vi: "VI",
  Wf: "WF",
  Eh: "EH",
  Ye: "YE",
  Zm: "ZM",
  Zw: "ZW",
} as const;
/**
 * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
 */
export type DataCountryCode = ClosedEnum<typeof DataCountryCode>;

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType =
  {
    PhoneNumber: "phone-number",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType
  >;

export type Twelve = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor;
  /**
   * The raw, original phone number, as inputted.
   */
  originalPhoneNumber: string;
  /**
   * The ISO 3166-1 alpha-2 country code representing the country that this phone number belongs to.
   */
  countryCode: DataCountryCode;
  phoneNumber: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType =
  {
    PersonalName: "personal-name",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType
  >;

export type Eleven = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor;
  /**
   * The first name.
   */
  firstName: string;
  /**
   * The last name.
   */
  lastName: string;
  /**
   * The full name.
   */
  fullName: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType =
  {
    Number: "number",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType
  >;

export type Ten = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor;
  /**
   * Numbers are persisted as 64 bit floats.
   */
  value: number;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type
      | null
      | undefined;
  };

/**
 * The ISO 3166-1 alpha-2 country code for the country this location is in.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode =
  {
    Af: "AF",
    Ax: "AX",
    Al: "AL",
    Dz: "DZ",
    As: "AS",
    Ad: "AD",
    Ao: "AO",
    Ai: "AI",
    Aq: "AQ",
    Ag: "AG",
    Ar: "AR",
    Am: "AM",
    Aw: "AW",
    Au: "AU",
    At: "AT",
    Az: "AZ",
    Bs: "BS",
    Bh: "BH",
    Bd: "BD",
    Bb: "BB",
    By: "BY",
    Be: "BE",
    Bz: "BZ",
    Bj: "BJ",
    Bm: "BM",
    Bt: "BT",
    Bo: "BO",
    Ba: "BA",
    Bw: "BW",
    Bv: "BV",
    Br: "BR",
    Io: "IO",
    Bn: "BN",
    Bg: "BG",
    Bf: "BF",
    Bi: "BI",
    Kh: "KH",
    Cm: "CM",
    Ca: "CA",
    Cv: "CV",
    Ky: "KY",
    Cf: "CF",
    Td: "TD",
    Cl: "CL",
    Cn: "CN",
    Cx: "CX",
    Cc: "CC",
    Co: "CO",
    Km: "KM",
    Cg: "CG",
    Cd: "CD",
    Ck: "CK",
    Cr: "CR",
    Ci: "CI",
    Hr: "HR",
    Cu: "CU",
    Cw: "CW",
    Cy: "CY",
    Cz: "CZ",
    Dk: "DK",
    Dj: "DJ",
    Dm: "DM",
    Do: "DO",
    Ec: "EC",
    Eg: "EG",
    Sv: "SV",
    Gq: "GQ",
    Er: "ER",
    Ee: "EE",
    Et: "ET",
    Fk: "FK",
    Fo: "FO",
    Fj: "FJ",
    Fi: "FI",
    Fr: "FR",
    Gf: "GF",
    Pf: "PF",
    Tf: "TF",
    Ga: "GA",
    Gm: "GM",
    Ge: "GE",
    De: "DE",
    Gh: "GH",
    Gi: "GI",
    Gr: "GR",
    Gl: "GL",
    Gd: "GD",
    Gp: "GP",
    Gu: "GU",
    Gt: "GT",
    Gg: "GG",
    Gn: "GN",
    Gw: "GW",
    Gy: "GY",
    Ht: "HT",
    Hm: "HM",
    Va: "VA",
    Hn: "HN",
    Hk: "HK",
    Hu: "HU",
    Is: "IS",
    In: "IN",
    Id: "ID",
    Ir: "IR",
    Iq: "IQ",
    Ie: "IE",
    Im: "IM",
    Il: "IL",
    It: "IT",
    Jm: "JM",
    Jp: "JP",
    Je: "JE",
    Jo: "JO",
    Kz: "KZ",
    Ke: "KE",
    Ki: "KI",
    Kr: "KR",
    Kw: "KW",
    Kg: "KG",
    La: "LA",
    Lv: "LV",
    Lb: "LB",
    Ls: "LS",
    Lr: "LR",
    Ly: "LY",
    Li: "LI",
    Lt: "LT",
    Lu: "LU",
    Mo: "MO",
    Mk: "MK",
    Mg: "MG",
    Mw: "MW",
    My: "MY",
    Mv: "MV",
    Ml: "ML",
    Mt: "MT",
    Mh: "MH",
    Mq: "MQ",
    Mr: "MR",
    Mu: "MU",
    Yt: "YT",
    Mx: "MX",
    Fm: "FM",
    Md: "MD",
    Mc: "MC",
    Mn: "MN",
    Me: "ME",
    Ms: "MS",
    Ma: "MA",
    Mz: "MZ",
    Mm: "MM",
    Na: "NA",
    Nr: "NR",
    Np: "NP",
    Nl: "NL",
    An: "AN",
    Nc: "NC",
    Nz: "NZ",
    Ni: "NI",
    Ne: "NE",
    Ng: "NG",
    Nu: "NU",
    Nf: "NF",
    Mp: "MP",
    No: "NO",
    Om: "OM",
    Pk: "PK",
    Pw: "PW",
    Ps: "PS",
    Pa: "PA",
    Pg: "PG",
    Py: "PY",
    Pe: "PE",
    Ph: "PH",
    Pn: "PN",
    Pl: "PL",
    Pt: "PT",
    Pr: "PR",
    Qa: "QA",
    Re: "RE",
    Ro: "RO",
    Ru: "RU",
    Rw: "RW",
    Bl: "BL",
    Sh: "SH",
    Kn: "KN",
    Lc: "LC",
    Mf: "MF",
    Pm: "PM",
    Vc: "VC",
    Ws: "WS",
    Sm: "SM",
    St: "ST",
    Sa: "SA",
    Sn: "SN",
    Ss: "SS",
    Rs: "RS",
    Sc: "SC",
    Sl: "SL",
    Sg: "SG",
    Sk: "SK",
    Si: "SI",
    Sb: "SB",
    So: "SO",
    Za: "ZA",
    Gs: "GS",
    Es: "ES",
    Lk: "LK",
    Sd: "SD",
    Sr: "SR",
    Sj: "SJ",
    Sz: "SZ",
    Se: "SE",
    Ch: "CH",
    Sy: "SY",
    Tw: "TW",
    Tj: "TJ",
    Tz: "TZ",
    Th: "TH",
    Tl: "TL",
    Tg: "TG",
    Tk: "TK",
    To: "TO",
    Tt: "TT",
    Tn: "TN",
    Tr: "TR",
    Tm: "TM",
    Tc: "TC",
    Tv: "TV",
    Ug: "UG",
    Ua: "UA",
    Ae: "AE",
    Gb: "GB",
    Us: "US",
    Um: "UM",
    Uy: "UY",
    Uz: "UZ",
    Vu: "VU",
    Ve: "VE",
    Vn: "VN",
    Vg: "VG",
    Vi: "VI",
    Wf: "WF",
    Eh: "EH",
    Ye: "YE",
    Zm: "ZM",
    Zw: "ZW",
  } as const;
/**
 * The ISO 3166-1 alpha-2 country code for the country this location is in.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode
  >;

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType =
  {
    Location: "location",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType
  >;

export type Nine = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor;
  /**
   * The first line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line1: string | null;
  /**
   * The second line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line2: string | null;
  /**
   * The third line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line3: string | null;
  /**
   * The fourth line of the address. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.
   */
  line4: string | null;
  /**
   * The town, neighborhood or area the location is in.
   */
  locality: string | null;
  /**
   * The state, county, province or region that the location is in.
   */
  region: string | null;
  /**
   * The postcode or zip code for the location. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.}
   */
  postcode: string | null;
  /**
   * The ISO 3166-1 alpha-2 country code for the country this location is in.
   */
  countryCode:
    | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode
    | null;
  /**
   * The latitude of the location. Validated by the regular expression `/^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?)$/`. Note that this value is not currently represented in the UI but will be persisted and readable through API calls.}
   */
  latitude: string | null;
  /**
   * The longitude of the location. Validated by the regular expression `/^[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$/`
   */
  longitude: string | null;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type
      | null
      | undefined;
  };

/**
 * The type of interaction e.g. calendar or email.
 */
export const InteractionType = {
  CalendarEvent: "calendar-event",
  Call: "call",
  ChatThread: "chat-thread",
  Email: "email",
  InPersonMeeting: "in-person-meeting",
  Meeting: "meeting",
} as const;
/**
 * The type of interaction e.g. calendar or email.
 */
export type InteractionType = ClosedEnum<typeof InteractionType>;

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType
  >;

/**
 * The actor that created this value.
 */
export type OwnerActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?:
    | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType
    | null
    | undefined;
};

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType =
  {
    Interaction: "interaction",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType
  >;

export type Eight = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor;
  /**
   * The type of interaction e.g. calendar or email.
   */
  interactionType: InteractionType;
  /**
   * When the interaction occurred.
   */
  interactedAt: Date;
  /**
   * The actor that created this value.
   */
  ownerActor: OwnerActor;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType =
  {
    RecordReference: "record-reference",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType
  >;

export type Seven = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor;
  /**
   * A slug identifying the object that the referenced record belongs to.
   */
  targetObject: string;
  /**
   * A UUID to identify the referenced record.
   */
  targetRecordId: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType =
  {
    EmailAddress: "email-address",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType
  >;

export type Six = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor;
  originalEmailAddress: string;
  emailAddress: string;
  emailDomain: string;
  emailRootDomain: string;
  emailLocalSpecifier: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType =
  {
    Domain: "domain",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType
  >;

export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor;
  domain: string;
  rootDomain: string;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType
      | null
      | undefined;
  };

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType =
  {
    Date: "date",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType
  >;

export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType;
  /**
   * A date represents a single calendar year, month and day, independent of timezone. If hours, months, seconds or timezones are provided, they will be trimmed. For example, "2023" and "2023-01" will be coerced into "2023-01-01", and "2023-01-02", "2023-01-02T13:00", "2023-01-02T14:00:00", "2023-01-02T15:00:00.000000000", and "2023-01-02T15:00:00.000000000+02:00" will all be coerced to "2023-01-02". If a timezone is provided that would result in a different calendar date in UTC, the date will be coerced to UTC and then the timezone component will be trimmed. For example, the value "2023-01-02T23:00:00-10:00" will be returned as "2023-01-03". The maximum date is "9999-12-31".
   */
  value: string;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType
  >;

/**
 * The actor that created this value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor =
  {
    /**
     * An ID to identify the actor.
     */
    id?: string | null | undefined;
    /**
     * The type of actor. [Read more information on actor types here](/docs/actors).
     */
    type?:
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType
      | null
      | undefined;
  };

/**
 * The ISO4217 currency code representing the currency that the value is stored in.
 */
export const CurrencyCode = {
  Aud: "AUD",
  Brl: "BRL",
  Bel: "BEL",
  Cad: "CAD",
  Cny: "CNY",
  Cop: "COP",
  Czk: "CZK",
  Dkk: "DKK",
  Eur: "EUR",
  Hkd: "HKD",
  Isk: "ISK",
  Inr: "INR",
  Ils: "ILS",
  Jpy: "JPY",
  Krw: "KRW",
  Myr: "MYR",
  Mxn: "MXN",
  Ntd: "NTD",
  Nzd: "NZD",
  Ngn: "NGN",
  Nok: "NOK",
  Xpf: "XPF",
  Pen: "PEN",
  Php: "PHP",
  Pln: "PLN",
  Gbp: "GBP",
  Sar: "SAR",
  Sgd: "SGD",
  Zar: "ZAR",
  Sek: "SEK",
  Chf: "CHF",
  Aed: "AED",
  Usd: "USD",
} as const;
/**
 * The ISO4217 currency code representing the currency that the value is stored in.
 */
export type CurrencyCode = ClosedEnum<typeof CurrencyCode>;

/**
 * The attribute type of the value.
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType =
  {
    Currency: "currency",
  } as const;
/**
 * The attribute type of the value.
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType
  >;

export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor;
  /**
   * A numerical representation of the currency value. A decimal with a max of 4 decimal places.
   */
  currencyValue: number;
  /**
   * The ISO4217 currency code representing the currency that the value is stored in.
   */
  currencyCode?: CurrencyCode | null | undefined;
  /**
   * The attribute type of the value.
   */
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType
  >;

/**
 * The actor that created this value.
 */
export type DataCreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?:
    | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType
    | null
    | undefined;
};

/**
 * The attribute type of the value.
 */
export const DataAttributeType = {
  Checkbox: "checkbox",
} as const;
/**
 * The attribute type of the value.
 */
export type DataAttributeType = ClosedEnum<typeof DataAttributeType>;

export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor: DataCreatedByActor;
  /**
   * A boolean representing whether the checkbox is checked or not. The string values 'true' and 'false' are also accepted.
   */
  value: boolean;
  /**
   * The attribute type of the value.
   */
  attributeType: DataAttributeType;
};

/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type
  >;

/**
 * The actor that created this value.
 */
export type CreatedByActor = {
  /**
   * An ID to identify the actor.
   */
  id?: string | null | undefined;
  /**
   * The type of actor. [Read more information on actor types here](/docs/actors).
   */
  type?:
    | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type
    | null
    | undefined;
};

/**
 * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
 */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType =
  {
    ApiToken: "api-token",
    WorkspaceMember: "workspace-member",
    System: "system",
    App: "app",
  } as const;
/**
 * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType =
  ClosedEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType
  >;

/**
 * The attribute type of the value.
 */
export const AttributeType = {
  ActorReference: "actor-reference",
} as const;
/**
 * The attribute type of the value.
 */
export type AttributeType = ClosedEnum<typeof AttributeType>;

export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1 = {
  /**
   * The point in time at which this value was made "active". `active_from` can be considered roughly analogous to `created_at`.
   */
  activeFrom: Date;
  /**
   * The point in time at which this value was deactivated. If `null`, the value is active.
   */
  activeUntil: Date | null;
  /**
   * The actor that created this value.
   */
  createdByActor: CreatedByActor;
  /**
   * The type of the referenced actor. [Read more information on actor types here](/docs/actors).
   */
  referencedActorType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType;
  /**
   * The ID of the referenced actor.
   */
  referencedActorId: string | null;
  /**
   * The attribute type of the value.
   */
  attributeType: AttributeType;
};

export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData =
  | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2
  | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4
  | Ten
  | Thirteen
  | Fourteen
  | Fifteen
  | Sixteen
  | Seventeen
  | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1
  | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3
  | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5
  | Seven
  | Eight
  | Eleven
  | Twelve
  | Six
  | Nine;

/**
 * Success
 */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody =
  {
    data: Array<
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4
      | Ten
      | Thirteen
      | Fourteen
      | Fifteen
      | Sixteen
      | Seventeen
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5
      | Seven
      | Eight
      | Eleven
      | Twelve
      | Six
      | Nine
    >;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    object: z.string(),
    record_id: z.string(),
    attribute: z.string(),
    show_historic: z.boolean().default(false),
    limit: z.number().int().optional(),
    offset: z.number().int().optional(),
  }).transform((v) => {
    return remap$(v, {
      "record_id": "recordId",
      "show_historic": "showHistoric",
    });
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$Outbound =
  {
    object: string;
    record_id: string;
    attribute: string;
    show_historic: boolean;
    limit?: number | undefined;
    offset?: number | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest
  > = z.object({
    object: z.string(),
    recordId: z.string(),
    attribute: z.string(),
    showHistoric: z.boolean().default(false),
    limit: z.number().int().optional(),
    offset: z.number().int().optional(),
  }).transform((v) => {
    return remap$(v, {
      recordId: "record_id",
      showHistoric: "show_historic",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequestToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$outboundSchema
      .parse(getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesRequest' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType$outboundSchema;
}

/** @internal */
export const Seventeen$inboundSchema: z.ZodType<
  Seventeen,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$inboundSchema
  ),
  attribute_type:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType$inboundSchema,
  value: z.string().transform(v => new RFCDate(v)),
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type Seventeen$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$Outbound;
  attribute_type: string;
  value: string;
};

/** @internal */
export const Seventeen$outboundSchema: z.ZodType<
  Seventeen$Outbound,
  z.ZodTypeDef,
  Seventeen
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17CreatedByActor$outboundSchema
  ),
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody17AttributeType$outboundSchema,
  value: z.instanceof(RFCDate).transform(v => v.toString()),
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Seventeen$ {
  /** @deprecated use `Seventeen$inboundSchema` instead. */
  export const inboundSchema = Seventeen$inboundSchema;
  /** @deprecated use `Seventeen$outboundSchema` instead. */
  export const outboundSchema = Seventeen$outboundSchema;
  /** @deprecated use `Seventeen$Outbound` instead. */
  export type Outbound = Seventeen$Outbound;
}

export function seventeenToJSON(seventeen: Seventeen): string {
  return JSON.stringify(Seventeen$outboundSchema.parse(seventeen));
}

export function seventeenFromJSON(
  jsonString: string,
): SafeParseResult<Seventeen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Seventeen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Seventeen' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType$outboundSchema;
}

/** @internal */
export const Sixteen$inboundSchema: z.ZodType<Sixteen, z.ZodTypeDef, unknown> =
  z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$inboundSchema
    ),
    value: z.string(),
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Sixteen$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$Outbound;
  value: string;
  attribute_type: string;
};

/** @internal */
export const Sixteen$outboundSchema: z.ZodType<
  Sixteen$Outbound,
  z.ZodTypeDef,
  Sixteen
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16CreatedByActor$outboundSchema
  ),
  value: z.string(),
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody16AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Sixteen$ {
  /** @deprecated use `Sixteen$inboundSchema` instead. */
  export const inboundSchema = Sixteen$inboundSchema;
  /** @deprecated use `Sixteen$outboundSchema` instead. */
  export const outboundSchema = Sixteen$outboundSchema;
  /** @deprecated use `Sixteen$Outbound` instead. */
  export type Outbound = Sixteen$Outbound;
}

export function sixteenToJSON(sixteen: Sixteen): string {
  return JSON.stringify(Sixteen$outboundSchema.parse(sixteen));
}

export function sixteenFromJSON(
  jsonString: string,
): SafeParseResult<Sixteen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Sixteen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Sixteen' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType$outboundSchema;
}

/** @internal */
export const Fifteen$inboundSchema: z.ZodType<Fifteen, z.ZodTypeDef, unknown> =
  z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$inboundSchema
    ),
    option: components.SelectOption$inboundSchema,
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Fifteen$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$Outbound;
  option: components.SelectOption$Outbound;
  attribute_type: string;
};

/** @internal */
export const Fifteen$outboundSchema: z.ZodType<
  Fifteen$Outbound,
  z.ZodTypeDef,
  Fifteen
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15CreatedByActor$outboundSchema
  ),
  option: components.SelectOption$outboundSchema,
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody15AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Fifteen$ {
  /** @deprecated use `Fifteen$inboundSchema` instead. */
  export const inboundSchema = Fifteen$inboundSchema;
  /** @deprecated use `Fifteen$outboundSchema` instead. */
  export const outboundSchema = Fifteen$outboundSchema;
  /** @deprecated use `Fifteen$Outbound` instead. */
  export type Outbound = Fifteen$Outbound;
}

export function fifteenToJSON(fifteen: Fifteen): string {
  return JSON.stringify(Fifteen$outboundSchema.parse(fifteen));
}

export function fifteenFromJSON(
  jsonString: string,
): SafeParseResult<Fifteen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Fifteen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Fifteen' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType$outboundSchema;
}

/** @internal */
export const Fourteen$inboundSchema: z.ZodType<
  Fourteen,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$inboundSchema
  ),
  value: z.number(),
  attribute_type:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type Fourteen$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$Outbound;
  value: number;
  attribute_type: string;
};

/** @internal */
export const Fourteen$outboundSchema: z.ZodType<
  Fourteen$Outbound,
  z.ZodTypeDef,
  Fourteen
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14CreatedByActor$outboundSchema
  ),
  value: z.number(),
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody14AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Fourteen$ {
  /** @deprecated use `Fourteen$inboundSchema` instead. */
  export const inboundSchema = Fourteen$inboundSchema;
  /** @deprecated use `Fourteen$outboundSchema` instead. */
  export const outboundSchema = Fourteen$outboundSchema;
  /** @deprecated use `Fourteen$Outbound` instead. */
  export type Outbound = Fourteen$Outbound;
}

export function fourteenToJSON(fourteen: Fourteen): string {
  return JSON.stringify(Fourteen$outboundSchema.parse(fourteen));
}

export function fourteenFromJSON(
  jsonString: string,
): SafeParseResult<Fourteen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Fourteen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Fourteen' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType$outboundSchema;
}

/** @internal */
export const Thirteen$inboundSchema: z.ZodType<
  Thirteen,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_from: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ),
  active_until: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  created_by_actor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$inboundSchema
  ),
  status: components.Status$inboundSchema,
  attribute_type:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "active_from": "activeFrom",
    "active_until": "activeUntil",
    "created_by_actor": "createdByActor",
    "attribute_type": "attributeType",
  });
});

/** @internal */
export type Thirteen$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$Outbound;
  status: components.Status$Outbound;
  attribute_type: string;
};

/** @internal */
export const Thirteen$outboundSchema: z.ZodType<
  Thirteen$Outbound,
  z.ZodTypeDef,
  Thirteen
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13CreatedByActor$outboundSchema
  ),
  status: components.Status$outboundSchema,
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody13AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Thirteen$ {
  /** @deprecated use `Thirteen$inboundSchema` instead. */
  export const inboundSchema = Thirteen$inboundSchema;
  /** @deprecated use `Thirteen$outboundSchema` instead. */
  export const outboundSchema = Thirteen$outboundSchema;
  /** @deprecated use `Thirteen$Outbound` instead. */
  export type Outbound = Thirteen$Outbound;
}

export function thirteenToJSON(thirteen: Thirteen): string {
  return JSON.stringify(Thirteen$outboundSchema.parse(thirteen));
}

export function thirteenFromJSON(
  jsonString: string,
): SafeParseResult<Thirteen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Thirteen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Thirteen' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor' from JSON`,
  );
}

/** @internal */
export const DataCountryCode$inboundSchema: z.ZodNativeEnum<
  typeof DataCountryCode
> = z.nativeEnum(DataCountryCode);

/** @internal */
export const DataCountryCode$outboundSchema: z.ZodNativeEnum<
  typeof DataCountryCode
> = DataCountryCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataCountryCode$ {
  /** @deprecated use `DataCountryCode$inboundSchema` instead. */
  export const inboundSchema = DataCountryCode$inboundSchema;
  /** @deprecated use `DataCountryCode$outboundSchema` instead. */
  export const outboundSchema = DataCountryCode$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType$outboundSchema;
}

/** @internal */
export const Twelve$inboundSchema: z.ZodType<Twelve, z.ZodTypeDef, unknown> = z
  .object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$inboundSchema
    ),
    original_phone_number: z.string(),
    country_code: DataCountryCode$inboundSchema,
    phone_number: z.string(),
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "original_phone_number": "originalPhoneNumber",
      "country_code": "countryCode",
      "phone_number": "phoneNumber",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Twelve$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$Outbound;
  original_phone_number: string;
  country_code: string;
  phone_number: string;
  attribute_type: string;
};

/** @internal */
export const Twelve$outboundSchema: z.ZodType<
  Twelve$Outbound,
  z.ZodTypeDef,
  Twelve
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12CreatedByActor$outboundSchema
  ),
  originalPhoneNumber: z.string(),
  countryCode: DataCountryCode$outboundSchema,
  phoneNumber: z.string(),
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody12AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    originalPhoneNumber: "original_phone_number",
    countryCode: "country_code",
    phoneNumber: "phone_number",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Twelve$ {
  /** @deprecated use `Twelve$inboundSchema` instead. */
  export const inboundSchema = Twelve$inboundSchema;
  /** @deprecated use `Twelve$outboundSchema` instead. */
  export const outboundSchema = Twelve$outboundSchema;
  /** @deprecated use `Twelve$Outbound` instead. */
  export type Outbound = Twelve$Outbound;
}

export function twelveToJSON(twelve: Twelve): string {
  return JSON.stringify(Twelve$outboundSchema.parse(twelve));
}

export function twelveFromJSON(
  jsonString: string,
): SafeParseResult<Twelve, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Twelve$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Twelve' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType$outboundSchema;
}

/** @internal */
export const Eleven$inboundSchema: z.ZodType<Eleven, z.ZodTypeDef, unknown> = z
  .object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$inboundSchema
    ),
    first_name: z.string(),
    last_name: z.string(),
    full_name: z.string(),
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "first_name": "firstName",
      "last_name": "lastName",
      "full_name": "fullName",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Eleven$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$Outbound;
  first_name: string;
  last_name: string;
  full_name: string;
  attribute_type: string;
};

/** @internal */
export const Eleven$outboundSchema: z.ZodType<
  Eleven$Outbound,
  z.ZodTypeDef,
  Eleven
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11CreatedByActor$outboundSchema
  ),
  firstName: z.string(),
  lastName: z.string(),
  fullName: z.string(),
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody11AttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    firstName: "first_name",
    lastName: "last_name",
    fullName: "full_name",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eleven$ {
  /** @deprecated use `Eleven$inboundSchema` instead. */
  export const inboundSchema = Eleven$inboundSchema;
  /** @deprecated use `Eleven$outboundSchema` instead. */
  export const outboundSchema = Eleven$outboundSchema;
  /** @deprecated use `Eleven$Outbound` instead. */
  export type Outbound = Eleven$Outbound;
}

export function elevenToJSON(eleven: Eleven): string {
  return JSON.stringify(Eleven$outboundSchema.parse(eleven));
}

export function elevenFromJSON(
  jsonString: string,
): SafeParseResult<Eleven, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Eleven$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Eleven' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType$outboundSchema;
}

/** @internal */
export const Ten$inboundSchema: z.ZodType<Ten, z.ZodTypeDef, unknown> = z
  .object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$inboundSchema
    ),
    value: z.number(),
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Ten$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$Outbound;
  value: number;
  attribute_type: string;
};

/** @internal */
export const Ten$outboundSchema: z.ZodType<Ten$Outbound, z.ZodTypeDef, Ten> = z
  .object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10CreatedByActor$outboundSchema
    ),
    value: z.number(),
    attributeType:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody10AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Ten$ {
  /** @deprecated use `Ten$inboundSchema` instead. */
  export const inboundSchema = Ten$inboundSchema;
  /** @deprecated use `Ten$outboundSchema` instead. */
  export const outboundSchema = Ten$outboundSchema;
  /** @deprecated use `Ten$Outbound` instead. */
  export type Outbound = Ten$Outbound;
}

export function tenToJSON(ten: Ten): string {
  return JSON.stringify(Ten$outboundSchema.parse(ten));
}

export function tenFromJSON(
  jsonString: string,
): SafeParseResult<Ten, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Ten$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Ten' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType$outboundSchema;
}

/** @internal */
export const Nine$inboundSchema: z.ZodType<Nine, z.ZodTypeDef, unknown> = z
  .object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$inboundSchema
    ),
    line_1: z.nullable(z.string()),
    line_2: z.nullable(z.string()),
    line_3: z.nullable(z.string()),
    line_4: z.nullable(z.string()),
    locality: z.nullable(z.string()),
    region: z.nullable(z.string()),
    postcode: z.nullable(z.string()),
    country_code: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode$inboundSchema,
    ),
    latitude: z.nullable(z.string()),
    longitude: z.nullable(z.string()),
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "line_1": "line1",
      "line_2": "line2",
      "line_3": "line3",
      "line_4": "line4",
      "country_code": "countryCode",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Nine$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$Outbound;
  line_1: string | null;
  line_2: string | null;
  line_3: string | null;
  line_4: string | null;
  locality: string | null;
  region: string | null;
  postcode: string | null;
  country_code: string | null;
  latitude: string | null;
  longitude: string | null;
  attribute_type: string;
};

/** @internal */
export const Nine$outboundSchema: z.ZodType<Nine$Outbound, z.ZodTypeDef, Nine> =
  z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9CreatedByActor$outboundSchema
    ),
    line1: z.nullable(z.string()),
    line2: z.nullable(z.string()),
    line3: z.nullable(z.string()),
    line4: z.nullable(z.string()),
    locality: z.nullable(z.string()),
    region: z.nullable(z.string()),
    postcode: z.nullable(z.string()),
    countryCode: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCountryCode$outboundSchema,
    ),
    latitude: z.nullable(z.string()),
    longitude: z.nullable(z.string()),
    attributeType:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody9AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      line1: "line_1",
      line2: "line_2",
      line3: "line_3",
      line4: "line_4",
      countryCode: "country_code",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Nine$ {
  /** @deprecated use `Nine$inboundSchema` instead. */
  export const inboundSchema = Nine$inboundSchema;
  /** @deprecated use `Nine$outboundSchema` instead. */
  export const outboundSchema = Nine$outboundSchema;
  /** @deprecated use `Nine$Outbound` instead. */
  export type Outbound = Nine$Outbound;
}

export function nineToJSON(nine: Nine): string {
  return JSON.stringify(Nine$outboundSchema.parse(nine));
}

export function nineFromJSON(
  jsonString: string,
): SafeParseResult<Nine, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Nine$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Nine' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor' from JSON`,
  );
}

/** @internal */
export const InteractionType$inboundSchema: z.ZodNativeEnum<
  typeof InteractionType
> = z.nativeEnum(InteractionType);

/** @internal */
export const InteractionType$outboundSchema: z.ZodNativeEnum<
  typeof InteractionType
> = InteractionType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InteractionType$ {
  /** @deprecated use `InteractionType$inboundSchema` instead. */
  export const inboundSchema = InteractionType$inboundSchema;
  /** @deprecated use `InteractionType$outboundSchema` instead. */
  export const outboundSchema = InteractionType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType$outboundSchema;
}

/** @internal */
export const OwnerActor$inboundSchema: z.ZodType<
  OwnerActor,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  type: z.nullable(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType$inboundSchema,
  ).optional(),
});

/** @internal */
export type OwnerActor$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
};

/** @internal */
export const OwnerActor$outboundSchema: z.ZodType<
  OwnerActor$Outbound,
  z.ZodTypeDef,
  OwnerActor
> = z.object({
  id: z.nullable(z.string()).optional(),
  type: z.nullable(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody8OwnerActorType$outboundSchema,
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OwnerActor$ {
  /** @deprecated use `OwnerActor$inboundSchema` instead. */
  export const inboundSchema = OwnerActor$inboundSchema;
  /** @deprecated use `OwnerActor$outboundSchema` instead. */
  export const outboundSchema = OwnerActor$outboundSchema;
  /** @deprecated use `OwnerActor$Outbound` instead. */
  export type Outbound = OwnerActor$Outbound;
}

export function ownerActorToJSON(ownerActor: OwnerActor): string {
  return JSON.stringify(OwnerActor$outboundSchema.parse(ownerActor));
}

export function ownerActorFromJSON(
  jsonString: string,
): SafeParseResult<OwnerActor, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OwnerActor$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OwnerActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema;
}

/** @internal */
export const Eight$inboundSchema: z.ZodType<Eight, z.ZodTypeDef, unknown> = z
  .object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$inboundSchema
    ),
    interaction_type: InteractionType$inboundSchema,
    interacted_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    owner_actor: z.lazy(() => OwnerActor$inboundSchema),
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "interaction_type": "interactionType",
      "interacted_at": "interactedAt",
      "owner_actor": "ownerActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Eight$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$Outbound;
  interaction_type: string;
  interacted_at: string;
  owner_actor: OwnerActor$Outbound;
  attribute_type: string;
};

/** @internal */
export const Eight$outboundSchema: z.ZodType<
  Eight$Outbound,
  z.ZodTypeDef,
  Eight
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyCreatedByActor$outboundSchema
  ),
  interactionType: InteractionType$outboundSchema,
  interactedAt: z.date().transform(v => v.toISOString()),
  ownerActor: z.lazy(() => OwnerActor$outboundSchema),
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    interactionType: "interaction_type",
    interactedAt: "interacted_at",
    ownerActor: "owner_actor",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eight$ {
  /** @deprecated use `Eight$inboundSchema` instead. */
  export const inboundSchema = Eight$inboundSchema;
  /** @deprecated use `Eight$outboundSchema` instead. */
  export const outboundSchema = Eight$outboundSchema;
  /** @deprecated use `Eight$Outbound` instead. */
  export type Outbound = Eight$Outbound;
}

export function eightToJSON(eight: Eight): string {
  return JSON.stringify(Eight$outboundSchema.parse(eight));
}

export function eightFromJSON(
  jsonString: string,
): SafeParseResult<Eight, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Eight$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Eight' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType$outboundSchema;
}

/** @internal */
export const Seven$inboundSchema: z.ZodType<Seven, z.ZodTypeDef, unknown> = z
  .object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$inboundSchema
    ),
    target_object: z.string(),
    target_record_id: z.string(),
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "target_object": "targetObject",
      "target_record_id": "targetRecordId",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Seven$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$Outbound;
  target_object: string;
  target_record_id: string;
  attribute_type: string;
};

/** @internal */
export const Seven$outboundSchema: z.ZodType<
  Seven$Outbound,
  z.ZodTypeDef,
  Seven
> = z.object({
  activeFrom: z.date().transform(v => v.toISOString()),
  activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
  createdByActor: z.lazy(() =>
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONCreatedByActor$outboundSchema
  ),
  targetObject: z.string(),
  targetRecordId: z.string(),
  attributeType:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONAttributeType$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    activeFrom: "active_from",
    activeUntil: "active_until",
    createdByActor: "created_by_actor",
    targetObject: "target_object",
    targetRecordId: "target_record_id",
    attributeType: "attribute_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Seven$ {
  /** @deprecated use `Seven$inboundSchema` instead. */
  export const inboundSchema = Seven$inboundSchema;
  /** @deprecated use `Seven$outboundSchema` instead. */
  export const outboundSchema = Seven$outboundSchema;
  /** @deprecated use `Seven$Outbound` instead. */
  export type Outbound = Seven$Outbound;
}

export function sevenToJSON(seven: Seven): string {
  return JSON.stringify(Seven$outboundSchema.parse(seven));
}

export function sevenFromJSON(
  jsonString: string,
): SafeParseResult<Seven, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Seven$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Seven' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType$outboundSchema;
}

/** @internal */
export const Six$inboundSchema: z.ZodType<Six, z.ZodTypeDef, unknown> = z
  .object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$inboundSchema
    ),
    original_email_address: z.string(),
    email_address: z.string(),
    email_domain: z.string(),
    email_root_domain: z.string(),
    email_local_specifier: z.string(),
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "original_email_address": "originalEmailAddress",
      "email_address": "emailAddress",
      "email_domain": "emailDomain",
      "email_root_domain": "emailRootDomain",
      "email_local_specifier": "emailLocalSpecifier",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type Six$Outbound = {
  active_from: string;
  active_until: string | null;
  created_by_actor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$Outbound;
  original_email_address: string;
  email_address: string;
  email_domain: string;
  email_root_domain: string;
  email_local_specifier: string;
  attribute_type: string;
};

/** @internal */
export const Six$outboundSchema: z.ZodType<Six$Outbound, z.ZodTypeDef, Six> = z
  .object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200CreatedByActor$outboundSchema
    ),
    originalEmailAddress: z.string(),
    emailAddress: z.string(),
    emailDomain: z.string(),
    emailRootDomain: z.string(),
    emailLocalSpecifier: z.string(),
    attributeType:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      originalEmailAddress: "original_email_address",
      emailAddress: "email_address",
      emailDomain: "email_domain",
      emailRootDomain: "email_root_domain",
      emailLocalSpecifier: "email_local_specifier",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Six$ {
  /** @deprecated use `Six$inboundSchema` instead. */
  export const inboundSchema = Six$inboundSchema;
  /** @deprecated use `Six$outboundSchema` instead. */
  export const outboundSchema = Six$outboundSchema;
  /** @deprecated use `Six$Outbound` instead. */
  export type Outbound = Six$Outbound;
}

export function sixToJSON(six: Six): string {
  return JSON.stringify(Six$outboundSchema.parse(six));
}

export function sixFromJSON(
  jsonString: string,
): SafeParseResult<Six, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Six$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Six' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200Type$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$inboundSchema
    ),
    domain: z.string(),
    root_domain: z.string(),
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "root_domain": "rootDomain",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$Outbound =
  {
    active_from: string;
    active_until: string | null;
    created_by_actor:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$Outbound;
    domain: string;
    root_domain: string;
    attribute_type: string;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseCreatedByActor$outboundSchema
    ),
    domain: z.string(),
    rootDomain: z.string(),
    attributeType:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseAttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      rootDomain: "root_domain",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5ToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$outboundSchema
      .parse(getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5FromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponseType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$inboundSchema
    ),
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType$inboundSchema,
    value: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$Outbound =
  {
    active_from: string;
    active_until: string | null;
    created_by_actor:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$Outbound;
    attribute_type: string;
    value: string;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsCreatedByActor$outboundSchema
    ),
    attributeType:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsAttributeType$outboundSchema,
    value: z.string(),
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4ToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$outboundSchema
      .parse(getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4FromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType$inboundSchema,
    ).optional(),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$Outbound =
  {
    id?: string | null | undefined;
    type?: string | null | undefined;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor
  > = z.object({
    id: z.nullable(z.string()).optional(),
    type: z.nullable(
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsType$outboundSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActorToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor' from JSON`,
  );
}

/** @internal */
export const CurrencyCode$inboundSchema: z.ZodNativeEnum<typeof CurrencyCode> =
  z.nativeEnum(CurrencyCode);

/** @internal */
export const CurrencyCode$outboundSchema: z.ZodNativeEnum<typeof CurrencyCode> =
  CurrencyCode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CurrencyCode$ {
  /** @deprecated use `CurrencyCode$inboundSchema` instead. */
  export const inboundSchema = CurrencyCode$inboundSchema;
  /** @deprecated use `CurrencyCode$outboundSchema` instead. */
  export const outboundSchema = CurrencyCode$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$inboundSchema
    ),
    currency_value: z.number(),
    currency_code: z.nullable(CurrencyCode$inboundSchema).optional(),
    attribute_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "currency_value": "currencyValue",
      "currency_code": "currencyCode",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$Outbound =
  {
    active_from: string;
    active_until: string | null;
    created_by_actor:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$Outbound;
    currency_value: number;
    currency_code?: string | null | undefined;
    attribute_type: string;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataCreatedByActor$outboundSchema
    ),
    currencyValue: z.number(),
    currencyCode: z.nullable(CurrencyCode$outboundSchema).optional(),
    attributeType:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataAttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      currencyValue: "currency_value",
      currencyCode: "currency_code",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3ToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$outboundSchema
      .parse(getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3FromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType$outboundSchema;
}

/** @internal */
export const DataCreatedByActor$inboundSchema: z.ZodType<
  DataCreatedByActor,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  type: z.nullable(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType$inboundSchema,
  ).optional(),
});

/** @internal */
export type DataCreatedByActor$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
};

/** @internal */
export const DataCreatedByActor$outboundSchema: z.ZodType<
  DataCreatedByActor$Outbound,
  z.ZodTypeDef,
  DataCreatedByActor
> = z.object({
  id: z.nullable(z.string()).optional(),
  type: z.nullable(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataType$outboundSchema,
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataCreatedByActor$ {
  /** @deprecated use `DataCreatedByActor$inboundSchema` instead. */
  export const inboundSchema = DataCreatedByActor$inboundSchema;
  /** @deprecated use `DataCreatedByActor$outboundSchema` instead. */
  export const outboundSchema = DataCreatedByActor$outboundSchema;
  /** @deprecated use `DataCreatedByActor$Outbound` instead. */
  export type Outbound = DataCreatedByActor$Outbound;
}

export function dataCreatedByActorToJSON(
  dataCreatedByActor: DataCreatedByActor,
): string {
  return JSON.stringify(
    DataCreatedByActor$outboundSchema.parse(dataCreatedByActor),
  );
}

export function dataCreatedByActorFromJSON(
  jsonString: string,
): SafeParseResult<DataCreatedByActor, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataCreatedByActor$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataCreatedByActor' from JSON`,
  );
}

/** @internal */
export const DataAttributeType$inboundSchema: z.ZodNativeEnum<
  typeof DataAttributeType
> = z.nativeEnum(DataAttributeType);

/** @internal */
export const DataAttributeType$outboundSchema: z.ZodNativeEnum<
  typeof DataAttributeType
> = DataAttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataAttributeType$ {
  /** @deprecated use `DataAttributeType$inboundSchema` instead. */
  export const inboundSchema = DataAttributeType$inboundSchema;
  /** @deprecated use `DataAttributeType$outboundSchema` instead. */
  export const outboundSchema = DataAttributeType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() => DataCreatedByActor$inboundSchema),
    value: z.boolean(),
    attribute_type: DataAttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$Outbound =
  {
    active_from: string;
    active_until: string | null;
    created_by_actor: DataCreatedByActor$Outbound;
    value: boolean;
    attribute_type: string;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() => DataCreatedByActor$outboundSchema),
    value: z.boolean(),
    attributeType: DataAttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2ToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$outboundSchema
      .parse(getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2FromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type$outboundSchema;
}

/** @internal */
export const CreatedByActor$inboundSchema: z.ZodType<
  CreatedByActor,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
  type: z.nullable(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type$inboundSchema,
  ).optional(),
});

/** @internal */
export type CreatedByActor$Outbound = {
  id?: string | null | undefined;
  type?: string | null | undefined;
};

/** @internal */
export const CreatedByActor$outboundSchema: z.ZodType<
  CreatedByActor$Outbound,
  z.ZodTypeDef,
  CreatedByActor
> = z.object({
  id: z.nullable(z.string()).optional(),
  type: z.nullable(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataRecordsResponse200ApplicationJSONResponseBody1Type$outboundSchema,
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatedByActor$ {
  /** @deprecated use `CreatedByActor$inboundSchema` instead. */
  export const inboundSchema = CreatedByActor$inboundSchema;
  /** @deprecated use `CreatedByActor$outboundSchema` instead. */
  export const outboundSchema = CreatedByActor$outboundSchema;
  /** @deprecated use `CreatedByActor$Outbound` instead. */
  export type Outbound = CreatedByActor$Outbound;
}

export function createdByActorToJSON(createdByActor: CreatedByActor): string {
  return JSON.stringify(CreatedByActor$outboundSchema.parse(createdByActor));
}

export function createdByActorFromJSON(
  jsonString: string,
): SafeParseResult<CreatedByActor, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreatedByActor$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreatedByActor' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType
  > = z.nativeEnum(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType,
  );

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType
  > =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType$outboundSchema;
}

/** @internal */
export const AttributeType$inboundSchema: z.ZodNativeEnum<
  typeof AttributeType
> = z.nativeEnum(AttributeType);

/** @internal */
export const AttributeType$outboundSchema: z.ZodNativeEnum<
  typeof AttributeType
> = AttributeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AttributeType$ {
  /** @deprecated use `AttributeType$inboundSchema` instead. */
  export const inboundSchema = AttributeType$inboundSchema;
  /** @deprecated use `AttributeType$outboundSchema` instead. */
  export const outboundSchema = AttributeType$outboundSchema;
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    active_from: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    active_until: z.nullable(
      z.string().datetime({ offset: true }).transform(v => new Date(v)),
    ),
    created_by_actor: z.lazy(() => CreatedByActor$inboundSchema),
    referenced_actor_type:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType$inboundSchema,
    referenced_actor_id: z.nullable(z.string()),
    attribute_type: AttributeType$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "active_from": "activeFrom",
      "active_until": "activeUntil",
      "created_by_actor": "createdByActor",
      "referenced_actor_type": "referencedActorType",
      "referenced_actor_id": "referencedActorId",
      "attribute_type": "attributeType",
    });
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$Outbound =
  {
    active_from: string;
    active_until: string | null;
    created_by_actor: CreatedByActor$Outbound;
    referenced_actor_type: string;
    referenced_actor_id: string | null;
    attribute_type: string;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1
  > = z.object({
    activeFrom: z.date().transform(v => v.toISOString()),
    activeUntil: z.nullable(z.date().transform(v => v.toISOString())),
    createdByActor: z.lazy(() => CreatedByActor$outboundSchema),
    referencedActorType:
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataReferencedActorType$outboundSchema,
    referencedActorId: z.nullable(z.string()),
    attributeType: AttributeType$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      activeFrom: "active_from",
      activeUntil: "active_until",
      createdByActor: "created_by_actor",
      referencedActorType: "referenced_actor_type",
      referencedActorId: "referenced_actor_id",
      attributeType: "attribute_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1ToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$outboundSchema
      .parse(getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1FromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$inboundSchema
    ),
    z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$inboundSchema
    ),
    z.lazy(() => Ten$inboundSchema),
    z.lazy(() => Thirteen$inboundSchema),
    z.lazy(() => Fourteen$inboundSchema),
    z.lazy(() => Fifteen$inboundSchema),
    z.lazy(() => Sixteen$inboundSchema),
    z.lazy(() => Seventeen$inboundSchema),
    z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$inboundSchema
    ),
    z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$inboundSchema
    ),
    z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$inboundSchema
    ),
    z.lazy(() => Seven$inboundSchema),
    z.lazy(() => Eight$inboundSchema),
    z.lazy(() => Eleven$inboundSchema),
    z.lazy(() => Twelve$inboundSchema),
    z.lazy(() => Six$inboundSchema),
    z.lazy(() => Nine$inboundSchema),
  ]);

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$Outbound =
  | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$Outbound
  | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$Outbound
  | Ten$Outbound
  | Thirteen$Outbound
  | Fourteen$Outbound
  | Fifteen$Outbound
  | Sixteen$Outbound
  | Seventeen$Outbound
  | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$Outbound
  | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$Outbound
  | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$Outbound
  | Seven$Outbound
  | Eight$Outbound
  | Eleven$Outbound
  | Twelve$Outbound
  | Six$Outbound
  | Nine$Outbound;

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData
  > = z.union([
    z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$outboundSchema
    ),
    z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$outboundSchema
    ),
    z.lazy(() => Ten$outboundSchema),
    z.lazy(() => Thirteen$outboundSchema),
    z.lazy(() => Fourteen$outboundSchema),
    z.lazy(() => Fifteen$outboundSchema),
    z.lazy(() => Sixteen$outboundSchema),
    z.lazy(() => Seventeen$outboundSchema),
    z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$outboundSchema
    ),
    z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$outboundSchema
    ),
    z.lazy(() =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$outboundSchema
    ),
    z.lazy(() => Seven$outboundSchema),
    z.lazy(() => Eight$outboundSchema),
    z.lazy(() => Eleven$outboundSchema),
    z.lazy(() => Twelve$outboundSchema),
    z.lazy(() => Six$outboundSchema),
    z.lazy(() => Nine$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$outboundSchema
      .parse(getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesDataFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData' from JSON`,
  );
}

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$inboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.array(
      z.union([
        z.lazy(() =>
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$inboundSchema
        ),
        z.lazy(() =>
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$inboundSchema
        ),
        z.lazy(() => Ten$inboundSchema),
        z.lazy(() => Thirteen$inboundSchema),
        z.lazy(() => Fourteen$inboundSchema),
        z.lazy(() => Fifteen$inboundSchema),
        z.lazy(() => Sixteen$inboundSchema),
        z.lazy(() => Seventeen$inboundSchema),
        z.lazy(() =>
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$inboundSchema
        ),
        z.lazy(() =>
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$inboundSchema
        ),
        z.lazy(() =>
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$inboundSchema
        ),
        z.lazy(() => Seven$inboundSchema),
        z.lazy(() => Eight$inboundSchema),
        z.lazy(() => Eleven$inboundSchema),
        z.lazy(() => Twelve$inboundSchema),
        z.lazy(() => Six$inboundSchema),
        z.lazy(() => Nine$inboundSchema),
      ]),
    ),
  });

/** @internal */
export type GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$Outbound =
  {
    data: Array<
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$Outbound
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$Outbound
      | Ten$Outbound
      | Thirteen$Outbound
      | Fourteen$Outbound
      | Fifteen$Outbound
      | Sixteen$Outbound
      | Seventeen$Outbound
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$Outbound
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$Outbound
      | GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$Outbound
      | Seven$Outbound
      | Eight$Outbound
      | Eleven$Outbound
      | Twelve$Outbound
      | Six$Outbound
      | Nine$Outbound
    >;
  };

/** @internal */
export const GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$outboundSchema:
  z.ZodType<
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$Outbound,
    z.ZodTypeDef,
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody
  > = z.object({
    data: z.array(
      z.union([
        z.lazy(() =>
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData2$outboundSchema
        ),
        z.lazy(() =>
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData4$outboundSchema
        ),
        z.lazy(() => Ten$outboundSchema),
        z.lazy(() => Thirteen$outboundSchema),
        z.lazy(() => Fourteen$outboundSchema),
        z.lazy(() => Fifteen$outboundSchema),
        z.lazy(() => Sixteen$outboundSchema),
        z.lazy(() => Seventeen$outboundSchema),
        z.lazy(() =>
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData1$outboundSchema
        ),
        z.lazy(() =>
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData3$outboundSchema
        ),
        z.lazy(() =>
          GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesData5$outboundSchema
        ),
        z.lazy(() => Seven$outboundSchema),
        z.lazy(() => Eight$outboundSchema),
        z.lazy(() => Eleven$outboundSchema),
        z.lazy(() => Twelve$outboundSchema),
        z.lazy(() => Six$outboundSchema),
        z.lazy(() => Nine$outboundSchema),
      ]),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$ {
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$inboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$outboundSchema;
  /** @deprecated use `GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$Outbound` instead. */
  export type Outbound =
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$Outbound;
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBodyToJSON(
  getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody:
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody,
): string {
  return JSON.stringify(
    GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$outboundSchema
      .parse(
        getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody,
      ),
  );
}

export function getV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsObjectRecordsRecordIdAttributesAttributeValuesResponseBody' from JSON`,
  );
}
