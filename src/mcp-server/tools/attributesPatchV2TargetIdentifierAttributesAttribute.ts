/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { attributesPatchV2TargetIdentifierAttributesAttribute } from "../../funcs/attributesPatchV2TargetIdentifierAttributesAttribute.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations.PatchV2TargetIdentifierAttributesAttributeRequest$inboundSchema,
};

export const tool$attributesPatchV2TargetIdentifierAttributesAttribute:
  ToolDefinition<typeof args> = {
    name: "attributes-patch-v2-target-identifier-attributes-attribute",
    description: `Update an attribute

Updates a single attribute on a given object or list.

Required scopes: \`object_configuration:read-write\`.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await attributesPatchV2TargetIdentifierAttributesAttribute(
          client,
          args.request,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
