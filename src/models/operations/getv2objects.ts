/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Success
 */
export type GetV2ObjectsResponseBody = {
  data: Array<components.ObjectT>;
};

/** @internal */
export const GetV2ObjectsResponseBody$inboundSchema: z.ZodType<
  GetV2ObjectsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(components.ObjectT$inboundSchema),
});

/** @internal */
export type GetV2ObjectsResponseBody$Outbound = {
  data: Array<components.ObjectT$Outbound>;
};

/** @internal */
export const GetV2ObjectsResponseBody$outboundSchema: z.ZodType<
  GetV2ObjectsResponseBody$Outbound,
  z.ZodTypeDef,
  GetV2ObjectsResponseBody
> = z.object({
  data: z.array(components.ObjectT$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ObjectsResponseBody$ {
  /** @deprecated use `GetV2ObjectsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetV2ObjectsResponseBody$inboundSchema;
  /** @deprecated use `GetV2ObjectsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetV2ObjectsResponseBody$outboundSchema;
  /** @deprecated use `GetV2ObjectsResponseBody$Outbound` instead. */
  export type Outbound = GetV2ObjectsResponseBody$Outbound;
}

export function getV2ObjectsResponseBodyToJSON(
  getV2ObjectsResponseBody: GetV2ObjectsResponseBody,
): string {
  return JSON.stringify(
    GetV2ObjectsResponseBody$outboundSchema.parse(getV2ObjectsResponseBody),
  );
}

export function getV2ObjectsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetV2ObjectsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetV2ObjectsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetV2ObjectsResponseBody' from JSON`,
  );
}
